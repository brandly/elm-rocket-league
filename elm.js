!function(n){"use strict";function e(n,e,r){return r.a=n,r.f=e,r}function h(r){return e(2,r,function(e){return function(n){return r(e,n)}})}function s(t){return e(3,t,function(r){return function(e){return function(n){return t(r,e,n)}}})}function l(o){return e(4,o,function(t){return function(r){return function(e){return function(n){return o(t,r,e,n)}}}})}function r(a){return e(5,a,function(o){return function(t){return function(r){return function(e){return function(n){return a(o,t,r,e,n)}}}}})}function t(i){return e(6,i,function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return i(a,o,t,r,e,n)}}}}}})}function o(c){return e(7,c,function(i){return function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return c(i,a,o,t,r,e,n)}}}}}}})}function $(u){return e(8,u,function(c){return function(i){return function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return u(c,i,a,o,t,r,e,n)}}}}}}}})}function a(l){return e(9,l,function(u){return function(c){return function(i){return function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return l(u,c,i,a,o,t,r,e,n)}}}}}}}}})}function X(n,e,r){return 2===n.a?n.f(e,r):n(e)(r)}function D(n,e,r,t){return 3===n.a?n.f(e,r,t):n(e)(r)(t)}function z(n,e,r,t,o){return 4===n.a?n.f(e,r,t,o):n(e)(r)(t)(o)}function N(n,e,r,t,o,a){return 5===n.a?n.f(e,r,t,o,a):n(e)(r)(t)(o)(a)}function M(n,e,r,t,o,a,i){return 6===n.a?n.f(e,r,t,o,a,i):n(e)(r)(t)(o)(a)(i)}function S(n,e,r,t,o,a,i,c){return 7===n.a?n.f(e,r,t,o,a,i,c):n(e)(r)(t)(o)(a)(i)(c)}function m(n,e,r,t,o,a,i,c,u){return 8===n.a?n.f(e,r,t,o,a,i,c,u):n(e)(r)(t)(o)(a)(i)(c)(u)}function T(n,e,r,t,o,a,i,c,u,l){return 9===n.a?n.f(e,r,t,o,a,i,c,u,l):n(e)(r)(t)(o)(a)(i)(c)(u)(l)}function y(n,e){for(var r,t=[],o=i(n,e,0,t);o&&(r=t.pop());o=i(r.a,r.b,0,t));return o}function i(n,e,r,t){if(n===e)return!0;if("object"!=typeof n||null===n||null===e)return"function"==typeof n&&E(5),!1;if(100<r)return t.push({a:n,b:e}),!0;for(var o in n.$<0&&(n=Gr(n),e=Gr(e)),n)if(!i(n[o],e[o],r+1,t))return!1;return!0}var c=h(y);function x(n,e,r){if("object"!=typeof n)return n===e?0:n<e?-1:1;if(void 0===n.$)return(r=x(n.a,e.a))||(r=x(n.b,e.b))?r:x(n.c,e.c);for(;n.b&&e.b&&!(r=x(n.a,e.a));n=n.b,e=e.b);return r||(n.b?1:e.b?-1:0)}h(function(n,e){return!y(n,e)}),h(function(n,e){return x(n,e)<0}),h(function(n,e){return x(n,e)<1}),h(function(n,e){return 0<x(n,e)});var u=h(function(n,e){return 0<=x(n,e)}),f=h(function(n,e){e=x(n,e);return e<0?Or:e?Yr:Hr}),d=0;function P(n,e){var r,t={};for(r in n)t[r]=n[r];for(r in e)t[r]=e[r];return t}function v(n,e){if("string"==typeof n)return n+e;if(!n.b)return e;var r={$:1,a:n.a,b:e};n=n.b;for(var t=r;n.b;n=n.b)t=t.b={$:1,a:n.a,b:e};return r}h(v);var R={$:0};function p(n,e){return{$:1,a:n,b:e}}var b=h(p);function C(n){for(var e=R,r=n.length;r--;)e={$:1,a:n[r],b:e};return e}function g(n){for(var e=[];n.b;n=n.b)e.push(n.a);return e}var w=s(function(n,e,r){for(var t=[];e.b&&r.b;e=e.b,r=r.b)t.push(X(n,e.a,r.a));return C(t)}),L=(l(function(n,e,r,t){for(var o=[];e.b&&r.b&&t.b;e=e.b,r=r.b,t=t.b)o.push(D(n,e.a,r.a,t.a));return C(o)}),r(function(n,e,r,t,o){for(var a=[];e.b&&r.b&&t.b&&o.b;e=e.b,r=r.b,t=t.b,o=o.b)a.push(z(n,e.a,r.a,t.a,o.a));return C(a)}),t(function(n,e,r,t,o,a){for(var i=[];e.b&&r.b&&t.b&&o.b&&a.b;e=e.b,r=r.b,t=t.b,o=o.b,a=a.b)i.push(N(n,e.a,r.a,t.a,o.a,a.a));return C(i)}),h(function(r,n){return C(g(n).sort(function(n,e){return x(r(n),r(e))}))}));h(function(r,n){return C(g(n).sort(function(n,e){e=X(r,n,e);return e===Hr?0:e===Or?-1:1}))});var V=s(function(n,e,r){for(var t=Array(n),o=0;o<n;o++)t[o]=r(e+o);return t}),_=h(function(n,e){for(var r=Array(n),t=0;t<n&&e.b;t++)r[t]=e.a,e=e.b;return r.length=t,{a:r,b:e}}),A=h(function(n,e){return e[n]}),F=s(function(n,e,r){for(var t=r.length,o=Array(t),a=0;a<t;a++)o[a]=r[a];return o[n]=e,o}),I=(h(function(n,e){for(var r=e.length,t=Array(r+1),o=0;o<r;o++)t[o]=e[o];return t[r]=n,t}),s(function(n,e,r){for(var t=r.length,o=0;o<t;o++)e=X(n,r[o],e);return e}),s(function(n,e,r){for(var t=r.length-1;0<=t;t--)e=X(n,r[t],e);return e})),k=h(function(n,e){for(var r=e.length,t=Array(r),o=0;o<r;o++)t[o]=n(e[o]);return t});function E(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}s(function(n,e,r){for(var t=r.length,o=Array(t),a=0;a<t;a++)o[a]=X(n,e+a,r[a]);return o}),s(function(n,e,r){return r.slice(n,e)}),s(function(n,e,r){var t=e.length,o=n-t;r.length<o&&(o=r.length);for(var a=Array(t+o),i=0;i<t;i++)a[i]=e[i];for(i=0;i<o;i++)a[i+t]=r[i];return a}),h(function(n,e){return e}),h(function(n,e){return console.log(n+": <internals>"),e});var B=h(function(n,e){return n+e}),U=(h(function(n,e){return n-e}),h(function(n,e){return n*e}),h(function(n,e){return n/e}),h(function(n,e){return n/e|0}),h(Math.pow)),q=(h(function(n,e){return e%n}),h(function(n,e){e%=n;return 0===n?E(11):0<e&&n<0||e<0&&0<n?e+n:e})),W=Math.cos,j=Math.sin,H=Math.tan,Y=h(Math.atan2),O=Math.ceil,Q=Math.floor,Z=Math.round,G=Math.sqrt,J=Math.log,K=isNaN;h(function(n,e){return n&&e}),h(function(n,e){return n||e}),h(function(n,e){return n!==e}),h(function(n,e){return n+e}),h(function(n,e){return n+e}),h(function(n,e){for(var r=e.length,t=Array(r),o=0;o<r;){var a=e.charCodeAt(o);a<55296||56319<a?(t[o]=n(e[o]),o++):(t[o]=n(e[o]+e[o+1]),o+=2)}return t.join("")}),h(function(n,e){for(var r=[],t=e.length,o=0;o<t;){var a=e[o],i=e.charCodeAt(o);o++,i<55296||56319<i||(a+=e[o],o++),n(a)&&r.push(a)}return r.join("")}),s(function(n,e,r){for(var t=r.length,o=0;o<t;){var a=r[o],i=r.charCodeAt(o);o++,i<55296||56319<i||(a+=r[o],o++),e=X(n,a,e)}return e}),s(function(n,e,r){for(var t=r.length;t--;){var o=r[t],a=r.charCodeAt(t);a<56320||57343<a||(o=r[--t]+o),e=X(n,o,e)}return e});var nn=h(function(n,e){return e.split(n)}),en=h(function(n,e){return e.join(n)}),rn=s(function(n,e,r){return r.slice(n,e)});h(function(n,e){for(var r=e.length;r--;){var t=e[r],o=e.charCodeAt(r);if(o<56320||57343<o||(t=e[--r]+t),n(t))return!0}return!1});var tn=h(function(n,e){for(var r=e.length;r--;){var t=e[r],o=e.charCodeAt(r);if(o<56320||57343<o||(t=e[--r]+t),!n(t))return!1}return!0}),on=h(function(n,e){return!!~e.indexOf(n)}),an=h(function(n,e){return 0==e.indexOf(n)}),cn=(h(function(n,e){return n.length<=e.length&&e.lastIndexOf(n)==e.length-n.length}),h(function(n,e){var r=n.length;if(r<1)return R;for(var t=0,o=[];-1<(t=e.indexOf(n,t));)o.push(t),t+=r;return C(o)}));function un(n){return n+""}var ln={$:2,b:function(n){return"number"!=typeof n||(n<=-2147483647||2147483647<=n||(0|n)!==n)&&(!isFinite(n)||n%1)?yn("an INT",n):at(n)}},fn={$:2,b:function(n){return"boolean"==typeof n?at(n):yn("a BOOL",n)}},sn={$:2,b:function(n){return"string"==typeof n?at(n):n instanceof String?at(n+""):yn("a STRING",n)}},dn=h(function(n,e){return{$:6,d:n,b:e}});h(function(n,e){return{$:7,e:n,b:e}});var vn=h(function(n,e){return{$:10,b:e,h:n}}),mn=h(function(n,e){return{$:9,f:n,g:[e]}}),pn=s(function(n,e,r){return{$:9,f:n,g:[e,r]}}),bn=(l(function(n,e,r,t){return{$:9,f:n,g:[e,r,t]}}),r(function(n,e,r,t,o){return{$:9,f:n,g:[e,r,t,o]}}),t(function(n,e,r,t,o,a){return{$:9,f:n,g:[e,r,t,o,a]}}),o(function(n,e,r,t,o,a,i){return{$:9,f:n,g:[e,r,t,o,a,i]}}),$(function(n,e,r,t,o,a,i,c){return{$:9,f:n,g:[e,r,t,o,a,i,c]}}),a(function(n,e,r,t,o,a,i,c,u){return{$:9,f:n,g:[e,r,t,o,a,i,c,u]}}),h(function(n,e){try{return gn(n,JSON.parse(e))}catch(n){return et(X(rt,"This is not valid JSON! "+n.message,e))}}),h(gn));function gn(n,e){switch(n.$){case 2:return n.b(e);case 5:return null===e?at(n.c):yn("null",e);case 3:return xn(e)?hn(n.b,e,C):yn("a LIST",e);case 4:return xn(e)?hn(n.b,e,Sn):yn("an ARRAY",e);case 6:var r=n.d;if("object"!=typeof e||null===e||!(r in e))return yn("an OBJECT with a field named `"+r+"`",e);var t=gn(n.b,e[r]);return qt(t)?t:et(X(tt,r,t.a));case 7:r=n.e;if(!xn(e))return yn("an ARRAY",e);if(e.length<=r)return yn("a LONGER array. Need index "+r+" but only see "+e.length+" entries",e);t=gn(n.b,e[r]);return qt(t)?t:et(X(ot,r,t.a));case 8:if("object"!=typeof e||null===e||xn(e))return yn("an OBJECT",e);var o,a=R;for(o in e)if(e.hasOwnProperty(o)){t=gn(n.b,e[o]);if(!qt(t))return et(X(tt,o,t.a));a={$:1,a:{a:o,b:t.a},b:a}}return at(yt(a));case 9:for(var i=n.f,c=n.g,u=0;u<c.length;u++){t=gn(c[u],e);if(!qt(t))return t;i=i(t.a)}return at(i);case 10:t=gn(n.b,e);return qt(t)?gn(n.h(t.a),e):t;case 11:for(var l=R,f=n.g;f.b;f=f.b){t=gn(f.a,e);if(qt(t))return t;l={$:1,a:t.a,b:l}}return et(it(yt(l)));case 1:return et(X(rt,n.a,e));case 0:return at(n.a)}}function hn(n,e,r){for(var t=e.length,o=Array(t),a=0;a<t;a++){var i=gn(n,e[a]);if(!qt(i))return et(X(ot,a,i.a));o[a]=i.a}return at(r(o))}function xn(n){return Array.isArray(n)||"undefined"!=typeof FileList&&n instanceof FileList}function Sn(e){return X(Ut,e.length,function(n){return e[n]})}function yn(n,e){return et(X(rt,"Expecting "+n,e))}function Pn(n,e){if(n===e)return!0;if(n.$!==e.$)return!1;switch(n.$){case 0:case 1:return n.a===e.a;case 2:return n.b===e.b;case 5:return n.c===e.c;case 3:case 4:case 8:return Pn(n.b,e.b);case 6:return n.d===e.d&&Pn(n.b,e.b);case 7:return n.e===e.e&&Pn(n.b,e.b);case 9:return n.f===e.f&&Rn(n.g,e.g);case 10:return n.h===e.h&&Pn(n.b,e.b);case 11:return Rn(n.g,e.g)}}function Rn(n,e){var r=n.length;if(r!==e.length)return!1;for(var t=0;t<r;t++)if(!Pn(n[t],e[t]))return!1;return!0}var Cn=h(function(n,e){return JSON.stringify(e,null,n)+""});function Mn(n){return n}function Tn(n){return{$:0,a:n}}s(function(n,e,r){return r[n]=e,r});var wn=h(function(n,e){return{$:3,b:n,d:e}}),Ln=h(function(n,e){return{$:4,b:n,d:e}}),$n=0;function Xn(n){n={$:0,e:$n++,f:n,g:null,h:[]};return An(n),n}function Dn(e){return{$:2,b:function(n){n({$:0,a:Xn(e)})},c:null}}function zn(n,e){n.h.push(e),An(n)}var Nn=h(function(e,r){return{$:2,b:function(n){zn(e,r),n({$:0,a:d})},c:null}}),Vn=!1,_n=[];function An(n){if(_n.push(n),!Vn){for(Vn=!0;n=_n.shift();)!function(e){for(;e.f;){var n=e.f.$;if(0===n||1===n){for(;e.g&&e.g.$!==n;)e.g=e.g.i;if(!e.g)return;e.f=e.g.b(e.f.a),e.g=e.g.i}else{if(2===n)return e.f.c=e.f.b(function(n){e.f=n,An(e)});if(5===n){if(0===e.h.length)return;e.f=e.f.b(e.h.shift())}else e.g={$:3===n?0:1,b:e.f.b,i:e.g},e.f=e.f.d}}}(n);Vn=!1}}function Fn(n,e,r,t,o,a){e=X(bn,n,e?e.flags:void 0);qt(e)||E(2);var i={},e=r(e.a),c=e.a,u=a(l,c),a=function(n,e){var r,t;for(t in In){var o=In[t];o.a&&((r=r||{})[t]=o.a(t,e)),n[t]=function(n,e){var t={g:e,h:void 0},o=n.c,a=n.d,i=n.e,c=n.f;return t.h=Xn(X(wn,function n(r){return X(wn,n,{$:5,b:function(n){var e=n.a;return 0===n.$?D(a,t,e,r):i&&c?z(o,t,e.i,e.j,r):D(o,t,i?e.i:e.j,r)}})},n.b))}(o,e)}return r}(i,l);function l(n,e){n=X(t,n,c);u(c=n.a,e),Hn(i,n.b,o(c))}return Hn(i,e.b,o(c)),a?{ports:a}:{}}l(function(n,e,r,t){return Fn(e,t,n.gt,n.gV,n.gS,function(){return function(){}})});var In={},kn=h(function(e,r){return{$:2,b:function(n){e.g(r),n({$:0,a:d})},c:null}}),En=h(function(n,e){return X(Nn,n.h,{$:0,a:e})});function Bn(e){return function(n){return{$:1,k:e,l:n}}}function Un(n){return{$:2,m:n}}h(function(n,e){return{$:3,n:n,o:e}});var qn,Wn=[],jn=!1;function Hn(n,e,r){if(Wn.push({p:n,q:e,r:r}),!jn){jn=!0;for(var o;o=Wn.shift();)!function(n,e){var r,t={};for(r in Yn(!0,o.q,t,null),Yn(!1,e,t,null),n)zn(n[r],{$:"fx",a:t[r]||{i:R,j:R}})}(o.p,o.r);jn=!1}}function Yn(n,e,r,t){switch(e.$){case 1:var o=e.k,a=function(n,e,r,t){return X(n?In[e].e:In[e].f,function(n){for(var e=r;e;e=e.t)n=e.s(n);return n},t)}(n,o,t,e.l);return void(r[o]=function(n,e,r){return r=r||{i:R,j:R},n?r.i={$:1,a:e,b:r.i}:r.j={$:1,a:e,b:r.j},r}(n,a,r[o]));case 2:for(var i=e.m;i.b;i=i.b)Yn(n,i.a,r,t);return;case 3:return void Yn(n,e.o,r,{s:e.n,t:t})}}h(function(n,e){return e}),h(function(e,r){return function(n){return e(r(n))}});var On="undefined"!=typeof document?document:{};function Qn(n){return{$:0,a:n}}l(function(n,e,r,t){t=t.node;return t.parentNode.replaceChild(ce(n,function(){}),t),{}});var Zn=h(function(a,i){return h(function(n,e){for(var r=[],t=0;e.b;e=e.b){var o=e.a;t+=o.b||0,r.push(o)}return t+=r.length,{$:1,c:i,d:ae(n),e:r,f:a,b:t}})})(void 0),Gn=h(function(a,i){return h(function(n,e){for(var r=[],t=0;e.b;e=e.b){var o=e.a;t+=o.b.b||0,r.push(o)}return t+=r.length,{$:2,c:i,d:ae(n),e:r,f:a,b:t}})})(void 0);h(function(n,e){return{$:4,j:n,k:e,b:1+(e.b||0)}}),h(function(n,e){return{$:5,l:[n,e],m:function(){return n(e)},k:void 0}}),s(function(n,e,r){return{$:5,l:[n,e,r],m:function(){return X(n,e,r)},k:void 0}}),l(function(n,e,r,t){return{$:5,l:[n,e,r,t],m:function(){return D(n,e,r,t)},k:void 0}}),r(function(n,e,r,t,o){return{$:5,l:[n,e,r,t,o],m:function(){return z(n,e,r,t,o)},k:void 0}}),t(function(n,e,r,t,o,a){return{$:5,l:[n,e,r,t,o,a],m:function(){return N(n,e,r,t,o,a)},k:void 0}}),o(function(n,e,r,t,o,a,i){return{$:5,l:[n,e,r,t,o,a,i],m:function(){return M(n,e,r,t,o,a,i)},k:void 0}}),$(function(n,e,r,t,o,a,i,c){return{$:5,l:[n,e,r,t,o,a,i,c],m:function(){return S(n,e,r,t,o,a,i,c)},k:void 0}}),a(function(n,e,r,t,o,a,i,c,u){return{$:5,l:[n,e,r,t,o,a,i,c,u],m:function(){return m(n,e,r,t,o,a,i,c,u)},k:void 0}});var Jn=h(function(n,e){return{$:"a0",n:n,o:e}}),Kn=h(function(n,e){return{$:"a1",n:n,o:e}}),ne=h(function(n,e){return{$:"a2",n:n,o:e}}),ee=h(function(n,e){return{$:"a3",n:n,o:e}});s(function(n,e,r){return{$:"a4",n:e,o:{f:n,o:r}}}),h(function(n,e){return"a0"===e.$?X(Jn,e.n,function(n,e){var r=Yt(e);return{$:e.$,a:r?D(jt,r<3?te:oe,Ht(n),e.a):X(Wt,n,e.a)}}(n,e.o)):e});var re,te=h(function(n,e){return{a:n(e.a),b:e.b}}),oe=h(function(n,e){return{aJ:n(e.aJ),dZ:e.dZ,dN:e.dN}});function ae(n){for(var e={};n.b;n=n.b){var r=n.a,t=r.$,o=r.n,a=r.o;"a2"!==t?(r=e[t]||(e[t]={}),"a3"===t&&"class"===o?ie(r,o,a):r[o]=a):"className"===o?ie(e,o,a):e[o]=a}return e}function ie(n,e,r){var t=n[e];n[e]=t?t+" "+r:r}function ce(n,e){var r=n.$;if(5===r)return ce(n.k||(n.k=n.m()),e);if(0===r)return On.createTextNode(n.a);if(4===r){for(var t=n.k,o=n.j;4===t.$;)"object"!=typeof o?o=[o,t.j]:o.push(t.j),t=t.k;var a={j:o,p:e};return(i=ce(t,a)).elm_event_node_ref=a,i}if(3===r)return ue(i=n.h(n.g),e,n.d),i;var i=n.f?On.createElementNS(n.f,n.c):On.createElement(n.c);qn&&"a"==n.c&&i.addEventListener("click",qn(i)),ue(i,e,n.d);for(var c=n.e,u=0;u<c.length;u++)i.appendChild(ce(1===r?c[u]:c[u].b,e));return i}function ue(n,e,r){for(var t in r){var o=r[t];"a1"===t?function(n,e){var r,t=n.style;for(r in e)t[r]=e[r]}(n,o):"a0"===t?function(n,e,r){var t,o=n.elmFs||(n.elmFs={});for(t in r){var a=r[t],i=o[t];if(a){if(i){if(i.q.$===a.$){i.q=a;continue}n.removeEventListener(t,i)}i=function(u,n){function l(n){var e=l.q,r=gn(e.a,n);if(qt(r)){for(var t,o=Yt(e),e=r.a,a=o?o<3?e.a:e.aJ:e,r=1==o?e.b:3==o&&e.dZ,i=(r&&n.stopPropagation(),(2==o?e.b:3==o&&e.dN)&&n.preventDefault(),u);t=i.j;){if("function"==typeof t)a=t(a);else for(var c=t.length;c--;)a=t[c](a);i=i.p}i(a,r)}}return l.q=n,l}(e,a),n.addEventListener(t,i,re&&{passive:Yt(a)<2}),o[t]=i}else n.removeEventListener(t,i),o[t]=void 0}}(n,e,o):"a3"===t?function(n,e){for(var r in e){var t=e[r];void 0!==t?n.setAttribute(r,t):n.removeAttribute(r)}}(n,o):"a4"===t?function(n,e){for(var r in e){var t=e[r],o=t.f,t=t.o;void 0!==t?n.setAttributeNS(o,r,t):n.removeAttributeNS(o,r)}}(n,o):("value"!==t&&"checked"!==t||n[t]!==o)&&(n[t]=o)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){re=!0}}))}catch(n){}function le(n,e){var r=[];return se(n,e,r,0),r}function fe(n,e,r,t){t={$:e,r:r,s:t,t:void 0,u:void 0};return n.push(t),t}function se(n,e,r,t){if(n!==e){var o=n.$,a=e.$;if(o!==a){if(1!==o||2!==a)return void fe(r,0,t,e);e=function(n){for(var e=n.e,r=e.length,t=Array(r),o=0;o<r;o++)t[o]=e[o].b;return{$:1,c:n.c,d:n.d,e:t,f:n.f,b:n.b}}(e),a=1}switch(a){case 5:for(var i=n.l,c=e.l,u=i.length,l=u===c.length;l&&u--;)l=i[u]===c[u];if(l)return void(e.k=n.k);e.k=e.m();var f=[];return se(n.k,e.k,f,0),void(0<f.length&&fe(r,1,t,f));case 4:for(var s=n.j,d=e.j,v=!1,m=n.k;4===m.$;)v=!0,"object"!=typeof s?s=[s,m.j]:s.push(m.j),m=m.k;for(var p=e.k;4===p.$;)v=!0,"object"!=typeof d?d=[d,p.j]:d.push(p.j),p=p.k;return v&&s.length!==d.length?void fe(r,0,t,e):((v?function(n,e){for(var r=0;r<n.length;r++)if(n[r]!==e[r])return!1;return!0}(s,d):s===d)||fe(r,2,t,d),void se(m,p,r,t+1));case 0:return void(n.a!==e.a&&fe(r,3,t,e.a));case 1:return void de(n,e,r,t,me);case 2:return void de(n,e,r,t,pe);case 3:if(n.h!==e.h)return void fe(r,0,t,e);f=ve(n.d,e.d);f&&fe(r,4,t,f);f=e.i(n.g,e.g);return void(f&&fe(r,5,t,f))}}}function de(n,e,r,t,o){var a;n.c===e.c&&n.f===e.f?((a=ve(n.d,e.d))&&fe(r,4,t,a),o(n,e,r,t)):fe(r,0,t,e)}function ve(n,e,r){var t,o,a,i,c;for(o in n)"a1"!==o&&"a0"!==o&&"a3"!==o&&"a4"!==o?o in e?(a=n[o])===(i=e[o])&&"value"!==o&&"checked"!==o||"a0"===r&&function(n,e){return n.$==e.$&&Pn(n.a,e.a)}(a,i)||((t=t||{})[o]=i):(t=t||{})[o]=r?"a1"===r?"":"a0"===r||"a3"===r?void 0:{f:n[o].f,o:void 0}:"string"==typeof n[o]?"":null:(i=ve(n[o],e[o]||{},o))&&((t=t||{})[o]=i);for(c in e)c in n||((t=t||{})[c]=e[c]);return t}function me(n,e,r,t){var o=n.e,a=e.e,n=o.length,e=a.length;e<n?fe(r,6,t,{v:e,i:n-e}):n<e&&fe(r,7,t,{v:n,e:a});for(var i=n<e?n:e,c=0;c<i;c++){var u=o[c];se(u,a[c],r,++t),t+=u.b||0}}function pe(n,e,r,t){for(var o=[],a={},i=[],c=n.e,u=e.e,l=c.length,f=u.length,s=0,d=0,v=t;s<l&&d<f;){var m,p=(m=c[s]).a,b=(w=u[d]).a,g=m.b,h=w.b,x=void 0,S=void 0;if(p!==b){var y,P,R,C,M=c[s+1],T=u[d+1];if(M&&(P=M.b,S=b===(y=M.a)),T&&(C=T.b,x=p===(R=T.a)),x&&S)se(g,C,o,++v),ge(a,o,p,h,d,i),v+=g.b||0,he(a,o,p,P,++v),v+=P.b||0,s+=2,d+=2;else if(x)v++,ge(a,o,b,h,d,i),se(g,C,o,v),v+=g.b||0,s+=1,d+=2;else if(S)he(a,o,p,g,++v),v+=g.b||0,se(P,h,o,++v),v+=P.b||0,s+=2,d+=1;else{if(!M||y!==R)break;he(a,o,p,g,++v),ge(a,o,b,h,d,i),v+=g.b||0,se(P,C,o,++v),v+=P.b||0,s+=2,d+=2}}else se(g,h,o,++v),v+=g.b||0,s++,d++}for(;s<l;)he(a,o,(m=c[s]).a,g=m.b,++v),v+=g.b||0,s++;for(;d<f;){var w,L=L||[];ge(a,o,(w=u[d]).a,w.b,void 0,L),d++}(0<o.length||0<i.length||L)&&fe(r,8,t,{w:o,x:i,y:L})}var be="_elmW6BL";function ge(n,e,r,t,o,a){var i=n[r];if(!i)return a.push({r:o,A:i={c:0,z:t,r:o,s:void 0}}),void(n[r]=i);if(1===i.c){a.push({r:o,A:i}),i.c=2;var c=[];return se(i.z,t,c,i.r),i.r=o,void(i.s.s={w:c,A:i})}ge(n,e,r+be,t,o,a)}function he(n,e,r,t,o){var a=n[r];if(a){if(0===a.c){a.c=2;var i=[];return se(t,a.z,i,o),void fe(e,9,o,{w:i,A:a})}he(n,e,r+be,t,o)}else{e=fe(e,9,o,void 0);n[r]={c:1,z:t,r:o,s:e}}}function xe(n,e,r,t){!function n(e,r,t,o,a,i,c){var u=t[o];var l=u.r;for(;l===a;){var f,s=u.$;if(1===s?xe(e,r.k,u.s,c):8===s?(u.t=e,u.u=c,0<(f=u.s.w).length&&n(e,r,f,0,a,i,c)):9===s?(u.t=e,u.u=c,(s=u.s)&&(s.A.s=e,0<(f=s.w).length&&n(e,r,f,0,a,i,c))):(u.t=e,u.u=c),!(u=t[++o])||(l=u.r)>i)return o}var d=r.$;if(4===d){for(var v=r.k;4===v.$;)v=v.k;return n(e,v,t,o,a+1,i,e.elm_event_node_ref)}var m=r.e;var p=e.childNodes;for(var b=0;b<m.length;b++){var g=1===d?m[b]:m[b].b,h=++a+(g.b||0);if(a<=l&&l<=h&&(o=n(p[b],g,t,o,a,h,c),!(u=t[o])||(l=u.r)>i))return o;a=h}return o}(n,e,r,0,0,e.b,t)}function Se(n,e,r,t){return 0===r.length?n:(xe(n,e,r,t),ye(n,r))}function ye(n,e){for(var r=0;r<e.length;r++){var t=e[r],o=t.t,t=function(n,e){switch(e.$){case 0:return function(n,e,r){var t=n.parentNode,r=ce(e,r);r.elm_event_node_ref||(r.elm_event_node_ref=n.elm_event_node_ref);t&&r!==n&&t.replaceChild(r,n);return r}(n,e.s,e.u);case 4:return ue(n,e.u,e.s),n;case 3:return n.replaceData(0,n.length,e.s),n;case 1:return ye(n,e.s);case 2:return n.elm_event_node_ref?n.elm_event_node_ref.j=e.s:n.elm_event_node_ref={j:e.s,p:e.u},n;case 6:for(var r=e.s,t=0;t<r.i;t++)n.removeChild(n.childNodes[r.v]);return n;case 7:for(var o=(r=e.s).e,a=n.childNodes[t=r.v];t<o.length;t++)n.insertBefore(ce(o[t],e.u),a);return n;case 9:if(!(r=e.s))return n.parentNode.removeChild(n),n;var i=r.A;return void 0!==i.r&&n.parentNode.removeChild(n),i.s=ye(n,r.w),n;case 8:return function(n,e){var r=e.s,t=function(n,e){if(!n)return;for(var r=On.createDocumentFragment(),t=0;t<n.length;t++){var o=n[t].A;r.appendChild(2===o.c?o.s:ce(o.z,e.u))}return r}(r.y,e);n=ye(n,r.w);for(var o=r.x,a=0;a<o.length;a++){var i=o[a],c=i.A,c=2===c.c?c.s:ce(c.z,e.u);n.insertBefore(c,n.childNodes[i.r])}t&&n.appendChild(t);return n}(n,e);case 5:return e.s(n);default:E(10)}}(o,t);o===n&&(n=t)}return n}function Pe(n){if(3===n.nodeType)return{$:0,a:n.textContent};if(1!==n.nodeType)return{$:0,a:""};for(var e=R,r=n.attributes,t=r.length;t--;)var o=r[t],e={$:1,a:X(ee,o.name,o.value),b:e};for(var a=n.tagName.toLowerCase(),i=R,c=n.childNodes,t=c.length;t--;)i={$:1,a:Pe(c[t]),b:i};return D(Zn,a,e,i)}var Re=l(function(e,n,r,i){return Fn(n,i,e.gt,e.gV,e.gS,function(r,n){var t=e.gX,o=i.node,a=Pe(o);return Te(n,function(n){var e=t(n),n=le(a,e);o=Se(o,a,n,r),a=e})})}),Ce=(l(function(e,n,r,t){return Fn(n,t,e.gt,e.gV,e.gS,function(t,n){var o=e.dW&&e.dW(t),a=e.gX,i=On.title,c=On.body,u=Pe(c);return Te(n,function(n){qn=o;var e=a(n),r=Zn("body")(R)(e.c0),n=le(u,r);c=Se(c,u,n,t),u=r,qn=0,i!==e.gU&&(On.title=i=e.gU)})})}),"undefined"!=typeof cancelAnimationFrame?cancelAnimationFrame:function(n){clearTimeout(n)}),Me="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)};function Te(r,t){t(r);var o=0;function a(){o=1===o?0:(Me(a),t(r),1)}return function(n,e){r=n,e?(t(r),2===o&&(o=1)):(0===o&&Me(a),o=2)}}h(function(n,e){return X(yo,io,{$:2,b:function(){e&&history.go(e),n()},c:null})}),h(function(n,e){return X(yo,io,{$:2,b:function(){history.pushState({},"",e),n()},c:null})}),h(function(n,e){return X(yo,io,{$:2,b:function(){history.replaceState({},"",e),n()},c:null})});var we={addEventListener:function(){},removeEventListener:function(){}},Le="undefined"!=typeof document?document:we,$e="undefined"!=typeof window?window:we,Xe=s(function(e,r,t){return Dn({$:2,b:function(){function n(n){Xn(t(n))}return e.addEventListener(r,n,re&&{passive:!0}),function(){e.removeEventListener(r,n)}},c:null})}),De=h(function(n,e){e=gn(n,e);return qt(e)?ut(e.a):lt});function ze(r,t){return{$:2,b:function(e){Me(function(){var n=document.getElementById(r);e(n?{$:0,a:t(n)}:{$:1,a:Ot(r)})})},c:null}}function Ne(e){return{$:2,b:function(n){Me(function(){n({$:0,a:e()})})},c:null}}function Ve(){var n=Le.body,e=Le.documentElement;return{g:Math.max(n.scrollWidth,n.offsetWidth,e.scrollWidth,e.offsetWidth,e.clientWidth),l:Math.max(n.scrollHeight,n.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight)}}h(function(e,n){return ze(n,function(n){return n[e](),d})}),h(function(n,e){return Ne(function(){return $e.scroll(n,e),d})}),s(function(n,e,r){return ze(n,function(n){return n.scrollLeft=e,n.scrollTop=r,d})});var _e=t(function(a,i,c,u,l,n){var f=9728!==i&&9729!==i;return{$:2,b:function(r){var t=new Image;function o(n){var e=n.createTexture();return n.bindTexture(n.TEXTURE_2D,e),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,l),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,a),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,i),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,c),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,u),f&&n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null),e}t.onload=function(){var n=t.width,e=t.height;r(0==(n&n-1)&&0==(e&e-1)||!f&&33071===c&&33071===u?{$:0,a:{$:0,f8:o,a:n,b:e}}:{$:1,a:X(Xo,n,e)})},t.onerror=function(){r({$:1,a:$o})},"data:"!==n.slice(0,5)&&(t.crossOrigin="Anonymous"),t.src=n},c:null}}),Ae=0;function Fe(n,e){for(;e.b;e=e.b)n(e.a)}function Ie(n){for(var e=0;n.b;n=n.b)e++;return e}function ke(n){n.scissor.enabled&&(n.gl.disable(n.gl.SCISSOR_TEST),n.scissor.enabled=!1)}function Ee(n){var e=n.colorMask;e.a&&e.b&&e.c&&e.d||(n.gl.colorMask(!0,!0,!0,!0),e.a=!0,e.b=!0,e.c=!0,e.d=!0)}var Be="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){setTimeout(n,1e3/60)},Ue=r(function(n,e,r,t,o){return{$:0,a:n,b:e,c:r,d:t,e:o}}),qe=h(function(n,e){var r=n.blend;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.BLEND),r.enabled=!0),r.a===e.a&&r.d===e.d||(n.gl.blendEquationSeparate(e.a,e.d),r.a=e.a,r.d=e.d),r.b===e.b&&r.c===e.c&&r.e===e.e&&r.f===e.f||(n.gl.blendFuncSeparate(e.b,e.c,e.e,e.f),r.b=e.b,r.c=e.c,r.e=e.e,r.f=e.f),r.g===e.g&&r.h===e.h&&r.i===e.i&&r.j===e.j||(n.gl.blendColor(e.g,e.h,e.i,e.j),r.g=e.g,r.h=e.h,r.i=e.i,r.j=e.j)}),We=h(function(n,e){var r=n.depthTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.DEPTH_TEST),r.enabled=!0),r.a!==e.a&&(n.gl.depthFunc(e.a),r.a=e.a),r.b!==e.b&&(n.gl.depthMask(e.b),r.b=e.b),r.c===e.c&&r.d===e.d||(n.gl.depthRange(e.c,e.d),r.c=e.c,r.d=e.d)}),je=h(function(n,e){var r=n.stencilTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.STENCIL_TEST),r.enabled=!0),r.d===e.d&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.FRONT,e.d,e.a,e.b),r.d=e.d),r.e===e.e&&r.f===e.f&&r.g===e.g||(n.gl.stencilOpSeparate(n.gl.FRONT,e.e,e.f,e.g),r.e=e.e,r.f=e.f,r.g=e.g),r.c!==e.c&&(n.gl.stencilMask(e.c),r.c=e.c),r.h===e.h&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.BACK,e.h,e.a,e.b),r.h=e.h,r.a=e.a,r.b=e.b),r.i===e.i&&r.j===e.j&&r.k===e.k||(n.gl.stencilOpSeparate(n.gl.BACK,e.i,e.j,e.k),r.i=e.i,r.j=e.j,r.k=e.k)}),He=h(function(n,e){var r=n.scissor;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SCISSOR_TEST),r.enabled=!0),r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.scissor(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)}),Ye=h(function(n,e){var r=n.colorMask;r.toggle=n.toggle,r.enabled=!0,r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.colorMask(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)}),Oe=h(function(n,e){var r=n.cullFace;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.CULL_FACE),r.enabled=!0),r.a!==e.a&&(n.gl.cullFace(e.a),r.a=e.a)}),Qe=h(function(n,e){var r=n.polygonOffset;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.POLYGON_OFFSET_FILL),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.polygonOffset(e.a,e.b),r.a=e.a,r.b=e.b)}),Ze=h(function(n,e){var r=n.sampleCoverage;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SAMPLE_COVERAGE),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.sampleCoverage(e.a,e.b),r.a=e.a,r.b=e.b)}),Ge=["blend","depthTest","stencilTest","scissor","colorMask","cullFace","polygonOffset","sampleCoverage","sampleAlphaToCoverage"],Je=[function(n){n.blend.enabled&&(n.gl.disable(n.gl.BLEND),n.blend.enabled=!1)},function(n){n.depthTest.enabled&&(n.gl.disable(n.gl.DEPTH_TEST),n.depthTest.enabled=!1)},function(n){n.stencilTest.enabled&&(n.gl.disable(n.gl.STENCIL_TEST),n.stencilTest.enabled=!1)},ke,Ee,function(n){n.gl.disable(n.gl.CULL_FACE)},function(n){n.gl.disable(n.gl.POLYGON_OFFSET_FILL)},function(n){n.gl.disable(n.gl.SAMPLE_COVERAGE)},function(n){n.gl.disable(n.gl.SAMPLE_ALPHA_TO_COVERAGE)}];function Ke(n,e,r){r=n.createShader(r);return n.shaderSource(r,"#extension GL_OES_standard_derivatives : enable\n"+e),n.compileShader(r),r}function nr(n,e){switch(e){case n.FLOAT:return{size:1,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC2:return{size:2,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC3:return{size:3,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC4:return{size:4,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_MAT4:return{size:4,arraySize:4,type:Float32Array,baseType:n.FLOAT};case n.INT:return{size:1,arraySize:1,type:Int32Array,baseType:n.INT}}}function er(n,e,r,t){for(var c=r.a.eq,u=[],o=0;o<c;o++)u.push(String.fromCharCode(97+o));var a=nr(n,e.type);if(void 0===a)throw Error("No info available for: "+e.type);var i=0,l=a.size*a.arraySize*c,f=new a.type(Ie(r.b)*l);Fe(function(n){!function(e,r,t,o,a){var i;if(1===c)for(i=0;i<r;i++)e[t++]=1===r?o[a]:o[a][i];else u.forEach(function(n){for(i=0;i<r;i++)e[t++]=1===r?o[n][a]:o[n][a][i]})}(f,a.size*a.arraySize,i,n,t[e.name]||e.name),i+=l},r.b);r=n.createBuffer();return n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,f,n.STATIC_DRAW),r}function rr(n,e){if(0<e.a.eC){var r=n.createBuffer(),t=function(n,e){var r,t=new Uint16Array(Ie(n)*e),o=0;return Fe(function(n){if(1===e)t[o++]=n;else for(r=0;r<e;r++)t[o++]=n[String.fromCharCode(97+r)]},n),t}(e.c,e.a.eC);return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW),{numIndices:t.length,indexBuffer:r,buffers:{}}}return{numIndices:e.a.eq*Ie(e.b),indexBuffer:null,buffers:{}}}var tr=h(function(h,n){var x=h.f,S=x.gl;return S&&(S.viewport(0,0,S.drawingBufferWidth,S.drawingBufferHeight),x.depthTest.b||(S.depthMask(!0),x.depthTest.b=!0),x.stencilTest.c!==x.STENCIL_WRITEMASK&&(S.stencilMask(x.STENCIL_WRITEMASK),x.stencilTest.c=x.STENCIL_WRITEMASK),ke(x),Ee(x),S.clear(S.COLOR_BUFFER_BIT|S.DEPTH_BUFFER_BIT|S.STENCIL_BUFFER_BIT),Fe(function(n){if(n.d.b.b){var e,r,t,o,a;if(n.b.id&&n.c.id&&(i=x.programs[e=n.b.id+"#"+n.c.id]),!i){n.b.id?r=x.shaders[n.b.id]:n.b.id=Ae++,r||(r=Ke(S,n.b.src,S.VERTEX_SHADER),x.shaders[n.b.id]=r),n.c.id?t=x.shaders[n.c.id]:n.c.id=Ae++,t||(t=Ke(S,n.c.src,S.FRAGMENT_SHADER),x.shaders[n.c.id]=t);var i,c=function(n,e,r){var t=n.createProgram();if(n.attachShader(t,e),n.attachShader(t,r),n.linkProgram(t),!n.getProgramParameter(t,n.LINK_STATUS))throw"Link failed: "+n.getProgramInfoLog(t)+"\nvs info-log: "+n.getShaderInfoLog(e)+"\nfs info-log: "+n.getShaderInfoLog(r);return t}(S,r,t);(i={glProgram:c,attributes:Object.assign({},n.b.attributes,n.c.attributes),currentUniforms:{},activeAttributes:[],activeAttributeLocations:[]}).uniformSetters=function(a,n,e,r){var t=e.glProgram,i=e.currentUniforms,c=0,u=n.f;for(var o={},l=a.getProgramParameter(t,a.ACTIVE_UNIFORMS),f=0;f<l;f++){var s=a.getActiveUniform(t,f);o[r[s.name]||s.name]=function(n,e){var r=e.name,t=a.getUniformLocation(n,r);switch(e.type){case a.INT:return function(n){i[r]!==n&&(a.uniform1i(t,n),i[r]=n)};case a.FLOAT:return function(n){i[r]!==n&&(a.uniform1f(t,n),i[r]=n)};case a.FLOAT_VEC2:return function(n){i[r]!==n&&(a.uniform2f(t,n[0],n[1]),i[r]=n)};case a.FLOAT_VEC3:return function(n){i[r]!==n&&(a.uniform3f(t,n[0],n[1],n[2]),i[r]=n)};case a.FLOAT_VEC4:return function(n){i[r]!==n&&(a.uniform4f(t,n[0],n[1],n[2],n[3]),i[r]=n)};case a.FLOAT_MAT4:return function(n){i[r]!==n&&(a.uniformMatrix4fv(t,!1,new Float32Array(n)),i[r]=n)};case a.SAMPLER_2D:var o=c++;return function(n){a.activeTexture(a.TEXTURE0+o);var e=u.textures.get(n);e||(e=n.f8(a),u.textures.set(n,e)),a.bindTexture(a.TEXTURE_2D,e),i[r]!==n&&(a.uniform1i(t,o),i[r]=n)};case a.BOOL:return function(n){i[r]!==n&&(a.uniform1i(t,n),i[r]=n)};default:return function(){}}}(t,s)}return o}(S,h,i,Object.assign({},n.b.uniforms,n.c.uniforms));for(var u=S.getProgramParameter(c,S.ACTIVE_ATTRIBUTES),l=0;l<u;l++){var f=S.getActiveAttrib(c,l),s=S.getAttribLocation(c,f.name);i.activeAttributes.push(f),i.activeAttributeLocations.push(s)}x.programs[e=n.b.id+"#"+n.c.id]=i}x.lastProgId!==e&&(S.useProgram(i.glProgram),x.lastProgId=e),o=i.uniformSetters,Object.keys(a=n.e).forEach(function(n){var e=o[n];e&&e(a[n])});var d=x.buffers.get(n.d);for(d||(d=rr(S,n.d),x.buffers.set(n.d,d)),l=0;l<i.activeAttributes.length;l++){s=i.activeAttributeLocations[l],void 0===d.buffers[(f=i.activeAttributes[l]).name]&&(d.buffers[f.name]=er(S,f,n.d,i.attributes)),S.bindBuffer(S.ARRAY_BUFFER,d.buffers[f.name]);var v=nr(S,f.type);if(1===v.arraySize)S.enableVertexAttribArray(s),S.vertexAttribPointer(s,v.size,v.baseType,!1,0,0);else for(var m=4*v.size,p=m*v.arraySize,b=0;b<v.arraySize;b++)S.enableVertexAttribArray(s+b),S.vertexAttribPointer(s+b,v.size,v.baseType,!1,p,m*b)}for(x.toggle=!x.toggle,Fe(vl(x),n.a),l=0;l<9;l++){var g=x[Ge[l]];g.toggle!==x.toggle&&g.enabled&&(Je[l](x),g.enabled=!1,g.toggle=x.toggle)}d.indexBuffer?(S.bindBuffer(S.ELEMENT_ARRAY_BUFFER,d.indexBuffer),S.drawElements(n.d.a.fd,d.numIndices,S.UNSIGNED_SHORT,0)):S.drawArrays(n.d.a.fd,0,d.numIndices)}},h.g)),n}),or=s(function(n,e,r){return function(n,e,r,t){return{$:3,d:ae(n),g:e,h:r,i:t}}(e,{g:r,f:{},h:n},sr,dr)}),ar=h(function(n,e){n.contextAttributes.alpha=!0,n.contextAttributes.premultipliedAlpha=e.a}),ir=h(function(n,e){n.contextAttributes.depth=!0,n.sceneSettings.push(function(n){n.clearDepth(e.a)})}),cr=h(function(n,e){n.contextAttributes.stencil=!0,n.sceneSettings.push(function(n){n.clearStencil(e.a)})}),ur=h(function(n){n.contextAttributes.antialias=!0}),lr=h(function(n,e){n.sceneSettings.push(function(n){n.clearColor(e.a,e.b,e.c,e.d)})}),fr=h(function(n){n.contextAttributes.preserveDrawingBuffer=!0});function sr(n){var e={contextAttributes:{alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},sceneSettings:[]};Fe(function(n){return X(dl,e,n)},n.h);var r=On.createElement("canvas"),t=r.getContext&&(r.getContext("webgl",e.contextAttributes)||r.getContext("experimental-webgl",e.contextAttributes));return t&&"undefined"!=typeof WeakMap?(e.sceneSettings.forEach(function(n){n(t)}),t.getExtension("OES_standard_derivatives"),n.f.gl=t,n.f.toggle=!1,n.f.blend={enabled:!1,toggle:!1},n.f.depthTest={enabled:!1,toggle:!1},n.f.stencilTest={enabled:!1,toggle:!1},n.f.scissor={enabled:!1,toggle:!1},n.f.colorMask={enabled:!1,toggle:!1},n.f.cullFace={enabled:!1,toggle:!1},n.f.polygonOffset={enabled:!1,toggle:!1},n.f.sampleCoverage={enabled:!1,toggle:!1},n.f.sampleAlphaToCoverage={enabled:!1,toggle:!1},n.f.shaders=[],n.f.programs={},n.f.lastProgId=null,n.f.buffers=new WeakMap,n.f.textures=new WeakMap,n.f.STENCIL_WRITEMASK=t.getParameter(t.STENCIL_WRITEMASK),Be(function(){return X(tr,n,r)})):(r=On.createElement("div")).innerHTML='<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!',r}function dr(n,e){return e.f=n.f,tr(e)}var vr=h(function(n,e){return new Float64Array([n,e])});function mr(n){return Math.sqrt(n[0]*n[0]+n[1]*n[1])}h(function(n,e){return new Float64Array([n,e[1]])}),h(function(n,e){return new Float64Array([e[0],n])}),h(function(n,e){var r=new Float64Array(2);return r[0]=n[0]+e[0],r[1]=n[1]+e[1],r}),h(function(n,e){var r=new Float64Array(2);return r[0]=n[0]-e[0],r[1]=n[1]-e[1],r}),h(function(n,e){var r=new Float64Array(2);r[0]=n[0]-e[0],r[1]=n[1]-e[1];e=1/mr(r);return r[0]=r[0]*e,r[1]=r[1]*e,r}),h(function(n,e){var r=n[0]-e[0],e=n[1]-e[1];return Math.sqrt(r*r+e*e)}),h(function(n,e){var r=n[0]-e[0],e=n[1]-e[1];return r*r+e*e}),h(function(n,e){var r=new Float64Array(2);return r[0]=e[0]*n,r[1]=e[1]*n,r}),h(function(n,e){return n[0]*e[0]+n[1]*e[1]});var pr=new Float64Array(3),br=new Float64Array(3),gr=new Float64Array(3),hr=s(function(n,e,r){return new Float64Array([n,e,r])});function xr(n,e,r){return void 0===r&&(r=new Float64Array(3)),r[0]=n[0]-e[0],r[1]=n[1]-e[1],r[2]=n[2]-e[2],r}function Sr(n,e,r){return void 0===r&&(r=new Float64Array(3)),Pr(xr(n,e,r),r)}function yr(n){return Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2])}function Pr(n,e){void 0===e&&(e=new Float64Array(3));var r=1/yr(n);return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e}function Rr(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}h(function(n,e){return new Float64Array([n,e[1],e[2]])}),h(function(n,e){return new Float64Array([e[0],n,e[2]])}),h(function(n,e){return new Float64Array([e[0],e[1],n])}),h(function(n,e){var r=new Float64Array(3);return r[0]=n[0]+e[0],r[1]=n[1]+e[1],r[2]=n[2]+e[2],r}),h(xr),h(Sr),h(function(n,e){var r=n[0]-e[0],t=n[1]-e[1],e=n[2]-e[2];return Math.sqrt(r*r+t*t+e*e)}),h(function(n,e){var r=n[0]-e[0],t=n[1]-e[1],e=n[2]-e[2];return r*r+t*t+e*e});var Cr=h(function(n,e){return new Float64Array([e[0]*n,e[1]*n,e[2]*n])});function Mr(n,e,r){return void 0===r&&(r=new Float64Array(3)),r[0]=n[1]*e[2]-n[2]*e[1],r[1]=n[2]*e[0]-n[0]*e[2],r[2]=n[0]*e[1]-n[1]*e[0],r}h(Rr),h(Mr),h(function(n,e){var r,t=pr,o=new Float64Array(3);return t[0]=n[3],t[1]=n[7],t[2]=n[11],r=Rr(e,t)+n[15],t[0]=n[0],t[1]=n[4],t[2]=n[8],o[0]=(Rr(e,t)+n[12])/r,t[0]=n[1],t[1]=n[5],t[2]=n[9],o[1]=(Rr(e,t)+n[13])/r,t[0]=n[2],t[1]=n[6],t[2]=n[10],o[2]=(Rr(e,t)+n[14])/r,o});var Tr=l(function(n,e,r,t){return new Float64Array([n,e,r,t])});function wr(n){return Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]+n[3]*n[3])}h(function(n,e){return new Float64Array([n,e[1],e[2],e[3]])}),h(function(n,e){return new Float64Array([e[0],n,e[2],e[3]])}),h(function(n,e){return new Float64Array([e[0],e[1],n,e[3]])}),h(function(n,e){return new Float64Array([e[0],e[1],e[2],n])}),h(function(n,e){var r=new Float64Array(4);return r[0]=n[0]+e[0],r[1]=n[1]+e[1],r[2]=n[2]+e[2],r[3]=n[3]+e[3],r}),h(function(n,e){var r=new Float64Array(4);return r[0]=n[0]-e[0],r[1]=n[1]-e[1],r[2]=n[2]-e[2],r[3]=n[3]-e[3],r}),h(function(n,e){var r=new Float64Array(4);r[0]=n[0]-e[0],r[1]=n[1]-e[1],r[2]=n[2]-e[2],r[3]=n[3]-e[3];e=1/wr(r);return r[0]=r[0]*e,r[1]=r[1]*e,r[2]=r[2]*e,r[3]=r[3]*e,r}),h(function(n,e){var r=n[0]-e[0],t=n[1]-e[1],o=n[2]-e[2],e=n[3]-e[3];return Math.sqrt(r*r+t*t+o*o+e*e)}),h(function(n,e){var r=n[0]-e[0],t=n[1]-e[1],o=n[2]-e[2],e=n[3]-e[3];return r*r+t*t+o*o+e*e}),h(function(n,e){var r=new Float64Array(4);return r[0]=e[0]*n,r[1]=e[1]*n,r[2]=e[2]*n,r[3]=e[3]*n,r}),h(function(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]+n[3]*e[3]});var Lr=new Float64Array(16),$r=new Float64Array(16);function Xr(n,e,r,t,o,a){var i=new Float64Array(16);return i[0]=2*o/(e-n),i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2*o/(t-r),i[6]=0,i[7]=0,i[8]=(e+n)/(e-n),i[9]=(t+r)/(t-r),i[10]=-(a+o)/(a-o),i[11]=-1,i[12]=0,i[13]=0,i[14]=-2*a*o/(a-o),i[15]=0,i}function Dr(n,e,r,t,o,a){var i=new Float64Array(16);return i[0]=2/(e-n),i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2/(t-r),i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-2/(a-o),i[11]=0,i[12]=-(e+n)/(e-n),i[13]=-(t+r)/(t-r),i[14]=-(a+o)/(a-o),i[15]=1,i}function zr(n,e){var r=new Float64Array(16),t=n[0],o=n[1],a=n[2],i=n[3],c=n[4],u=n[5],l=n[6],f=n[7],s=n[8],d=n[9],v=n[10],m=n[11],p=n[12],b=n[13],g=n[14],h=n[15],x=e[0],S=e[1],y=e[2],P=e[3],R=e[4],C=e[5],M=e[6],T=e[7],w=e[8],L=e[9],$=e[10],X=e[11],D=e[12],z=e[13],n=e[14],e=e[15];return r[0]=t*x+c*S+s*y+p*P,r[1]=o*x+u*S+d*y+b*P,r[2]=a*x+l*S+v*y+g*P,r[3]=i*x+f*S+m*y+h*P,r[4]=t*R+c*C+s*M+p*T,r[5]=o*R+u*C+d*M+b*T,r[6]=a*R+l*C+v*M+g*T,r[7]=i*R+f*C+m*M+h*T,r[8]=t*w+c*L+s*$+p*X,r[9]=o*w+u*L+d*$+b*X,r[10]=a*w+l*L+v*$+g*X,r[11]=i*w+f*L+m*$+h*X,r[12]=t*D+c*z+s*n+p*e,r[13]=o*D+u*z+d*n+b*e,r[14]=a*D+l*z+v*n+g*e,r[15]=i*D+f*z+m*n+h*e,r}function Nr(n,e,r){var t=new Float64Array(16);return t[0]=n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function Vr(n,e,r){var t=new Float64Array(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n,t[13]=e,t[14]=r,t[15]=1,t}new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),t(Xr),l(function(n,e,r,t){var o=r*Math.tan(n*Math.PI/360),n=-o;return Xr(n*e,o*e,n,o,r,t)}),t(Dr),l(function(n,e,r,t){return Dr(n,e,r,t,-1,1)}),h(zr),h(function(n,e){var r=new Float64Array(16),t=n[0],o=n[1],a=n[2],i=n[4],c=n[5],u=n[6],l=n[8],f=n[9],s=n[10],d=n[12],v=n[13],m=n[14],p=e[0],b=e[1],g=e[2],h=e[4],x=e[5],S=e[6],y=e[8],P=e[9],R=e[10],C=e[12],n=e[13],e=e[14];return r[0]=t*p+i*b+l*g,r[1]=o*p+c*b+f*g,r[2]=a*p+u*b+s*g,r[3]=0,r[4]=t*h+i*x+l*S,r[5]=o*h+c*x+f*S,r[6]=a*h+u*x+s*S,r[7]=0,r[8]=t*y+i*P+l*R,r[9]=o*y+c*P+f*R,r[10]=a*y+u*P+s*R,r[11]=0,r[12]=t*C+i*n+l*e+d,r[13]=o*C+c*n+f*e+v,r[14]=a*C+u*n+s*e+m,r[15]=1,r}),h(function(n,e){var r=new Float64Array(16),t=(e=Pr(e,pr))[0],o=e[1],a=e[2],i=Math.cos(n),e=1-i,n=Math.sin(n);return r[0]=t*t*e+i,r[1]=o*t*e+a*n,r[2]=a*t*e-o*n,r[3]=0,r[4]=t*o*e-a*n,r[5]=o*o*e+i,r[6]=o*a*e+t*n,r[7]=0,r[8]=t*a*e+o*n,r[9]=o*a*e-t*n,r[10]=a*a*e+i,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}),s(function(n,e,r){var t=new Float64Array(16),o=1/yr(e),a=e[0]*o,i=e[1]*o,c=e[2]*o,u=Math.cos(n),l=1-u,f=Math.sin(n),s=a*f,d=i*f,v=c*f,m=a*i*l,p=a*c*l,b=i*c*l,g=a*a*l+u,h=m+v,x=p-d,S=m-v,y=i*i*l+u,P=b+s,R=p+d,C=b-s,M=c*c*l+u,e=r[0],o=r[1],n=r[2],f=r[3],a=r[4],m=r[5],v=r[6],i=r[7],p=r[8],d=r[9],b=r[10],s=r[11],c=r[12],l=r[13],u=r[14],r=r[15];return t[0]=e*g+a*h+p*x,t[1]=o*g+m*h+d*x,t[2]=n*g+v*h+b*x,t[3]=f*g+i*h+s*x,t[4]=e*S+a*y+p*P,t[5]=o*S+m*y+d*P,t[6]=n*S+v*y+b*P,t[7]=f*S+i*y+s*P,t[8]=e*R+a*C+p*M,t[9]=o*R+m*C+d*M,t[10]=n*R+v*C+b*M,t[11]=f*R+i*C+s*M,t[12]=c,t[13]=l,t[14]=u,t[15]=r,t}),s(Nr),l(function(n,e,r,t){var o=new Float64Array(16);return o[0]=t[0]*n,o[1]=t[1]*n,o[2]=t[2]*n,o[3]=t[3]*n,o[4]=t[4]*e,o[5]=t[5]*e,o[6]=t[6]*e,o[7]=t[7]*e,o[8]=t[8]*r,o[9]=t[9]*r,o[10]=t[10]*r,o[11]=t[11]*r,o[12]=t[12],o[13]=t[13],o[14]=t[14],o[15]=t[15],o}),h(function(n,e){var r=new Float64Array(16),t=n[0],o=n[1],n=n[2];return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r[4]=e[4]*o,r[5]=e[5]*o,r[6]=e[6]*o,r[7]=e[7]*o,r[8]=e[8]*n,r[9]=e[9]*n,r[10]=e[10]*n,r[11]=e[11]*n,r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15],r}),s(Vr),l(function(n,e,r,t){var o=new Float64Array(16),a=t[0],i=t[1],c=t[2],u=t[3],l=t[4],f=t[5],s=t[6],d=t[7],v=t[8],m=t[9],p=t[10],b=t[11];return o[0]=a,o[1]=i,o[2]=c,o[3]=u,o[4]=l,o[5]=f,o[6]=s,o[7]=d,o[8]=v,o[9]=m,o[10]=p,o[11]=b,o[12]=a*n+l*e+v*r+t[12],o[13]=i*n+f*e+m*r+t[13],o[14]=c*n+s*e+p*r+t[14],o[15]=u*n+d*e+b*r+t[15],o}),h(function(n,e){var r=new Float64Array(16),t=n[0],o=n[1],a=n[2],i=e[0],c=e[1],u=e[2],l=e[3],f=e[4],s=e[5],d=e[6],v=e[7],m=e[8],p=e[9],b=e[10],n=e[11];return r[0]=i,r[1]=c,r[2]=u,r[3]=l,r[4]=f,r[5]=s,r[6]=d,r[7]=v,r[8]=m,r[9]=p,r[10]=b,r[11]=n,r[12]=i*t+f*o+m*a+e[12],r[13]=c*t+s*o+p*a+e[13],r[14]=u*t+d*o+b*a+e[14],r[15]=l*t+v*o+n*a+e[15],r}),s(function(n,e,r){var t=Sr(n,e,pr),o=Pr(Mr(r,t,br),br),a=Pr(Mr(t,o,gr),gr),e=Lr,r=$r;return e[0]=o[0],e[1]=a[0],e[2]=t[0],e[3]=0,e[4]=o[1],e[5]=a[1],e[6]=t[1],e[7]=0,e[8]=o[2],e[9]=a[2],e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,r[e[14]=0]=e[15]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=-n[0],r[13]=-n[1],r[14]=-n[2],r[15]=1,zr(e,r)}),s(function(n,e,r){var t=new Float64Array(16);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=0,t[4]=e[0],t[5]=e[1],t[6]=e[2],t[7]=0,t[8]=r[0],t[9]=r[1],t[10]=r[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t});var _r=h(function(n,e){return n&e});function Ar(n){return X(vt,"\n    ",X(mt,"\n",n))}function Fr(n){return D(pt,h(function(n,e){return e+1}),0,n)}function Ir(n){return 97<=(n=St(n))&&n<=122}function kr(n){return(n=St(n))<=90&&65<=n}function Er(n){return Ir(n)||kr(n)||function(n){n=St(n);return n<=57&&48<=n}(n)}function Br(n){return n}function Ur(n){return n.a}function qr(n){return n}function Wr(n){return D(lo,mo(Qr),co(R),n)}h(function(n,e){return n|e}),h(function(n,e){return n^e});var jr=h(function(n,e){return e<<n}),we=(h(function(n,e){return e>>n}),h(function(n,e){return e>>>n})),Hr=1,Yr=2,Or=0,Qr=b,Zr=s(function(n,e,r){for(;;){if(-2===r.$)return e;var t=r.d,o=n,a=D(n,r.b,r.c,D(Zr,n,e,r.e));n=o,e=a,r=t}}),Gr=function(n){return D(Zr,s(function(n,e,r){return X(Qr,{a:n,b:e},r)}),R,n)},Jr=I,Kr=s(function(r,n,e){var t=e.c,e=e.d,o=h(function(n,e){return D(Jr,n.$?r:o,e,n.a)});return D(Jr,o,D(Jr,r,n,e),t)}),nt=function(n){return D(Kr,Qr,R,n)},et=function(n){return{$:1,a:n}},rt=h(function(n,e){return{$:3,a:n,b:e}}),tt=h(function(n,e){return{$:0,a:n,b:e}}),ot=h(function(n,e){return{$:1,a:n,b:e}}),at=function(n){return{$:0,a:n}},it=function(n){return{$:2,a:n}},ct=B,ut=function(n){return{$:0,a:n}},lt={$:1},ft=tn,st=Cn,dt=un,vt=h(function(n,e){return X(en,n,g(e))}),mt=h(function(n,e){return C(X(nn,n,e))}),pt=s(function(n,e,r){for(;;){if(!r.b)return e;var t=r.b,o=n,a=X(n,r.a,e);n=o,e=a,r=t}}),bt=w,gt=s(function(n,e,r){for(;;){if(1<=x(n,e))return r;var t=n,o=e-1,a=X(Qr,e,r);n=t,e=o,r=a}}),ht=h(function(n,e){return D(gt,n,e,R)}),xt=h(function(n,e){return D(bt,n,X(ht,0,Fr(e)-1),e)}),St=function(n){var e=n.charCodeAt(0);return e<55296||56319<e?e:1024*(e-55296)+n.charCodeAt(1)-56320+65536},yt=function(n){return D(pt,Qr,R,n)},Pt=function(n){var e=n.charCodeAt(0);return isNaN(e)?lt:ut(e<55296||56319<e?{a:n[0],b:n.slice(1)}:{a:n[0]+n[1],b:n.slice(2)})},Rt=h(function(n,e){return"\n\n("+dt(n+1)+(") "+Ar(Ct(e)))}),Ct=function(n){return X(Mt,n,R)},Mt=h(function(n,e){n:for(;;)switch(n.$){case 0:var r=n.a,t=n.b,o=function(){var n=Pt(r);if(1===n.$)return!1;var e=n.a,n=e.b;return function(n){return Ir(n)||kr(n)}(e.a)&&X(ft,Er,n)}(),a=t,o=X(Qr,o?"."+r:"['"+r+"']",e);n=a,e=o;continue n;case 1:var t=n.b,i="["+dt(n.a)+"]",a=t,o=X(Qr,i,e);n=a,e=o;continue n;case 2:var c=n.a;if(c.b){if(c.b.b){var u=(e.b?"The Json.Decode.oneOf at json"+X(vt,"",yt(e)):"Json.Decode.oneOf")+" failed in the following "+dt(Fr(c))+" ways:";return X(vt,"\n\n",X(Qr,u,X(xt,Rt,c)))}n=a=t=c.a,e=o=e;continue n}return"Ran into a Json.Decode.oneOf with no possibilities"+(e.b?" at json"+X(vt,"",yt(e)):"!");default:i=n.a,c=n.b;return(u=e.b?"Problem with the value at json"+X(vt,"",yt(e))+":\n\n    ":"Problem with the given value:\n\n")+(Ar(X(st,4,c))+"\n\n")+i}}),Tt=l(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),wt=[],Lt=O,$t=h(function(n,e){return J(e)/J(n)}),Xt=Lt(X($t,2,32)),Dt=z(Tt,0,Xt,wt,wt),zt=V,Nt=(h(function(n,e){return n(e)}),h(function(n,e){return e(n)}),c),Vt=Q,_t=function(n){return n.length},At=h(function(n,e){return 0<x(n,e)?n:e}),Ft=_,It=h(function(n,e){for(;;){var r=X(Ft,32,n),t=r.b,r=X(Qr,{$:0,a:r.a},e);if(!t.b)return yt(r);n=t,e=r}}),kt=h(function(n,e){for(;;){var r=Lt(e/32);if(1===r)return X(Ft,32,n).a;n=X(It,n,R),e=r}}),Et=h(function(n,e){if(e.o){var r=32*e.o,t=Vt(X($t,32,r-1)),n=n?yt(e.C):e.C,n=X(kt,n,e.o);return z(Tt,_t(e.r)+r,X(At,5,t*Xt),n,e.r)}return z(Tt,_t(e.r),Xt,wt,e.r)}),Bt=r(function(n,e,r,t,o){for(;;){if(e<0)return X(Et,!1,{C:t,o:r/32|0,r:o});var a={$:1,a:D(zt,32,e,n)};n=n,e=e-32,r=r,t=X(Qr,a,t),o=o}}),Ut=h(function(n,e){if(0<n){var r=n%32,t=D(zt,r,n-r,e);return N(Bt,e,n-r-32,n,R,t)}return Dt}),qt=function(n){return!n.$},Wt=mn,jt=pn,Ht=function(n){return{$:0,a:n}},Yt=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},Ot=qr,Qt=t(function(n,e,r,t,o,a){return{ex:a,eA:e,fh:t,fk:r,fn:n,fo:o}}),Zt=on,Gt=function(n){return n.length},Jt=rn,Kt=h(function(n,e){return n<1?e:D(Jt,n,Gt(e),e)}),no=cn,eo=h(function(n,e){return n<1?"":D(Jt,0,n,e)}),ro=function(n){for(var e=0,r=n.charCodeAt(0),t=43==r||45==r?1:0,o=t;o<n.length;++o){var a=n.charCodeAt(o);if(a<48||57<a)return lt;e=10*e+a-48}return o==t?lt:ut(45==r?-e:e)},to=r(function(n,e,r,t,o){if(""===o||X(Zt,"@",o))return lt;var a=X(no,":",o);if(a.b){if(a.b.b)return lt;var i=a.a,a=ro(X(Kt,i+1,o));if(1===a.$)return lt;a=a;return ut(M(Qt,n,X(eo,i,o),a,e,r,t))}return ut(M(Qt,n,o,lt,e,r,t))}),oo=l(function(n,e,r,t){if(""===t)return lt;var o=X(no,"/",t);if(o.b){o=o.a;return N(to,n,X(Kt,o,t),e,r,X(eo,o,t))}return N(to,n,"/",e,r,t)}),ao=s(function(n,e,r){if(""===r)return lt;var t=X(no,"?",r);if(t.b){t=t.a;return z(oo,n,ut(X(Kt,t+1,r)),e,X(eo,t,r))}return z(oo,n,lt,e,r)}),io=(h(function(n,e){if(""===e)return lt;var r=X(no,"#",e);if(r.b){r=r.a;return D(ao,n,ut(X(Kt,r+1,e)),X(eo,r,e))}return D(ao,n,lt,e)}),function(){for(;;)0}),co=Tn,rn=co(0),uo=l(function(n,e,r,t){if(t.b){var o=t.a,a=t.b;if(a.b){var i=a.a,c=a.b;if(c.b){t=c.a,a=c.b;if(a.b){c=a.b;return X(n,o,X(n,i,X(n,t,X(n,a.a,500<r?D(pt,n,e,yt(c)):z(uo,n,e,r+1,c)))))}return X(n,o,X(n,i,X(n,t,e)))}return X(n,o,X(n,i,e))}return X(n,o,e)}return e}),lo=s(function(n,e,r){return z(uo,n,e,0,r)}),fo=h(function(r,n){return D(lo,h(function(n,e){return X(Qr,r(n),e)}),R,n)}),so=wn,vo=h(function(e,n){return X(so,function(n){return co(e(n))},n)}),mo=s(function(r,n,t){return X(so,function(e){return X(so,function(n){return co(X(r,e,n))},t)},n)}),po=kn,bo=h(function(n,e){return Dn(X(so,po(n),e))}),cn=s(function(n,e){return X(vo,function(){return 0},Wr(X(fo,bo(n),e)))}),an=s(function(){return co(0)}),kn=h(function(n,e){return X(vo,n,e)});function go(n){return{$:7,a:n}}function ho(n){return{$:0,a:n}}function xo(n){return D(lo,Eo,R,n)}In.Task={b:rn,c:cn,d:an,e:kn,f:void 0};var So=Bn("Task"),yo=h(function(n,e){return So(X(vo,n,e))}),cn=Re,Po={$:0},Ro=h(function(n,e){return{$:1,a:n,b:e}}),Co=s(function(n,e,r){return n(e(r))}),Mo=Ln,To=h(function(n,e){return So(X(Mo,X(Co,X(Co,co,n),et),X(so,X(Co,X(Co,co,n),at),e)))}),wo=Un,Lo=Ne(function(){return{fu:Ve(),gY:{fR:$e.pageXOffset,fS:$e.pageYOffset,g:Le.documentElement.clientWidth,l:Le.documentElement.clientHeight}}}),$o={$:0},Xo=h(function(n,e){return{$:1,a:n,b:e}}),Do=h(function(n,o){var e=n.cA,r=n.cC,t=n.cs,a=n.cW,i=n.cn;return z(l(function(n,e,r,t){return M(_e,n,e,r,t,i,o)}),e,r,t,a)}),zo=h(function(e,r){return X(vo,function(n){return{$:1,a:{H:n,gI:e,gW:r}}},X(Do,e,r))}),No=h(function(n,e){return X(zo,n,e)}),Vo={cn:!0,cs:10497,cA:9729,cC:9987,cW:10497},_o=h(function(n,e){return{$:5,a:n,b:e}}),Ao=h(function(n,e){return{$:6,a:n,b:e}}),Fo={$:5},Io=vn,ko=Un,Eo=h(function(n,e){return e.b?D(lo,Qr,e,n):n}),Bo=function(n){return{$:1,a:n}},Uo=dn,qo=s(function(n,e,r){return e(n(r))}),Wo=f,jo=h(function(n,e){n:for(;;){if(-2===e.$)return lt;var r=e.c,t=e.d,o=e.e;switch(X(Wo,n,e.b)){case 0:n=n,e=t;continue n;case 1:return ut(r);default:n=n,e=o;continue n}}}),Ho=h(function(n,e){return e.$?lt:ut(n(e.a))}),Yo=sn,Oo=h(function(n,e){return e.$?n:e.a}),Qo=h(function(n,e){var r=n;return X(Io,function(n){return X(Oo,Bo("Unrecognized key: "+n),X(Ho,X(qo,e,Ht),X(jo,n,r)))},X(Uo,"key",Yo))}),Zo=s(function(n,e,r){return{dB:r,fr:e,fy:n}}),Go=co(D(Zo,R,lt,0)),Jo=function(r){return{$:2,b:function(n){var e=r.f;2===e.$&&e.c&&e.c(),r.f=null,n({$:0,a:d})},c:null}},Ko={$:2,b:function(n){n({$:0,a:Date.now()})},c:null},na={$:2,b:function(n){var e=Me(function(){n({$:0,a:Date.now()})});return function(){Ce(e)}},c:null},ea=En,ra=Dn,an=s(function(n,r,e){var t=e.fr,o={a:t,b:r};if(1!==o.a.$)return o.b.b?co(D(Zo,r,t,e.dB)):X(so,function(){return Go},Jo(o.a.a));if(o.b.b)return X(so,function(e){return X(so,function(n){return co(D(Zo,r,ut(e),n))},Ko)},ra(X(so,ea(n),na)));return Go}),ta=qr,kn=s(function(e,r,n){function t(n){return X(po,e,n.$?(0,n.a)(r-a):(0,n.a)(ta(r)))}var o=n.fy,a=n.dB;return X(so,function(n){return X(so,function(){return co(D(Zo,o,ut(n),r))},Wr(X(fo,t,o)))},ra(X(so,ea(e),na)))}),Re=h(function(n,e){return e.$?{$:1,a:X(Co,n,e.a)}:{$:0,a:X(Co,n,e.a)}});function oa(n){return{a:v(n.a?"w_":"d_",n.b),b:n}}function aa(n){return D(pt,h(function(n,e){return D(pa,n.a,n.b,e)}),sa,n)}In["Browser.AnimationManager"]={b:Go,c:an,d:kn,e:0,f:Re};var ia=Bn("Browser.AnimationManager"),ca=function(n){return ia({$:1,a:n})},ua=s(function(n,e,r){return{$:0,a:n,b:e,c:r}}),la=h(function(n,e){return{fi:e,fy:n}}),fa={$:-2},sa=fa,Ln=co(X(la,R,sa)),da=r(function(n,e,r,t,o){return{$:-1,a:n,b:e,c:r,d:t,e:o}}),va=r(function(n,e,r,t,o){if(-1!==o.$||o.a){if(-1!==t.$||t.a||-1!==t.d.$||t.d.a)return N(da,n,e,r,t,o);var a=t.d,i=t.e;return N(da,0,t.b,t.c,N(da,1,a.b,a.c,a.d,a.e),N(da,1,e,r,i,o))}var c=o.b,u=o.c,a=o.d,o=o.e;if(-1!==t.$||t.a)return N(da,n,c,u,N(da,0,e,r,t,a),o);var i;return N(da,0,e,r,N(da,1,t.b,t.c,t.d,i=t.e),N(da,1,c,u,a,o))}),ma=s(function(n,e,r){if(-2===r.$)return N(da,0,n,e,fa,fa);var t=r.a,o=r.b,a=r.c,i=r.d,c=r.e;switch(X(Wo,n,o)){case 0:return N(va,t,o,a,D(ma,n,e,i),c);case 1:return N(da,t,o,e,i,c);default:return N(va,t,o,a,i,D(ma,n,e,c))}}),pa=s(function(n,e,r){r=D(ma,n,e,r);if(-1!==r.$||r.a)return r;return N(da,1,r.b,r.c,r.d,r.e)}),ba=s(function(n,e,r){for(;;){if(-2===r.$)return e;var t=r.e,o=n,a=D(n,r.b,r.c,D(ba,n,e,r.d));n=o,e=a,r=t}}),ga=t(function(u,l,f,n,e,r){var t=s(function(n,e,r){for(;;){var t=r.a,o=r.b;if(!t.b)return{a:t,b:D(f,n,e,o)};var a=t.a,i=a.a,c=a.b,a=t.b;if(0<=x(i,n))return 0<x(i,n)?{a:t,b:D(f,n,e,o)}:{a:a,b:z(l,i,c,e,o)};n=n,e=e,r={a:a,b:D(u,i,c,o)}}}),r=D(ba,t,{a:Gr(n),b:r},e),e=r.a,r=r.b;return D(pt,h(function(n,e){return D(u,n.a,n.b,e)}),r,e)}),ha=h(function(n,e){return{ev:e,eH:n}}),xa=s(function(e,r,n){return X(vo,function(n){return{a:r,b:n}},D(Xe,n.a?$e:Le,n.b,function(n){return X(ea,e,X(ha,r,n))}))}),Sa=h(function(n,e){return D(ba,pa,e,n)}),vn=s(function(o,n,e){var r=s(function(n,e,r){var t=r.c;return{a:r.a,b:r.b,c:X(Qr,D(xa,o,n,e),t)}}),t=s(function(n,e,r){var t=r.b,o=r.c;return{a:X(Qr,e,r.a),b:t,c:o}}),a=l(function(n,e,r,t){var o=t.c;return{a:t.a,b:D(pa,n,e,t.b),c:o}}),i=X(fo,oa,n),e=M(ga,t,a,r,e.fi,aa(i),{a:R,b:sa,c:R}),c=e.b,u=e.c;return X(so,function(n){return co(X(la,i,X(Sa,c,aa(n))))},X(so,function(){return Wr(u)},Wr(X(fo,Jo,e.a))))}),ya=s(function(n,e,r){e=n(e);return e.$?r:X(Qr,e.a,r)}),Pa=h(function(n,e){return D(lo,ya(n),R,e)}),dn=s(function(n,e,r){var t=e.eH,o=e.ev,e=X(Pa,function(n){var e=n.b,e=e.c;return y(n.a,t)?X(De,e,o):lt},r.fy);return X(so,function(){return co(r)},Wr(X(fo,po(n),e)))}),f=h(function(n,e){return D(ua,e.a,e.b,X(Wt,n,e.c))});function Ra(n){return n.a}function Ca(n){return n}function Ma(n){return n}function Ta(n){return n.H}function wa(n){var e=(o=n.b).a,r=o.b,t=o.c,o=o.d;return X(pu,X(gu,n,hu),z(mu,-e,-r,-t,o))}function La(n){var e=n.b,r=e.a,t=e.b;return{eQ:1-2*t*t-2*(n=e.c)*n,eR:2*r*t-2*(e=e.d)*n,eS:2*r*n+2*e*t,eU:2*r*t+2*e*n,eV:1-2*r*r-2*n*n,eW:2*t*n-2*e*r,eY:2*r*n-2*e*t,eZ:2*t*n+2*e*r,e_:1-2*r*r-2*t*t}}function $a(n){var e=X(yu,n.b9,wa(n.ck)),n=La(e);return{dD:Ra(e),d7:{fR:n.eQ,fS:n.eU,cX:n.eY},d8:{fR:n.eR,fS:n.eV,cX:n.eZ},d9:{fR:n.eS,fS:n.eW,cX:n.e_}}}function Xa(n){return n=X(yu,n.b9,wa(n.ck)),Ra(n)}function Da(n){return n.d9}function za(n){return X(pu,n,wu)}function Na(n){switch(n.$){case 2:return n.a.fO;case 0:return n.a.fO;case 1:default:return 0}}function Va(n){var e=n.fR,r=n.fS;return e*e+r*r+(n=n.cX)*n}function _a(n){var e=n.fR,r=n.fS;return Xu(e*e+r*r+(n=n.cX)*n)}function Aa(n){return{eQ:n.eQ,eR:n.eU,eS:n.eY,eU:n.eR,eV:n.eV,eW:n.eZ,eY:n.eS,eZ:n.eW,e_:n.e_}}function Fa(t){var n,e,r,o,a,i,c=t.dp,u=t.dX,l=D(pt,h(function(n,e){return Na(n)+e}),0,u),f=c?1/c:0,s=X(Ku,c/l,D(pt,function(n){var e=Na(n),r=function(n){switch(n.$){case 2:return n.a.eD;case 0:return n.a.eD;case 1:default:return Qu}}(n),n=function(n){switch(n.$){case 2:return n.a.cI;case 0:return n.a.cI;case 1:default:return hu}}(n),r=z(Gu,t.ck,X(Fu,t.ck,n),e,r);return Ou(r)},Qu,u)),d=(d=1/(s=(n=(d=s).eQ)*((r=d.eV)*(i=d.e_)-(o=d.eZ)*(a=d.eW))-(e=d.eR)*((c=d.eU)*i-a*(l=d.eY))+(u=d.eS)*(c*o-r*l)),s?{eQ:(r*i-o*a)*d,eR:(u*o-e*i)*d,eS:(e*a-u*r)*d,eU:(a*l-c*i)*d,eV:(n*i-u*l)*d,eW:(c*u-n*a)*d,eY:(c*o-l*r)*d,eZ:(l*e-n*o)*d,e_:(n*r-c*e)*d}:Qu);return P(t,{de:d,ct:X(Ju,t.b9,d),cu:f})}function Ia(n){return{$:4,a:X(il,n,R)}}function ka(n){return n}function Ea(n){return D(Zl,D(Ql,(e=n).e9,e.e6,.5),function(n){return D(Ql,n.fa,n.e7,.5)}(n),function(n){return D(Ql,n.fb,n.e8,.5)}(n));var e}function Ba(n){return n.e8}function Ua(n){return n.fb}function qa(n){return{a:X(Gl,n.e9,function(n){return n.e6}(n)),b:X(Gl,function(n){return n.fa}(n),function(n){return n.e7}(n)),c:X(Gl,Ua(n),Ba(n))}}function Wa(n){return n}function ja(n){var e=(t=qa(n)).a,r=t.b,t=t.c;return{f3:Wa(Ea(n)),gn:e/2,go:r/2,gp:t/2}}function Ha(f){return function(l){return function(u){return function(c){return function(i){return function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return{$:2,a:f,b:l,c:u,d:c,e:i,f:a,g:o,h:t,i:r,j:e,k:n}}}}}}}}}}}}function Ya(n){return D(vf,0,1,.04045<n?X(mf,(n+.055)/1.055,2.4):n/12.92)}function Oa(n){var e=function(n){return{bb:n.d,bc:n.c,dc:n.b,dP:n.a}}(n),r=e.dc,n=e.bc;return D(Ll,Ya(e.dP),Ya(r),Ya(n))}function Qa(n){return function(n){var e=n.fs,r=n.dv;return N(df,0,X(pf,Oa,n.ee),X(pf,X(vf,0,1),e),X(pf,X(vf,0,1),r),{$:0,a:0})}({ee:n.ee,dv:{$:0,a:0},fs:n.fs})}function Za(n){var e=Qa({ee:n,fs:{$:0,a:.25}}),n=h(function(n,e){return D(Tu,n,e,0)});return tl({aw:N(sf,e,X(n,-90,-90),X(n,-90,90),X(n,90,90),X(n,90,-90)),m:Mu})}function Ga(n){return n}function Ja(n){return n<0?-n:n}function Ka(n){return Ja(n)}function ni(n){var e=n.fs,r=n.dv;return N(df,0,{$:0,a:Oa(n.ee)},{$:0,a:D(vf,0,1,e)},{$:0,a:D(vf,0,1,r)},{$:0,a:0})}function ei(n){return n}function ri(n){return n=ei(n),zf(n)||Df(n)||n<=0?Xf:{$:0,a:n}}function ti(n){return n}function oi(n){return n.f3}function ai(n){return n.al}function ii(n){var e=ti(ai(n)),n=Ca(oi(n));return{$:2,a:X(ju,za(n),function(n){var e=4.1887902047863905*X(mf,n,3);return{eD:X(_f,e,n),cI:hu,al:n,fO:e}}(e))}}function ci(v){return function(d){return function(s){return function(f){return function(l){return function(u){return function(c){return function(i){return function(a){return function(n){var e=v.a,r=v.b,t=v.c,o=cs(f),t=is({fP:o.fP,fR:o.fR*e,fS:o.fS*r,cX:o.cX*t});return m(d,s,t,l,u,c,i,a,n)}}}}}}}}}}function ui(n){return fs(n)}function li(n){return n.b?D(hs,n,R,0):Dt}function fi(n){return!n}function si(n){return Ts(n)}function di(n){return $s(Wa(n))}function vi(n){return n}function mi(n){return $s(vi(n))}function pi(n){return n.J}function bi(n){return X(Ds,n.e6,n.e9)&&X(Ds,n.e7,n.fa)&&X(Ds,n.e8,n.fb)?n:{e6:X(zs,n.e9,n.e6),e7:X(zs,n.fa,n.e7),e8:X(zs,n.fb,n.e8),e9:X(Ns,n.e9,n.e6),fa:X(Ns,n.fa,n.e7),fb:X(Ns,n.fb,n.e8)}}function gi(n){return n.aC}function hi(n){return n}function xi(){return{$:2,a:$(function(n,e,r,t,o,a,i,c){return N(ml,X(uf,!0,c),Bs,tf,Es,{aT:D(Ll,0,0,1),b:r,c:e,d:a,e:n,cO:i,f:o})})}}function Si(n){return n.ga}function yi(n){var e=_a(n);return{fR:n.fR/e,fS:n.fS/e,cX:n.cX/e}}function Pi(n){return n}function Ri(n){return Pi(n.fX)}function Ci(n){return n.ep}function Mi(n){return n.fR}function Ti(n){return n.fS}function wi(n){return n.cX}function Li(n){var e=wi(n.d9),r=Ti(n.d9),t=Mi(n.d9),o=wi(n.d8),a=Ti(n.d8),i=Mi(n.d8),c=wi(n.d7),u=Ti(n.d7);return 0<(n=Mi(n.d7))*a*e+u*o*t+c*i*r-c*a*t-u*i*e-n*o*r}function $i(n){return n.dD}function Xi(n){return{fR:-n.fR,fS:-n.fS,cX:-n.cX}}function Di(n){return n.d7}function zi(n){return n.d8}function Ni(n){var e=Ri(n),r=Li(e)?e:{dD:$i(o=e),d7:Di(o),d8:zi(o),d9:Xi(Da(o))},t=Wa($i(r)),e=Ma(Di(r)),o=Ma(zi(r)),r=Ma(Da(r)),r=z(gd,t,e,o,r),n=Ci(n);return{$:0,a:X(qu,r,D(bd,ti(n.a),ti(n.b),ti(n.c)))}}function Vi(n){return el(C([Ni(n)]))}function _i(n){return n}function Ai(n){return n}function Fi(n){return n.fR}function Ii(n){return n.fS}function ki(n){return n.cX}function Ei(n){var e=(i=Ai(n)).c,r=Fi(c=i.a),t=Ii(c),o=ki(c),a=Fi(u=i.b),n=Ii(u),i=ki(u),c=Fi(e),u=Ii(e),e=ki(e);return bi({e6:X(zs,r,X(zs,a,c)),e7:X(zs,t,X(zs,n,u)),e8:X(zs,o,X(zs,i,e)),e9:X(Ns,r,X(Ns,a,c)),fa:X(Ns,t,X(Ns,n,u)),fb:X(Ns,o,X(Ns,i,e))})}function Bi(n){var e=Ai(n),r=e.a,t=e.b;return{a:{cD:e=mi(D(Rd,r,t,n=e.c)),cI:di(r)},b:{cD:e,cI:di(t)},c:{cD:e,cI:di(n)}}}function Ui(n){return{J:X(fo,function(n){return{a:3*n,b:3*n+1,c:3*n+2}},X(ht,0,Fr(n)-1)),aC:li(xo(X(fo,function(n){return C([n.a,n.b,n.c])},n)))}}function qi(n){return(n=function(n){if(n.$){var u=n.c;return ut($(function(n,e,r,t,o,a,i,c){return N(ml,X(uf,t,c),qd,tf,u,{b:r,c:e,d:a,e:n,cO:i,f:o})}))}return lt}(n)).$?al:{$:2,a:n.a}}function Wi(n){return X(ad,n.dD,n.d8)}function ji(n){return{aI:0,ag:X(xt,h(function(n,e){return{aQ:gf,aV:yf,bO:e.a,bj:0,m:n,cS:e.b}}),n.aX),a4:(r=(e={gz:Js/10.8,gQ:-Sf}).gQ,t=e.gz,e=h(function(n,e){return C([{a:-t*n,b:t*e},{a:-t*n,b:-t*e},{a:t*n,b:t*e},{a:t*n,b:-t*e}])}),xo(C([X(fo,function(n){return{b$:D(Tu,n.a,n.b,0),gO:1,fC:r}},xo(C([C([{a:t,b:0},{a:-t,b:0},{a:0,b:t},{a:0,b:-t},{a:2.7*t,b:0},{a:2.7*-t,b:0},{a:4.1*t,b:0},{a:4.1*-t,b:0}]),X(e,4.05,1.75),X(e,3.2,.9),X(e,2.2,1.75),X(e,2.4,3.4),X(e,1,2)]))),X(fo,function(n){return{b$:D(Tu,n.a,n.b,0),gO:0,fC:r}},C([{a:0,b:3.6*t},{a:0,b:3.6*-t},{a:4*-t,b:3*t},{a:4*-t,b:3*-t},{a:4*t,b:3*t},{a:4*t,b:3*-t}]))]))),am:{bc:0,bp:0},N:X(bf,!1,3),a7:300,G:X(cu,Za(n.cT),Gd)};var e,r,t}function Hi(n){return{fR:-n.fR,fS:-n.fS,cX:-n.cX}}function Yi(n){return 1===n.$}function Oi(n){return 1===n.$}function Qi(n){return{gD:Hi(n.gD),gJ:n.gK,gK:n.gJ}}function Zi(n){if(0<Va(n)){var e=yi(n),n=Ja(e.fR)<.9?X(lu,e,fd):X(lu,e,sd);return{a:n,b:X(lu,e,n)}}return{a:fd,b:sd}}function Gi(g){return function(b){return function(p){return function(m){return function(v){return function(d){return function(s){return function(f){return function(l){return function(n){var e=4/(g.s*g.s*1e7*13),r=4/(13*g.s),t=X(Vu,p.b9,v),o=X(Vu,p.b9,l),a=X(Vu,p.b9,s),i=X(Vu,b.b9,f),c=X(Vu,b.b9,d),u=X(Vu,b.b9,m);return X(Qr,N(Wv,Yv({a0:0,gD:u,a1:a}),g,b,p,{Y:1e6,aa:-1e6,ah:0,ai:0,M:r,I:12/13,U:e,O:hu,E:X(lu,a,u),F:X(lu,u,a)}),X(Qr,N(Wv,Yv({a0:0,gD:c,a1:o}),g,b,p,{Y:1e6,aa:-1e6,ah:0,ai:0,M:r,I:12/13,U:e,O:hu,E:X(lu,o,c),F:X(lu,c,o)}),X(Qr,N(Wv,Yv({a0:0,gD:i,a1:t}),g,b,p,{Y:1e6,aa:-1e6,ah:0,ai:0,M:r,I:12/13,U:e,O:hu,E:X(lu,t,i),F:X(lu,i,t)}),n)))}}}}}}}}}}function Ji(n){var e=C([P(Cm,{au:D(Tu,1,1,0)}),P(Cm,{au:D(Tu,1,-1,0)}),P(Cm,{au:D(Tu,-1,1,0)}),P(Cm,{au:D(Tu,-1,-1,0)})]),r={a:2.8,b:2,c:.5},t=X(Hd,ld,r),o=D(Tu,-35,0,1.1),a=(a={ee:1===n.cS?D(Lf,43,142,228):D(Lf,255,165,0),fs:.5},ni({ee:a.ee,dv:0,fs:a.fs})),a=Mm(C([X(Rm,a,X(Hd,ld,r)),X(jd,a,X(Hd,X(wm,X(Lm,-.3,Di(ld)),X(wm,X(Lm,.5,Da(ld)),ld)),{a:2.2,b:1.8,c:.5}))]));return e=X(Vf,o,X(Zs,ri(1190),X(Vi,t,{aw:a,m:X(Pm,n.m,e)}))),n.cS?e:D(rd,Zd,3.141592653589793,e)}function Ki(n){return D(pt,h(function(n,e){return X(Qr,n,e)}),R,n.fY)}function nc(n){return n.b?ut(n.a):lt}function ec(n){return y(n,Pf)}function rc(n){return n.gO?xf:hf}function tc(n){return 0<n.dp?ut(n.dp):lt}function oc(n){return n.dD}function ac(n){return Ra(n.ck)}function ic(n){return-n}function cc(n){if(t=X(At,Ja((r=n).fR),X(At,Ja(r.fS),Ja(r.cX)))){var e=r.cX/t,n=r.fS/t,r=r.fR/t,t=Xu(r*r+n*n+e*e);return ut({fR:r/t,fS:n/t,cX:e/t})}return lt}function uc(n){return Gn(function(n){return"script"==n?"p":n}(n))}function lc(n){function e(n){return wp(1e4*n)/100}var r=n.b,t=n.c,o=n.d;return t=C(["rgba(",Xp(e(n.a)),"%,",Xp(e(r)),"%,",Xp(e(t)),"%,",Xp(wp(1e3*o)/1e3),")"]),X(vt,"",t)}function fc(n){return n}function sc(n){return D(of,{$7:n.$7,dQ:n.dQ,d6:n.d6},{bS:n.bS,b4:n.b4,cd:n.cd,ce:n.ce},{bS:n.bS,b4:n.b4,cd:n.cd,ce:n.ce})}function dc(n){return N(ml,C([sc(n),z(kp,!1,!1,!1,!1)]),Wp,Up,qp,{})}function vc(n){return dc({bS:7680,$7:15,dQ:8,b4:516,d6:X(mf,2,n+4),cd:5386,ce:5386})}function mc(n){return $i(n)}function pc(n){return.5*n}function bc(n){return z(Ep,515,n.as,n.ap,n.ao)}function gc(n){return Xi(Da(n))}function hc(n){return n.fN}function xc(e){var n=hc(e.eg),r={dD:mc(n),d7:function(n){return Di(n)}(n),d8:function(n){return zi(n)}(n),d9:Xi(gc(n))},t=Ia(e.et);if(1===(l=z(tb,r,1,lt,C([t]))).$)return R;var o=l.a,a=X(mb,ld,n),i=X(Rs,.99,X(zs,Ka(e.ek),ic(Ba(o)))),c=qa(o),u=function(n){var e=n,r=X(At,Ja(e.fR),X(At,Ja(e.fS),Ja(e.cX)));if(r){var t=e.cX/r,n=e.fS/r,e=e.fR/r;return Xu(e*e+n*n+t*t)*r}return 0}(D(pb,c.a,c.b,c.c)),r=X(Rs,1.01,X(Cs,u,ic(Ua(o)))),l=X(fb,e.eg,{fW:e.fW,gi:r,gB:i}),o=(c=vb(l).e3)?Ma(Xi(gc(n))):Ca(mc(n)),i=(r=function(){var n=e.fE;switch(n.$){case 0:return{a:0,b:0};case 1:return{a:1,b:0};case 2:return{a:2,b:0};case 3:return{a:3,b:n.a};case 4:return{a:4,b:n.a};default:return{a:5,b:0}}}()).a,n=r.b,r=X(Ap,e.ew,e.fQ),n=Tl({eQ:0,eR:o.fR,eS:zl(r),eT:e.fz,eU:0,eV:o.fS,eW:Nl(r),eX:ti(u),eY:0,eZ:o.cX,e_:Vl(r),e$:i,e0:0,e1:c,e2:0,e3:n}),f=M(Ip,n,a,l,ob,t,{Z:R,ak:R,an:R}),s=e.eL;switch(s.$){case 0:return xo(C([D(Np,f.Z,{a:d=s.a,b:zp},Zp),D(Np,f.ak,ub,Zp)]));case 1:var d=s.a;return xo(C([D(Np,f.Z,ub,Zp),C([ab]),D(Np,f.an,d.bX,Bp),C([vc(0)]),D(Np,f.Z,{a:d,b:zp},lb),D(Np,f.ak,ub,Zp)]));default:var v=s.a,d=s.b;return xo(C([D(Np,f.Z,{a:d,b:zp},Zp),C([ab]),X(Yp,f.an,v),D(db,f.Z,d,Fr(v)),D(Np,f.ak,ub,Zp)]))}}function Sc(n){return X(bb,{ec:n.ec,ed:n.ed,eg:n.eg,ek:n.ek,ep:n.ep},C([{et:n.et,ew:n.ew,eL:n.eL,fE:n.fE,fQ:n.fQ}]))}function yc(n){return n}function Pc(n){return X(yb,$a(n),Ta(n).aw)}function Rc(n){return!n.$}function Cc(n){var e=function(n){var e=n,r=Ja(e.cX),t=Ja(e.fS),n=Ja(e.fR);if(x(n,t)<1){if(x(n,r)<1){var o=Xu(e.cX*e.cX+e.fS*e.fS);return{fR:0,fS:-e.cX/o,cX:e.fS/o}}o=Xu(e.fS*e.fS+e.fR*e.fR);return{fR:-e.fS/o,fS:e.fR/o,cX:0}}if(x(t,r)<1){o=Xu(e.cX*e.cX+e.fR*e.fR);return{fR:e.cX/o,fS:0,cX:-e.fR/o}}o=Xu(e.fR*e.fR+e.fS*e.fS);return{fR:-e.fS/o,fS:e.fR/o,cX:0}}(n);return{a:e,b:{fR:n.fS*e.cX-n.cX*e.fS,fS:n.cX*e.fR-n.fR*e.cX,cX:n.fR*e.fS-n.fS*e.fR}}}function Mc(n){return X(zb,"click",Ht(n))}function Tc(n){var e=pc(Ka(n.fM));return{dO:{$:0,a:Vb(e)},fN:n.fN}}function wc(n){var e=n.dd,r=n.d4,t=n.df,o=n.c2,a=n.dC,n=X(vt,"-",C([e,r]));return X(Sb,C([X($p,"padding","4px 0")]),C([X(kb,C([Wb("radio"),Ib(n),Bb(e),jb(r),Ab(o),X(zb,"change",X(Wt,a,Ub))]),R),X(Eb,C([Fb(n)]),C([qb(t)]))]))}function Lc(n){return{fR:fs(n),fS:Ts(n)}}function $c(n){return n}function Xc(n){return n.f2}function Dc(n){return Tl({eQ:n.fR,eR:n.cK,eS:0,eT:0,eU:n.fS,eV:n.cr,eW:0,eX:0,eY:n.cX,eZ:n.ci,e_:0,e$:0,e0:n.d0,e1:n.dM,e2:0,e3:0})}function zc(n){return e=Oa(n),n=zl(r=e),e=Nl(r),r=Vl(r),D(Vp,.4124*n+.3576*e+.1805*r,.2126*n+.7152*e+.0722*r,.0193*n+.1192*e+.9505*r);var e,r}function Nc(n){return n.d7}function Vc(n){return n.d8}function _c(n){return X(ad,n.dD,n.d7)}function Ac(n){return X(ad,n.dD,n.d9)}function Fc(n){var e={dD:n.bi,d7:Vc(n.gm),d8:X(yg,Nc(e=n.gm),Vc(e)),d9:Nc(n.gm)};return D(Cg,Ac,n.bN,D(Pg,_c,ic(n.bQ),D(Pg,Wi,n.bI,e)))}function Ic(n){return n.b}In["Browser.Events"]={b:Ln,c:vn,d:dn,e:0,f:f};var kc,Ec,Bc,Uc,qc,Wc,jc,Hc,Yc,Oc,Qc,Zc,Gc,Jc,Kc,nu=Bn("Browser.Events"),eu=s(function(n,e,r){return nu(D(ua,n,e,r))}),ru=X(eu,0,"keydown"),tu=X(eu,0,"keyup"),ou=ln,au=h(function(n,e){return{$:2,a:n,b:e}}),iu=h(function(n,e){return{$:3,a:n,b:e}}),cu=h(function(n,e){var r=n,t=e,n=t.gj;if(n.b){e=n.b;return P(t,{fY:X(Qr,P(r,{m:n.a}),t.fY),gj:e})}return P(t,{fY:X(Qr,P(r,{m:t.gC}),t.fY),gC:t.gC+1})}),uu=h(function(n,e){return{fR:n.fR+e.fR,fS:n.fS+e.fS,cX:n.cX+e.cX}}),lu=h(function(n,e){return{fR:n.fS*e.cX-n.cX*e.fS,fS:n.cX*e.fR-n.fR*e.cX,cX:n.fR*e.fS-n.fS*e.fR}}),fu=h(function(n,e){return{fR:n*e.fR,fS:n*e.fS,cX:n*e.cX}}),su=h(function(n,e){return{fR:n.fR-e.fR,fS:n.fS-e.fS,cX:n.cX-e.cX}}),du=l(function(n,e,r,t){r=X(su,r,Ra(t.b9)),e=X(fu,n,e),r=X(lu,r,e);return P(t,{co:X(uu,t.co,e),cU:X(uu,t.cU,r)})}),vu=l(function(n,e,r,t){return 0<t.dp?z(du,n,Ma(e),Ca(r),t):t}),mu=l(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),pu=h(function(n,e){return{$:0,a:n,b:e}}),bu=h(function(n,e){var r=n.a,t=n.b,o=n.c,a=n.d,i=e.fR,c=e.fS,u=e.cX,l=-a*u+r*c-t*i,n=-a*c+o*i-r*u,e=-a*i+t*u-o*c,u=-r*i-t*c-o*u;return{fR:e*-a+u*-r+n*-o-l*-t,fS:n*-a+u*-t+l*-r-e*-o,cX:l*-a+u*-o+e*-t-n*-r}}),gu=h(function(n,e){return X(bu,n.b,X(su,e,n.a))}),hu={fR:0,fS:0,cX:0},xu=h(function(n,e){var r=n.a,t=n.b,o=n.c,a=n.d,i=e.a,c=e.b,n=e.c,e=e.d;return z(mu,r*e+t*n-o*c+a*i,-r*n+t*e+o*i+a*c,r*c-t*i+o*e+a*n,-r*i-t*c-o*n+a*e)}),Su=h(function(n,e){var r=n.a,t=n.b,o=n.c,a=n.d,i=e.fR,c=e.fS,u=e.cX,l=a*u+r*c-t*i,n=a*c+o*i-r*u,e=a*i+t*u-o*c,u=-r*i-t*c-o*u;return{fR:e*a+u*-r+n*-o-l*-t,fS:n*a+u*-t+l*-r-e*-o,cX:l*a+u*-o+e*-t-n*-r}}),yu=h(function(n,e){var r=n.b,t=e.b;return X(pu,X(uu,n.a,X(Su,r,e.a)),X(xu,r,t))}),Pu=h(function(n,e){var r=Ta(e).m;return!r.$&&y(n,r.a)?z(vu,4e5,D(qo,$a,Da,e),Xa(e),e):e}),Ru={$:4},Cu=aa(C([{a:"ArrowLeft",b:{$:2,a:-1}},{a:"ArrowRight",b:{$:2,a:1}},{a:"ArrowUp",b:{$:3,a:1}},{a:"ArrowDown",b:{$:3,a:-1}},{a:" ",b:sn={$:0}},{a:"Shift",b:En={$:1}},{a:"c",b:Ru}])),Mu={$:2},Tu=s(function(n,e,r){return{fR:n,fS:e,cX:r}}),wu=z(mu,0,0,0,1),Lu=X(pu,hu,wu),$u={f1:0,gk:.3},Xu=G,Du=h(function(n,e){return Xu(D(pt,function(n){return At(Va(n))},e*e,n.aC))}),zu=h(function(n,e){var r=n.al;return X(At,_a(n.cI)+r,e)}),Nu=h(function(n,e){switch(n.$){case 0:return X(Du,n.a,e);case 2:return X(zu,n.a,e);case 1:return 340282347e30;default:return X(At,e,_a(n.a))}}),Vu=h(function(n,e){return X(Su,n.b,e)}),_u=s(function(n,e,r){for(;;){if(!e.b)return r;var t=n,o=e.b,a=X(Qr,X(Vu,n,e.a),r);n=t,e=o,r=a}}),Au=h(function(n,e){return D(_u,n,e,R)}),Fu=h(function(n,e){var r=n.a,t=n.b,o=t.a,a=t.b,i=t.c,c=t.d,u=e.fR,l=e.fS,f=e.cX,n=c*f+o*l-a*u,t=c*l+i*u-o*f,e=c*u+a*f-i*l,f=-o*u-a*l-i*f;return{fR:e*c+f*-o+t*-i-n*-a+r.fR,fS:t*c+f*-a+n*-o-e*-i+r.fS,cX:n*c+f*-i+e*-a-t*-o+r.cX}}),Iu=s(function(n,e,r){for(;;){if(!e.b)return r;var t=n,o=e.b,a=X(Qr,X(Fu,n,e.a),r);n=t,e=o,r=a}}),ku=h(function(n,e){return D(Iu,n,e,R)}),Eu=s(function(n,e,r){for(;;){if(!e.b)return r;var t=e.a.aC,o=n,a=e.b,t=X(Qr,{cD:X(Vu,n,e.a.cD),aC:yt(X(ku,n,t))},r);n=o,e=a,r=t}}),Bu=h(function(n,e){return{eQ:n.eQ*e.eQ+n.eR*e.eU+n.eS*e.eY,eR:n.eQ*e.eR+n.eR*e.eV+n.eS*e.eZ,eS:n.eQ*e.eS+n.eR*e.eW+n.eS*e.e_,eU:n.eU*e.eQ+n.eV*e.eU+n.eW*e.eY,eV:n.eU*e.eR+n.eV*e.eV+n.eW*e.eZ,eW:n.eU*e.eS+n.eV*e.eW+n.eW*e.e_,eY:n.eY*e.eQ+n.eZ*e.eU+n.e_*e.eY,eZ:n.eY*e.eR+n.eZ*e.eV+n.e_*e.eZ,e_:n.eY*e.eS+n.eZ*e.eW+n.e_*e.e_}}),Uu=h(function(n,e){n=La(n);return X(Bu,n,X(Bu,e,Aa(n)))}),qu=h(function(n,e){var r=e.aC,t=e.d3,o=e.fG,a=e.cI,i=e.fO,c=e.eD;return{bR:D(Eu,n,e.bR,R),eD:X(Uu,n,c),cI:X(Fu,n,a),d3:X(Au,n,t),fG:X(Au,n,o),aC:X(ku,n,r),fO:i}}),Wu=h(function(n,e){var r=e.cI;return{cD:X(Vu,n,e.cD),cI:X(Fu,n,r)}}),ju=h(function(n,e){var r=e.al,t=e.fO;return{eD:e.eD,cI:X(Fu,n,e.cI),al:r,fO:t}}),Hu=s(function(n,e,r){for(;;){if(!e.b)return r;var t=e.a,o=n,a=e.b,i=X(Qr,function(){switch(t.$){case 0:return{$:0,a:X(qu,n,t.a)};case 1:return{$:1,a:X(Wu,n,t.a)};case 2:return{$:2,a:X(ju,n,t.a)};default:return{$:3,a:X(Fu,n,t.a)}}}(),r);n=o,e=a,r=i}}),Yu=h(function(n,e){return D(Hu,n,e,R)}),Ou=h(function(n,e){return{eQ:n.eQ+e.eQ,eR:n.eR+e.eR,eS:n.eS+e.eS,eU:n.eU+e.eU,eV:n.eV+e.eV,eW:n.eW+e.eW,eY:n.eY+e.eY,eZ:n.eZ+e.eZ,e_:n.e_+e.e_}}),Qu={eQ:0,eR:0,eS:0,eU:0,eV:0,eW:0,eY:0,eZ:0,e_:0},Zu=l(function(n,e,r,t){var o=-n*r*t,a=-n*e*t,i=-n*e*r;return{eQ:n*(r*r+t*t),eR:i,eS:a,eU:i,eV:n*(t*t+e*e),eW:o,eY:a,eZ:o,e_:n*(e*e+r*r)}}),Gu=l(function(n,e,r,t){var o=n.a.fR,a=n.a.fS,i=n.a.cX,t=X(Uu,n,t),e=z(Zu,r,o-e.fR,a-e.fS,i-e.cX);return X(Ou,t,e)}),Ju=h(function(n,e){n=La(n);return X(Bu,Aa(n),X(Bu,e,n))}),Ku=h(function(n,e){return{eQ:n*e.eQ,eR:n*e.eR,eS:n*e.eS,eU:n*e.eU,eV:n*e.eV,eW:n*e.eW,eY:n*e.eY,eZ:n*e.eZ,e_:n*e.e_}}),nl=h(function(n,e){var r=function(n){var e=D(pt,h(function(n,e){return e+Na(n)}),0,n);return 0<e?D(pt,function(n){return uu(X(fu,Na(n)/e,function(){switch(n.$){case 0:return n.a.cI;case 3:return n.a;case 2:default:return n.a.cI}}()))},hu,n):hu}(n),t=za(r),o=wa(t),a=X(Yu,o,n),r=X(yu,Lu,t),o=X(yu,r,o);return Fa({eb:.01,ch:hu,ef:D(pt,Nu,0,a),ck:t,H:e,co:hu,m:-1,de:Qu,ct:Qu,cu:0,eP:.01,dp:0,e4:$u,dX:a,cU:hu,b9:r,cV:hu,d5:X(Yu,o,n)})}),el=h(function(n,e){n=D(pt,h(function(n,e){return X(Qr,n,e)}),R,n);return X(nl,n,e)}),rl={fR:0,fS:0,cX:1},tl=el(C([{$:1,a:{cD:rl,cI:hu}}])),ol={$:0},al=ol,il=h(function(n,e){for(;;){if(!n.b)return e;var r=n.a;n=n.b,e=X(Qr,r,e)}}),cl=h(function(n,e){return{$:1,a:n,b:e}}),ul={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void main () {\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\n        }\n    ",attributes:{},uniforms:{colorTexture:"cm"}},ll={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        \n        void main () {\n            gl_FragColor = vec4(constantColor, 1.0);\n        }\n    ",attributes:{},uniforms:{constantColor:"aT"}},fl={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"bf",sceneProperties:"e"}},sl={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        uniform mediump float backlight;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{backlight:"cZ",colorTexture:"cm",sceneProperties:"e"}},dl=h(function(n,e){switch(e.$){case 0:return X(ar,n,e);case 1:return X(ir,n,e);case 2:return X(cr,n,e);case 3:return X(ur,n,e);case 4:return X(lr,n,e);default:return X(fr,n,e)}}),vl=h(function(n,e){switch(e.$){case 0:return X(qe,n,e);case 1:return X(We,n,e);case 2:return X(je,n,e);case 3:return X(He,n,e);case 4:return X(Ye,n,e);case 5:return X(Oe,n,e);case 6:return X(Qe,n,e);case 7:return X(Ze,n,e);default:return function(n){var e=n.sampleAlphaToCoverage;e.toggle=n.toggle,e.enabled||(n.gl.enable(n.gl.SAMPLE_ALPHA_TO_COVERAGE),e.enabled=!0)}(n)}}),ml=Ue,pl=h(function(n,e){return x(n,e)<0?n:e}),bl=o(function(n,e,r,t,o,a,i){for(;;){if(!i.b)return{e6:e,e7:t,e8:a,e9:n,fa:r,fb:o};var c=i.a,u=i.b,l=c.fR,f=c.fS,c=c.cX;n=X(pl,l,n),e=X(At,l,e),r=X(pl,f,r),t=X(At,f,t),o=X(pl,c,o),a=X(At,c,a),i=u}}),gl=h(function(n,e){var r=n.fR,t=n.fS,n=n.cX;return S(bl,r,r,t,t,n,n,e)}),hl={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 materialColor;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"ad",lights12:"bX",lights34:"cx",lights56:"cy",lights78:"cz",materialColor:"dq",sceneProperties:"e",viewMatrix:"f"}},xl={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D materialColorTexture;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"ad",lights12:"bX",lights34:"cx",lights56:"cy",lights78:"cz",materialColorTexture:"dr",normalMapTexture:"bo",sceneProperties:"e",useNormalMap:"by",viewMatrix:"f"}},Sl=(an=function(n){return{$:5,a:n}})(1029),yl=an(1028),Pl=s(function(n,e,r){return 1===e?X(Qr,n?Sl:yl,r):r}),Rl={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 baseColor;\n        uniform lowp float roughness;\n        uniform lowp float metallic;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColor:"ee",enabledLights:"ad",lights12:"bX",lights34:"cx",lights56:"cy",lights78:"cz",metallic:"dv",roughness:"fs",sceneProperties:"e",viewMatrix:"f"}},Cl={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D baseColorTexture;\n        uniform lowp vec4 constantBaseColor;\n        uniform mediump sampler2D roughnessTexture;\n        uniform lowp vec2 constantRoughness;\n        uniform mediump sampler2D metallicTexture;\n        uniform lowp vec2 constantMetallic;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\n            if (constantValue.y == 1.0) {\n                return constantValue.x;\n            } else {\n                vec4 textureColor = texture2D(texture, uv);\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\n            }\n        }\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\n        \n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColorTexture:"c$",constantBaseColor:"c3",constantMetallic:"c4",constantRoughness:"c5",enabledLights:"ad",lights12:"bX",lights34:"cx",lights56:"cy",lights78:"cz",metallicTexture:"dw",normalMapTexture:"bo",roughnessTexture:"dV",sceneProperties:"e",useNormalMap:"by",viewMatrix:"f"}},Ml={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{quadVertex:"cJ"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",quadVertexPositions:"ay",sceneProperties:"e",viewMatrix:"f"}},Tl=function(n){var e=new Float64Array(16);return e[0]=n.eQ,e[1]=n.eU,e[2]=n.eY,e[3]=n.e0,e[4]=n.eR,e[5]=n.eV,e[6]=n.eZ,e[7]=n.e1,e[8]=n.eS,e[9]=n.eW,e[10]=n.e_,e[11]=n.e2,e[12]=n.eT,e[13]=n.eX,e[14]=n.e$,e[15]=n.e3,e},wl=l(function(n,e,r,t){t=Ca(t),r=Ca(r),e=Ca(e),n=Ca(n);return Tl({eQ:n.fR,eR:e.fR,eS:r.fR,eT:t.fR,eU:n.fS,eV:e.fS,eW:r.fS,eX:t.fS,eY:n.cX,eZ:e.cX,e_:r.cX,e$:t.cX,e0:0,e1:0,e2:0,e3:0})}),Re=(kn=h(function(n,e){return{$:0,a:n,b:e}}))({eq:1,eC:0,fd:6}),Ll=hr,$l=Re(C([{cJ:D(Ll,0,0,0)},{cJ:D(Ll,1,0,1)},{cJ:D(Ll,1,1,2)},{cJ:D(Ll,0,1,3)}])),Xl=h(function(n,e){return{$:1,a:n,b:e}}),Dl=h(function(n,e){if(e.$)return{a:e.a.H,b:1};return{a:n,b:0}}),zl=function(n){return n[0]},Nl=function(n){return n[1]},Vl=function(n){return n[2]},_l=Tr,Al=z(_l,0,0,0,0),Fl=h(function(n,e){return e.$?{a:e.a.H,b:Al}:{a:n,b:z(_l,zl(e=e.a),Nl(e),Vl(e),1)}}),Il=h(function(n,e){var r,t={a:n,b:e};if(t.a.$)return X(Xl,{a:r=t.a.a.H,b:Al},X(Dl,r,e));if(t.b.$)return X(Xl,X(Fl,r=t.b.a.H,n),X(Dl,r,e));return{$:0,a:t.a.a}}),kl=s(function(n,e,r){return{$:0,a:n,b:e,c:r}}),El=l(function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}}),Bl=l(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),Ul=vr,ql=X(Ul,0,0),Wl=h(function(n,e){return e.$?{a:e.a.H,b:ql}:{a:n,b:function(n){return X(Ul,n,1)}(e.a)}}),jl=l(function(n,e,r,t){var o,a=z(Bl,n,e,r,t);if(a.a.$)return z(El,{a:o=a.a.a.H,b:Al},X(Wl,o,e),X(Wl,o,r),X(Dl,o,t));if(a.b.$)return z(El,X(Fl,o=a.b.a.H,n),{a:o,b:ql},X(Wl,o,r),X(Dl,o,t));if(a.c.$)return z(El,X(Fl,o=a.c.a.H,n),X(Wl,o,e),{a:o,b:ql},X(Dl,o,t));if(a.d.$)return z(El,X(Fl,o=a.d.a.H,n),X(Wl,o,e),X(Wl,o,r),{a:o,b:1});return D(kl,a.a.a,a.b.a,a.c.a)}),Hl=Cr,Yl={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{quadVertex:"cJ"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",quadVertexPositions:"ay",sceneProperties:"e",viewMatrix:"f"}},Ol={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = quadVertex.xy;\n            interpolatedTangent = tangent;\n        }\n    ",attributes:{quadVertex:"cJ"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",quadVertexPositions:"ay",sceneProperties:"e",viewMatrix:"f"}},Ql=s(function(n,e,r){return.5<r?e+(1-r)*(n-e):n+r*(e-n)}),Zl=s(function(n,e,r){return{fR:n,fS:e,cX:r}}),Gl=h(function(n,e){return e-n}),Jl={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = quadVertex.xy;\n        }\n    ",attributes:{quadVertex:"cJ"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",quadVertexPositions:"ay",sceneProperties:"e",viewMatrix:"f"}},Kl=r(function(r,M,T,w,L){var n=X(gl,M,C([T,w,L])),n=ja(n);return X(cl,n,function(){switch(r.$){case 0:if(r.b.$){var u=r.b.a.H;return $(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,0,c),Jl,ul,$l,{cm:u,b:r,c:e,d:a,ay:z(wl,M,T,w,L),e:n,f:o})})}var l=r.b.a;return $(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,0,c),Ml,ll,$l,{aT:l,b:r,c:e,d:a,ay:z(wl,M,T,w,L),e:n,f:o})});case 1:if(r.b.$){u=r.b.a.H,s=r.c;return $(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,0,c),Jl,sl,$l,{cZ:ka(s),cm:u,b:r,c:e,d:a,ay:z(wl,M,T,w,L),e:n,f:o})})}var f=r.b.a,s=r.c;return $(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,0,c),Ml,fl,$l,{cZ:s,bf:X(Hl,ka(s),f),b:r,c:e,d:a,ay:z(wl,M,T,w,L),e:n,f:o})});case 2:var n=X(Il,r.b,r.c);if(n.$){var e=n.a,d=e.a,e=n.b,v=e.a,m=e.b;return $(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,0,c),Ol,xl,$l,{ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dr:d,b:r,c:e,bo:v,d:a,ay:z(wl,M,T,w,L),e:n,by:m,f:o})})}var p=n.a;return $(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,0,c),Yl,hl,$l,{ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dq:p,b:r,c:e,d:a,ay:z(wl,M,T,w,L),e:n,f:o})});default:e=z(jl,r.b,r.c,r.d,r.e);if(e.$){var n=e.a,b=n.a,g=n.b,n=e.b,h=n.a,x=n.b,n=e.c,S=n.a,y=n.b,n=e.d,v=n.a,m=n.b;return $(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,0,c),Ol,Cl,$l,{c$:b,c3:g,c4:y,c5:x,ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dw:S,b:r,c:e,bo:v,d:a,ay:z(wl,M,T,w,L),dV:h,e:n,by:m,f:o})})}var P=e.a,R=e.b,C=e.c;return $(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,0,c),Yl,Rl,$l,{ee:P,ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dv:C,b:r,c:e,d:a,ay:z(wl,M,T,w,L),fs:R,e:n,f:o})})}}())}),nf=s(function(n,e,r){return{$:3,a:n,b:e,c:r}})({eq:1,eC:3,fd:4}),ef=(Ln=C([{aM:X(Ul,0,1)},{aM:X(Ul,1,1)},{aM:X(Ul,2,1)},{aM:X(Ul,3,1)},{aM:X(Ul,0,-1)},{aM:X(Ul,1,-1)},{aM:X(Ul,2,-1)},{aM:X(Ul,3,-1)}]),vn=C([{a:0,b:1,c:2},{a:0,b:2,c:3},{a:4,b:6,c:5},{a:4,b:7,c:6},{a:4,b:5,c:1},{a:1,b:0,c:4},{a:5,b:6,c:2},{a:2,b:1,c:5},{a:6,b:7,c:3},{a:3,b:2,c:6},{a:7,b:4,c:0},{a:0,b:3,c:7}]),X(nf,Ln,vn)),rf={src:"\n        precision highp float;\n        \n        attribute highp vec2 quadShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 quadVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadShadowVertex.x), quadVertexPositions, position, normal, tangent);\n            normal *= quadShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{quadShadowVertex:"aM"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",quadVertexPositions:"ay",sceneProperties:"e",shadowLight:"cO",viewMatrix:"f"}},tf={src:"\n        precision lowp float;\n        \n        void main () {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    ",attributes:{},uniforms:{}},of=s(function(n,e,r){var t=n.dQ,o=n.$7,a=n.d6,i=h(function(n,e){return e(n)}),c=h(function(n,e){return e(n)}),n=function(n){return X(qo,i(n.b4),X(qo,c(n.bS),X(qo,c(n.cd),c(n.ce))))};return X(n,r,X(n,e,D(Ha,t,o,a)))}),af=D(of,{$7:0,dQ:0,d6:15},{bS:7680,b4:519,cd:7680,ce:7683},{bS:7680,b4:519,cd:7680,ce:7682}),cf=D(of,{$7:0,dQ:0,d6:15},{bS:7680,b4:519,cd:7680,ce:7682},{bS:7680,b4:519,cd:7680,ce:7683}),uf=h(function(n,e){return X(Qr,n?cf:af,e)}),lf=l(function(u,l,f,s){return{$:2,a:$(function(n,e,r,t,o,a,i,c){return N(ml,X(uf,t,c),rf,tf,ef,{b:r,c:e,d:a,ay:z(wl,u,l,f,s),e:n,cO:i,f:o})})}}),ff=o(function(n,e,r,t,o,a,i){r=N(Kl,r,t,o,a,i),e={a:n,b:e};return e.a?e.b?Ia(C([r,z(lf,t,o,a,i)])):r:e.b?z(lf,t,o,a,i):al}),sf=r(function(n,e,r,t,o){return S(ff,!0,!1,n,e,r,t,o)}),df=r(function(n,e,r,t,o){return{$:3,a:n,b:e,c:r,d:t,e:o}}),vf=s(function(n,e,r){return x(r,n)<0?n:0<x(r,e)?e:r}),mf=U,pf=h(function(n,e){return e.$?{$:1,a:e.a}:{$:0,a:n(e.a)}}),bf=h(function(n,e){return{$:0,a:n,b:e}}),gf=45,hf=100,xf=12,Sf=1e4,yf={c1:!1,br:!1,a6:0,V:0},Pf={$:1},Rf=h(function(n,e){return{f3:e,al:Ka(n)}}),Cf=h(function(n,e){return X(Rf,e,n)}),Mf={fR:0,fS:0,cX:0},Tf={al:2},wf=l(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),Lf=s(function(n,e,r){return z(wf,n/255,e/255,r/255,1)}),$f=(rn={ee:D(Lf,140,142,141),fs:.5},ni({ee:rn.ee,dv:1,fs:rn.fs})),dn=qr,Xf={$:1},Df=function(n){return n===1/0||n===-1/0},zf=K,Nf=h(function(n,e){return X(pu,n,e.b)}),Vf=h(function(n,e){var r=e,e=X(yu,r.b9,wa(r.ck)),e=X(yu,X(Nf,Ca(n),e),r.ck);return P(r,{b9:e,d5:X(Yu,e,r.dX)})}),_f=h(function(n,e){e*=2*n/5*e;return{eQ:e,eR:0,eS:0,eU:0,eV:e,eW:0,eY:0,eZ:0,e_:e}}),f=function(n){return el(C([ii(n)]))},Af=h(function(n,e){return{fR:e.fR-n.fR,fS:e.fS-n.fS,cX:e.cX-n.cX}}),Ff={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = uv;\n        }\n    ",attributes:{position:"cI",uv:"W"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},If=l(function(u,n,l,f){return X(cl,n,$(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,f,c),Ff,ul,l,{cm:u,b:r,c:e,d:a,e:n,f:o})}))}),kf={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{position:"cI"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},Ef=l(function(u,n,l,f){return X(cl,n,$(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,f,c),kf,ll,l,{aT:u,b:r,c:e,d:a,e:n,f:o})}))}),Bf=h(function(n,e){return{$:3,a:n,b:e}}),Uf={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(constantColor, alpha);\n        }\n    ",attributes:{},uniforms:{constantColor:"aT",pointRadius:"cH",sceneProperties:"e"}},qf={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform lowp float pointRadius;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            float supersampling = sceneProperties[3][0];\n            gl_PointSize = 2.0 * pointRadius * supersampling + 2.0;\n        }\n    ",attributes:{position:"cI"},uniforms:{modelMatrix:"b",modelScale:"c",pointRadius:"cH",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},Wf=l(function(u,l,n,f){return X(Bf,n,$(function(n,e,r,t,o,a,i,c){return N(ml,c,qf,Uf,f,{aT:u,b:r,c:e,cH:l,d:a,e:n,f:o})}))}),jf=r(function(u,l,n,f,s){return X(cl,n,$(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,s,c),kf,fl,f,{bf:X(Hl,ka(l),u),b:r,c:e,d:a,e:n,f:o})}))}),Hf={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            vec4 color = toSrgb(emissiveColor, sceneProperties);\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(color.rgb, alpha);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"bf",pointRadius:"cH",sceneProperties:"e"}},Yf=r(function(u,l,f,n,s){return X(Bf,n,$(function(n,e,r,t,o,a,i,c){return N(ml,c,qf,Hf,s,{bf:X(Hl,ka(l),u),b:r,c:e,cH:f,d:a,e:n,f:o})}))}),Of={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"cD",position:"cI"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},Qf=l(function(l,n,f,s){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,s,c),Of,hl,f,{ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dq:l,b:r,c:e,d:a,e:n,f:o})}))}),Zf={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        attribute highp vec3 tangent;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getWorldTangent(vec3 modelTangent, vec4 modelScale, mat4 modelMatrix) {\n            return (modelMatrix * vec4(safeNormalize(modelScale.xyz * modelTangent), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = getWorldTangent(tangent, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"cD",position:"cI",tangent:"fB",uv:"W"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},Gf=t(function(l,f,s,n,d,v){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,v,c),Zf,xl,d,{ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dr:l,b:r,c:e,bo:f,d:a,e:n,by:s,f:o})}))}),Jf=t(function(l,f,s,n,d,v){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,v,c),Of,Rl,d,{ee:l,ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dv:s,b:r,c:e,d:a,fs:f,e:n,f:o})}))}),Kf=r(function(u,l,n,f,s){return X(cl,n,$(function(n,e,r,t,o,a,i,c){return N(ml,D(Pl,t,s,c),Ff,sl,f,{cZ:ka(l),cm:u,b:r,c:e,d:a,e:n,f:o})}))}),ns={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = vec3(0.0, 0.0, 0.0);\n        }\n    ",attributes:{normal:"cD",position:"cI",uv:"W"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",viewMatrix:"f"}},es=l(function(l,n,f,s){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,s,c),ns,xl,f,{ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dr:l,b:r,c:e,bo:l,d:a,e:n,by:0,f:o})}))}),rs=a(function(l,f,s,d,v,m,n,p,b){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,b,c),ns,Cl,p,{c$:l,c3:f,c4:m,c5:d,ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dw:v,b:r,c:e,bo:l,d:a,dV:s,e:n,by:0,f:o})}))}),ts=h(function(n,e){switch(n.$){case 0:if(n.b.$){var r=n.b.a.H;switch(e.$){case 0:case 1:case 2:case 3:case 4:return al;case 5:case 6:case 7:d=e.c,C=e.d;return z(If,r,ja(R=e.a),d,C);case 8:case 9:default:return al}}else{var t=n.b.a;switch(e.$){case 0:return al;case 1:case 2:case 3:case 4:case 5:case 6:case 7:d=e.c,C=e.d;return z(Ef,t,ja(R=e.a),d,C);case 8:case 9:d=e.c;return z(Ef,t,ja(R=e.a),d,0);default:d=e.d;return z(Wf,t,e.b,ja(R=e.a),d)}}case 1:if(n.b.$){r=n.b.a.H,a=n.c;switch(e.$){case 0:case 1:case 2:case 3:case 4:return al;case 5:case 6:case 7:d=e.c,C=e.d;return N(Kf,r,a,ja(R=e.a),d,C);case 8:case 9:default:return al}}else{var o=n.b.a,a=n.c;switch(e.$){case 0:return al;case 1:case 2:case 3:case 4:case 5:case 6:case 7:d=e.c,C=e.d;return N(jf,o,a,ja(R=e.a),d,C);case 8:case 9:d=e.c;return N(jf,o,a,ja(R=e.a),d,0);default:d=e.d;return N(Yf,o,a,e.b,ja(R=e.a),d)}}case 2:var i=X(Il,n.b,n.c);if(i.$){var c=i.a,u=c.a,c=i.b,l=c.a,f=c.b;switch(e.$){case 0:case 1:case 2:case 3:case 4:case 5:return al;case 6:d=e.c,v=e.d;return z(es,u,ja(R=e.a),d,v);case 7:d=e.c,v=e.d;return M(Gf,u,l,f,ja(R=e.a),d,v);case 8:case 9:default:return al}}else{var s=i.a;switch(e.$){case 0:case 1:return al;case 2:var d=e.c,v=e.d;return z(Qf,s,ja(R=e.a),d,v);case 3:return al;case 4:var d=e.c,v=e.d;return z(Qf,s,ja(R=e.a),d,v);case 5:return al;case 6:case 7:d=e.c,v=e.d;return z(Qf,s,ja(R=e.a),d,v);case 8:case 9:default:return al}}default:c=z(jl,n.b,n.c,n.d,n.e);if(c.$){var i=c.a,m=i.a,p=i.b,i=c.b,b=i.a,g=i.b,i=c.c,h=i.a,x=i.b,i=c.d,l=i.a,f=i.b;switch(e.$){case 0:case 1:case 2:case 3:case 4:case 5:return al;case 6:d=e.c,C=e.d;return T(rs,m,p,b,g,h,x,ja(R=e.a),d,C);case 7:R=e.a,d=e.c,C=e.d;return function(h){return function(g){return function(b){return function(p){return function(m){return function(v){return function(d){return function(s){return function(n){return function(f){return function(l){return X(cl,n,$(function(n,e,r,t,o,a,i,c){var u=i.a,i=i.b;return N(ml,D(Pl,t,l,c),Zf,Cl,f,{c$:h,c3:g,c4:v,c5:p,ad:i,bX:u.bX,cx:u.cx,cy:u.cy,cz:u.cz,dw:m,b:r,c:e,bo:d,d:a,dV:b,e:n,by:s,f:o})}))}}}}}}}}}}}(m)(p)(b)(g)(h)(x)(l)(f)(ja(R))(d)(C);case 8:case 9:default:return al}}else{var S=c.a,y=c.b,P=c.c;switch(e.$){case 0:case 1:return al;case 2:d=e.c,C=e.d;return M(Jf,S,y,P,ja(R=e.a),d,C);case 3:return al;case 4:d=e.c,C=e.d;return M(Jf,S,y,P,ja(R=e.a),d,C);case 5:return al;case 6:case 7:var R,d=e.c,C=e.d;return M(Jf,S,y,P,ja(R=e.a),d,C);case 8:case 9:default:return al}}}}),os=h(function(n,e){return{$:5,a:n,b:e}}),as=h(function(n,e){var r=n.a,t=n.b,o=n.c,n=e.f3;return{f3:{fR:r*n.fR,fS:t*n.fS,cX:o*n.cX},gn:r*e.gn,go:t*e.go,gp:o*e.gp}}),is=function(n){return new Float64Array([n.fR,n.fS,n.cX,n.fP])},cs=function(n){return{fR:n[0],fS:n[1],cX:n[2],fP:n[3]}},us=h(function(n,e){switch(e.$){case 0:return ol;case 5:return X(os,e.a,X(us,n,e.b));case 1:var r=e.b;return X(cl,X(as,n,e.a),X(ci,n,r));case 3:return e;case 2:return{$:2,a:X(ci,n,r=e.a)};default:r=e.a;return{$:4,a:X(fo,us(n),r)}}}),ls=h(function(n,e){return X(us,n,e)}),fs=W,ss=l(function(n,e,r,t){return{$:2,a:n,b:e,c:r,d:t}}),ds=l(function(n,e,r,t){return{$:3,a:n,b:e,c:r,d:t}}),vs=l(function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}}),ms=l(function(n,e,r,t){return{$:6,a:n,b:e,c:r,d:t}}),ps=l(function(n,e,r,t){return{$:7,a:n,b:e,c:r,d:t}}),bs=l(function(n,e,r,t){return{$:5,a:n,b:e,c:r,d:t}}),gs=l(function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}}),ln=function(n){switch(n.$){case 0:return n;case 1:return z(gs,n.a,n.b,n.c,1);case 2:return z(ss,n.a,n.b,n.c,1);case 3:return z(ds,n.a,n.b,n.c,1);case 4:return z(vs,n.a,n.b,n.c,1);case 5:return z(bs,n.a,n.b,n.c,1);case 6:return z(ms,n.a,n.b,n.c,1);case 7:return z(ps,n.a,n.b,n.c,1);case 8:case 9:default:return n}},hs=s(function(n,e,r){for(;;){var t=X(Ft,32,n),o=t.a,t=t.b;if(x(_t(o),32)<0)return X(Et,!0,{C:e,o:r,r:o});n=t,e=X(Qr,{$:1,a:o},e),r=r+1}}),xs=h(function(n,e){for(;;){if(!e.b)return!1;var r=e.b;if(n(e.a))return!0;n=n,e=r}}),Ss=h(function(n,e){return!X(xs,X(Co,fi,n),e)}),ys=h(function(r,n){return D(lo,h(function(n,e){return r(n)?X(Qr,n,e):e}),R,n)}),Ps=h(function(n,e){function r(n){var e=n.a,r=n.b,n=n.c;return 0<=e&&x(e,t)<0&&0<=r&&x(r,t)<0&&0<=n&&x(n,t)<0}var t=n.a;return X(Ss,r,e)?{J:e,aC:n}:{J:X(ys,r,e),aC:n}}),Rs=h(function(n,e){return n*e}),Cs=h(function(n,e){return e+n}),Ms=h(function(n,e){return n/e}),Ts=j,ws=r(function(n,e,r,t,o){for(;;){var a=t(e/r),a=X(Qr,a,o);if(y(e,n))return a;n=n,e=e-1,r=r,t=t,o=a}}),G=h(function(n,e){return n<1?R:N(ws,0,n,n,e,R)}),Ls={$:0},$s=function(n){return new Float64Array([n.fR,n.fS,n.cX])},Xs=h(function(n,e){var r=n.cI,t=n.W,o=t.a,t=t.b;return X(Qr,{cD:mi(n.cD),cI:di(r),W:X(Ul,o,t)},e)}),Ds=h(function(n,e){return x(e,n)<1}),zs=h(function(n,e){return X(At,n,e)}),Ns=h(function(n,e){return X(pl,n,e)}),Vs=o(function(n,e,r,t,o,a,i){for(;;){if(!i.b)return bi({e6:e,e7:t,e8:a,e9:n,fa:r,fb:o});var c=i.a,u=i.b,l=Vl(c.cI),f=Nl(c.cI),c=zl(c.cI);n=X(pl,n,c),e=X(At,e,c),r=X(pl,r,f),t=X(At,t,f),o=X(pl,o,l),a=X(At,a,l),i=u}}),_s=h(function(n,e){var r=Vl(n.cI),t=Nl(n.cI),n=zl(n.cI);return S(Vs,n,n,t,t,r,r,e)}),As=h(function(n,e){var r=n,n=e,e=fs(n);return{fR:e*fs(r),fS:e*Ts(r),cX:Ts(n)}}),Fs=(Ue=X(ht,0,71),an=X(G,72,X(Ql,0,6.283185307179586)),kc=Lt(36),Ec=X(ht,0,kc-1),Bc=X(G,kc,X(Ql,1.5707963267948966,-1.5707963267948966)),an=li(xo(X(fo,function(e){return X(fo,function(n){return{cD:hi(X(As,e,n)),cI:D(Zl,X(Rs,ui(n)*ui(e),1),X(Rs,ui(n)*si(e),1),X(Rs,si(n),1)),W:{a:X(Ms,e,6.283185307179586),b:X(Ms,X(Cs,1.5707963267948966,n),3.141592653589793)}}},Bc)},an))),Uc=h(function(n,e){return n*(kc+1)+e}),Ue=xo(X(fo,function(o){return xo(X(fo,function(n){var e=X(Uc,o+1,n),r=X(Uc,o,n),t=X(Uc,o+1,n+1),n=X(Uc,o,n+1);return C([{a:n,b:t,c:e},{a:n,b:e,c:r}])},Ec))},Ue)),ln(function(n){var e=D(Kr,Xs,R,gi(n));if(e.b){var r=e.a,t=e.b,e=X(nf,e,pi(n)),t=X(_s,r,t);return z(ms,t,n,e,0)}return Ls}(X(Ps,an,Ue)))),Is=q,hr=h(function(n,e){for(;;){var r=X(Is,144,2*n+3),t=X(Is,144,2*n+2),o=2*n+1,a=2*n,r=X(Qr,{a:144,b:a,c:t},X(Qr,{a:a,b:r,c:t},X(Qr,{a:a,b:o,c:r},X(Qr,{a:o,b:145,c:r},e))));if(!n)return r;n=n-1,e=r}}),ks=s(function(n,e,r){return.5<r?e+(1-r)*(n-e):n+r*(e-n)}),Re=h(function(n,e){for(;;){var r=D(ks,0,6.283185307179586,n/72),r=X(Qr,{cg:r,cE:0,cL:1},X(Qr,{cg:r,cE:1,cL:1},e));if(!n)return r;n=n-1,e=r}}),Es=(Tr=X(Re,71,C([{cg:0,cE:0,cL:0},{cg:0,cE:1,cL:0}])),vr=X(hr,71,R),X(nf,Tr,vr)),Bs={src:"\n        precision highp float;\n        \n        attribute highp float angle;\n        attribute highp float offsetScale;\n        attribute highp float radiusScale;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const lowp float kPerspectiveProjection = 0.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec3 perpendicularTo(vec3 d) {\n            float absX = abs(d.x);\n            float absY = abs(d.y);\n            float absZ = abs(d.z);\n            if (absX <= absY) {\n                if (absX <= absZ) {\n                    float scale = 1.0 / length(d.zy);\n                    return vec3(0.0, -d.z * scale, d.y * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            } else {\n                if (absY <= absZ) {\n                    float scale = 1.0 / length(d.xz);\n                    return vec3(d.z * scale, 0.0, -d.x * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            }\n        }\n        \n        void main () {\n            vec4 worldCenter = getWorldPosition(vec3(0.0, 0.0, 0.0), modelScale, modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 zDirection = getDirectionToLight(worldCenter.xyz, xyz_type, rgb_parameter);\n            vec3 xDirection = perpendicularTo(zDirection);\n            vec3 yDirection = cross(zDirection, xDirection);\n            float r = modelScale.x;\n            float adjustedRadius = r;\n            float zOffset = 0.0;\n            if (xyz_type.w == kPointLight) {\n                float distanceToLight = length(xyz_type.xyz - worldCenter.xyz);\n                float rSquared = r * r;\n                zOffset = rSquared / distanceToLight;\n                float zSquared = zOffset * zOffset;\n                adjustedRadius = sqrt(rSquared - zSquared) * radiusScale;\n            }\n            vec3 worldPosition =\n                worldCenter.xyz\n                    + zDirection * zOffset\n                    + xDirection * adjustedRadius * cos(angle)\n                    + yDirection * adjustedRadius * sin(angle);\n            vec3 directionToLight = getDirectionToLight(worldPosition, xyz_type, rgb_parameter);\n            float sceneDiameter = sceneProperties[3][1];\n            vec3 offset = -sceneDiameter * offsetScale * directionToLight;\n            vec4 offsetPosition = vec4(worldPosition + offset, 1.0);\n            gl_Position = projectionMatrix * (viewMatrix * offsetPosition);\n        }\n    ",attributes:{angle:"cg",offsetScale:"cE",radiusScale:"cL"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",shadowLight:"cO",viewMatrix:"f"}},Us=h(function(n,e){return{eG:y(n.eG,e.eG),t:n.t*e.t+n.u*e.w+n.v*e.z,u:n.t*e.u+n.u*e.x+n.v*e.A,v:n.t*e.v+n.u*e.y+n.v*e.B,w:n.w*e.t+n.x*e.w+n.y*e.z,x:n.w*e.u+n.x*e.x+n.y*e.A,y:n.w*e.v+n.x*e.y+n.y*e.B,z:n.z*e.t+n.A*e.w+n.B*e.z,A:n.z*e.u+n.A*e.x+n.B*e.A,B:n.z*e.v+n.A*e.y+n.B*e.B,Q:e.Q+(n.Q*e.t+n.R*e.w+n.S*e.z)*e.cN,R:e.R+(n.Q*e.u+n.R*e.x+n.S*e.A)*e.cN,S:e.S+(n.Q*e.v+n.R*e.y+n.S*e.B)*e.cN,cN:n.cN*e.cN}}),qs=h(function(n,e){var r=e;switch(r.$){case 0:return al;case 5:var t=r.b,o=X(Us,r.a,n);return X(os,o,t);case 1:case 3:case 2:default:return X(os,n,r)}}),Ws=h(function(n,e){return X(qs,function(n){n=vi(n);return{eG:!0,t:1,u:0,v:0,w:0,x:1,y:0,z:0,A:0,B:1,Q:n.fR,R:n.fS,S:n.cX,cN:1}}(n),e)}),js=l(function(n,e,r,t){r=X(ts,r,Fs),r=(e={a:n,b:e}).a?e.b?Ia(C([r,xi()])):r:e.b?xi():al,e=ai(t);return X(Ws,X(Af,Mf,oi(t)),X(ls,{a:e,b:e,c:e},r))}),Cr=h(function(n,e){return z(js,!0,!0,n,e)}),Hs=s(function(n,e,r){return{$:1,a:n,b:e,c:r}}),Ys=s(function(n,e,r){return{$:2,a:n,b:e,c:r}}),Os=h(function(n,e){return{$:0,a:n,b:e}}),Qs=function(n){switch(n.$){case 0:return X(Os,n.a,n.b);case 1:return D(Hs,n.a,n.b,n.c);case 2:return D(Ys,n.a,n.b,n.c);default:return N(df,n.a,n.b,n.c,n.d,n.e)}},Zs=h(function(n,e){var r=e;if(n.$)return Fa(P(r,{dp:0}));e=n.a,n=r.dX;return!n.b||!n.b.b&&1===n.a.$?r:Fa(P(r,{dp:e}))}),Ln=h(function(n,e){return P(e,{e4:n})}),K=(vn=X(Cf,Mf,Tf.al),U=X(Cr,Qs($f),vn),X(Vf,D(Tu,0,0,ti(Tf.al)),X(Zs,ri(1),X(Ln,dn({f1:.8,gk:.3}),X(f,vn,{aw:U,m:Pf}))))),Gs=s(function(n,e,r){return{fR:n,fS:e,cX:r}}),W=40,Js=161,u=131,Ks=s(function(n,e,r){var t=n,o=r,a=.5*e,i=fs(a),c=Ts(a),u=t.dD,l=o.fR-u.fR,f=o.fS-u.fS,s=o.cX-u.cX,d=t.ga,v=d.fR*c,n=i*v,r=v*v,e=d.fS*c,a=i*e,o=v*e,t=e*e,c=d.cX*c,i=i*c,v=v*c,e=e*c,c=c*c;return{fR:u.fR+(1-2*(t+c))*l+2*(o-i)*f+2*(v+a)*s,fS:u.fS+2*(o+i)*l+(1-2*(r+c))*f+2*(e-n)*s,cX:u.cX+2*(v-a)*l+2*(e+n)*f+(1-2*(r+t))*s}}),nd=h(function(n,e){var r=.5*n,n=Ts(r),r=fs(r),e=yi(e);return z(mu,e.fR*n,e.fS*n,e.cX*n,r)}),ed=s(function(n,e,r){var t=r.b;return X(pu,r.a,X(xu,X(nd,e,n),t))}),rd=s(function(n,e,r){var t=r,o=X(yu,t.b9,wa(t.ck)),r=D(Ks,n,e,Ra(o)),o=D(ed,Ma(Si(n)),function(n){return n}(e),X(Nf,Ca(r),o)),o=X(yu,o,t.ck);return P(t,{ct:X(Ju,o,t.de),b9:o,d5:X(Yu,o,t.dX)})}),td=h(function(n,e){var r=e.b;return X(pu,X(uu,n,e.a),r)}),od=h(function(n,e){var r=e,e=X(yu,r.b9,wa(r.ck)),e=X(yu,X(td,function(n){return n}(n),e),r.ck);return P(r,{b9:e,d5:X(Yu,e,r.dX)})}),ad=h(function(n,e){return{ga:e,dD:n}}),id={fR:1,fS:0,cX:0},j=X(ad,Mf,id),Ue=(G=h(function(n,e){return D(Tu,n,e,0)}),an=Js/2,X(od,D(Gs,0,0,W),D(rd,j,3.141592653589793,tl({aw:N(sf,Qs($f),X(G,-an,-an),X(G,-an,an),X(G,an,an),X(G,an,-an)),m:Mu})))),q={fY:R,f5:R,f6:R,gj:R,ey:hu,gC:0,gN:Dt},Re={fR:0,fS:0,cX:-1},cd={fR:0,fS:0,cX:1},ud=cd,ld={dD:Mf,d7:id,d8:hr={fR:0,fS:1,cX:0},d9:ud},fd={fR:1,fS:0,cX:0},sd={fR:0,fS:1,cX:0},dd=C([fd,sd,rl]),vd={fR:-1,fS:0,cX:0},md={fR:0,fS:-1,cX:0},pd={fR:0,fS:0,cX:-1},bd=s(function(n,e,r){var t=r/2,o=e/2,a=n/2,i=n*e*r,c={fR:-a,fS:o,cX:t},u={fR:a,fS:o,cX:t},l={fR:a,fS:-o,cX:t},f={fR:-a,fS:-o,cX:t},s={fR:-a,fS:o,cX:-t},d={fR:a,fS:o,cX:-t},v={fR:a,fS:-o,cX:-t},t={fR:-a,fS:-o,cX:-t},n={eQ:i/12*(e*e+r*r),eR:0,eS:0,eU:0,eV:i/12*(n*n+r*r),eW:0,eY:0,eZ:0,e_:i/12*(e*e+n*n)};return{bR:C([{cD:pd,aC:C([s,d,v,t])},{cD:rl,aC:C([f,l,u,c])},{cD:md,aC:C([l,f,t,v])},{cD:sd,aC:C([d,s,c,u])},{cD:vd,aC:C([t,f,c,s])},{cD:fd,aC:C([v,d,u,l])}]),eD:n,cI:hu,d3:dd,fG:dd,aC:C([t,v,d,s,f,l,u,c]),fO:i}}),gd=l(function(n,e,r,t){var o=t.cX,a=r.cX,i=e.cX,c=t.fS,u=r.fS,l=e.fS,f=t.fR,t=r.fR,r=e.fR,e=r+u+o;if(0<e){var s=2*Xu(e+1);return X(pu,n,z(mu,(a-c)/s,(f-i)/s,(l-t)/s,.25*s))}if(0<x(r,u)&&0<x(r,o)){s=2*Xu(1+r-u-o);return X(pu,n,z(mu,.25*s,(t+l)/s,(f+i)/s,(a-c)/s))}if(0<x(u,o)){s=2*Xu(1+u-r-o);return X(pu,n,z(mu,(t+l)/s,.25*s,(c+a)/s,(f-i)/s))}s=2*Xu(1+o-r-u);return X(pu,n,z(mu,(f+i)/s,(c+a)/s,.25*s,(l-t)/s))}),hd=$(function(n,e,r,t,o,a,i,c){for(;;){if(!c.b)return{e6:e,e7:t,e8:a,e9:n,fa:r,fb:o};var u=c.b,l=_i(i(c.a));n=X(Ns,l.e9,n),e=X(zs,l.e6,e),r=X(Ns,l.fa,r),t=X(zs,l.e7,t),o=X(Ns,l.fb,o),a=X(zs,l.e8,a),i=i,c=u}}),xd=s(function(n,e,r){e=_i(n(e));return m(hd,e.e9,e.e6,e.fa,e.e7,e.fb,e.e8,n,r)}),Sd=h(function(n,e){return{fR:e.fS*n.cX-e.cX*n.fS,fS:e.cX*n.fR-e.fR*n.cX,cX:e.fR*n.fS-e.fS*n.fR}}),yd={fR:0,fS:0,cX:0},Pd=h(function(n,e){var r=n,t=e,o=X(At,Ja(t.fR),X(At,Ja(t.fS),Ja(t.cX)));if(o){n=t.cX/o,e=t.fS/o,t=t.fR/o,o=Xu(t*t+e*e+n*n);return{fR:r*t/o,fS:r*e/o,cX:r*n/o}}return yd})(1),Rd=s(function(n,e,r){r=X(Af,e,r),e=X(Af,n,e);return Pd(X(Sd,r,e))}),Cd=h(function(n,e){return{$:2,a:n,b:e}})({eq:3,eC:0,fd:4}),Tr=s(function(n,e,r){return{a:n,b:e,c:r}}),Md=(vr=X(Rs,-.5,1),Cr=X(Rs,-.5,1),Ln=X(Rs,-.5,1),dn=D(Zl,Ln,Cr,vr),f=X(Rs,.5,1),vn=D(Zl,Ln,Cr,f),U=X(Rs,.5,1),j=D(Zl,Ln,U,vr),G=D(Zl,Ln,U,f),an=X(Rs,.5,1),Ln=D(Zl,an,Cr,vr),vr=D(Zl,an,U,vr),Cr=D(Zl,an,Cr,f),f=D(Zl,an,U,f),ln(function(n){if(n.b){var e=n.a,r=n.b,t=Cd(X(fo,Bi,n)),r=D(xd,Ei,e,r);return z(ss,r,n,t,0)}return Ls}(C([D(Tr,dn,vr,Ln),D(Tr,dn,j,vr),D(Tr,vn,Cr,f),D(Tr,vn,f,G),D(Tr,Ln,vr,f),D(Tr,Ln,f,Cr),D(Tr,dn,G,j),D(Tr,dn,vn,G),D(Tr,dn,Ln,Cr),D(Tr,dn,Cr,vn),D(Tr,j,f,vr),D(Tr,j,G,f)])))),Td={$:0},wd=s(function(n,e,r){return{$:1,a:n,b:e,c:r}}),Ld=s(function(n,e,r){var t=e.a,o=e.b,e=n(e.c),o=n(o),n=n(t),t=mi(D(Rd,n,o,e)),n={cD:t,cI:di(n)},o={cD:t,cI:di(o)},e={cD:t,cI:di(e)};return X(Qr,n,X(Qr,o,X(Qr,e,r)))}),$d=l(function(n,e,r,t){return 1===e.$||1===r.$||1===t.$?lt:ut(D(n,e.a,r.a,t.a))}),Xd=4294967295>>>32-Xt,Dd=A,zd=s(function(n,e,r){for(;;){var t=X(Dd,Xd&e>>>n,r);if(t.$)return X(Dd,Xd&e,t.a);n=n-Xt,e=e,r=t.a}}),Nd=h(function(n,e){var r=e.a,t=e.b,o=e.c,e=e.d;return n<0||-1<x(n,r)?lt:-1<x(n,r>>>5<<5)?ut(X(Dd,Xd&n,e)):ut(D(zd,t,n,o))}),Vd=h(function(n,e){return X(Nd,n,gi(e))}),_d=h(function(n,e){e=Ca(e),n=Ca(n);return{a:{a:n.fR,b:n.fS,c:n.cX},b:{a:e.fR,b:e.fS,c:e.cX}}}),Ad=D(Ll,0,0,0),Fd=t(function(n,e,r,t,o,a){var i=a.a,c=a.b,u=a.c,a=X(jo,X(_d,n,e),o);if(a.$){o={cD:Ad,cI:di(e)},e={cD:Ad,cI:di(n)},n=u+1;return{a:X(Qr,{a:r,b:u,c:n},X(Qr,{a:r,b:n,c:t},i)),b:X(Qr,o,X(Qr,e,c)),c:u+2}}return{a:X(Qr,{a:r,b:a.a,c:t},i),b:c,c:u}}),Id=r(function(n,e,r,t,o){for(;;){if(!r.b)return{a:o.a,b:yt(o.b)};var a=r.a,i=a.a,c=a.b,u=r.b,l=n(a.c),f=n(c),s=n(i),d=t+2,v=t+1,a=n,c=e,i=u,u=t+3,v=M(Fd,l,s,d,t,e,M(Fd,f,l,v,d,e,M(Fd,s,f,t,v,e,o)));n=a,e=c,r=i,t=u,o=v}}),kd=r(function(n,e,r,t,o){for(;;){if(!e.b)return{a:t,b:o,c:r};var a=e.a,i=a.a,c=a.b,u=e.b,l=n(a.c),f=n(c),s=n(i),a=r+2,c=r+1,i=r,s=D(pa,X(_d,s,l),a,D(pa,X(_d,l,f),c,D(pa,X(_d,f,s),i,o)));n=n,e=u,r=r+3,t=X(Qr,{a:i,b:c,c:a},t),o=s}}),Ed=s(function(n,e,r){var t,o=X(Pa,function(n){var e=n.a,r=n.b,n=n.c;return z($d,s(function(n,e,r){return{a:n,b:e,c:r}}),X(Vd,e,t),X(Vd,r,t),X(Vd,n,t))},pi(t=r)),a=D(lo,Ld(e),R,o),r=N(kd,e,o,0,R,sa),o=N(Id,e,r.b,o,0,{a:r.a,b:R,c:r.c}),r=o.a,o=o.b,a=o.b?v(a,o):a;return D(wd,n,X(Ps,li(a),r),X(nf,a,r))}),Bd=(_r=function(n){switch(n.$){case 0:return Td;case 1:case 2:var e=n.a,r=X(fo,Ai,n.b);return D(Ed,e,qr,Ui(r));case 3:return D(Ed,e=n.a,qr,n.b);case 4:case 5:case 6:case 7:var e;return D(Ed,e=n.a,function(n){return n.cI},n.b);case 8:case 9:default:return Td}})(Md),Ud=h(function(n,e){return X(qs,function(n){var e=Wa($i(n)),r=Ma(Da(n)),t=Ma(zi(n)),o=Ma(Di(n));return{eG:Li(n),t:o.fR,u:o.fS,v:o.cX,w:t.fR,x:t.fS,y:t.cX,z:r.fR,A:r.fS,B:r.cX,Q:e.fR,R:e.fS,S:e.cX,cN:1}}(n),e)}),qd={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{normal:"cD",position:"cI"},uniforms:{modelMatrix:"b",modelScale:"c",projectionMatrix:"d",sceneProperties:"e",shadowLight:"cO",viewMatrix:"f"}},Wd=l(function(n,e,r,t){r=X(ts,r,Md),r=(e={a:n,b:e}).a?e.b?Ia(C([r,qi(Bd)])):r:e.b?qi(Bd):al,e=Ci(t);return X(Ud,Ri(t),X(ls,{a:e.a,b:e.b,c:e.c},r))}),jd=h(function(n,e){return z(Wd,!0,!1,n,e)}),Hd=h(function(n,e){return{fX:Pi(n),ep:{a:Ka(e.a),b:Ka(e.b),c:Ka(e.c)}}}),Yd=X(ad,Mf,hr),Od=h(function(n,e){n=X(Hd,ld,{a:e,b:n,c:.1});return D(rd,Yd,1.5707963267948966,X(Vi,n,{aw:X(jd,Qs($f),n),m:Mu}))}),Qd=h(function(n,e){var r=n.d9,t=n.d8,n=n.d7;return{fR:n.fR*e.fR+t.fR*e.fS+r.fR*e.cX,fS:n.fS*e.fR+t.fS*e.fS+r.fS*e.cX,cX:n.cX*e.fR+t.cX*e.fS+r.cX*e.cX}}),we=s(function(n,t,e){var r=X(od,D(Gs,0,0,e/2),X(Od,t,e)),o={a:5,b:10},a=o.a,i=o.b,o=X(ad,D(Tu,a,0,a),id),c=X(fo,function(n){var e=90/i*n,r=D(Gs,fs(3.141592653589793*e/180)*a,0,-Ts(3.141592653589793*e/180)*a);return function(n){return D(rd,Wi($a(n)),(e-90)/180*3.141592653589793,n)}((n=X(od,D(Gs,a,0,a),X(Od,t,2)),X(od,X(Qd,$a(n),r),n)))},X(fo,Br,X(ht,1,i-1))),u=X(fo,od(D(Gs,0,0,e-2*a)),X(fo,X(rd,o,3.141592653589793),c));switch(n){case 0:return X(Qr,r,u);case 1:return X(Qr,r,c);case 2:return X(Qr,r,v(c,u));default:return C([r])}}),Zd=X(ad,Mf,ud),jr=(A={aF:15,l:.08*u,g:.17*u},jr=2*Xu(2*X(mf,10,2)),A=xo(C([X(fo,od(D(Gs,0,u/4+A.g/4,0)),D(we,2,u/2-A.g/2,W)),X(fo,od(D(Gs,0,-u/4-A.g/4,0)),D(we,2,u/2-A.g/2,W)),X(fo,od(D(Gs,0,0,A.l)),D(we,0,A.g,W-A.l)),X(fo,od(D(Gs,-A.aF,0,0)),D(we,2,A.g,A.l)),C([D(rd,Zd,1.5707963267948966,X(od,D(Gs,-A.g/2,A.aF/2,A.l/2),X(Od,A.aF,A.l))),D(rd,Zd,-1.5707963267948966,X(od,D(Gs,-A.g/2,-A.aF/2,A.l/2),X(Od,A.aF,A.l))),D(rd,Yd,1.5707963267948966,X(od,D(Gs,-A.l,0,-A.aF/2),X(Od,A.g,A.aF)))])])),xo(C([X(fo,od(D(Gs,Js/2,0,0)),X(fo,X(rd,Zd,3.141592653589793),A)),X(fo,od(D(Gs,Js/2-10,-u/2+10,0)),X(fo,X(rd,Zd,2.356194490192345),D(we,2,jr,W))),X(fo,od(D(Gs,0,-u/2,0)),X(fo,X(rd,Zd,1.5707963267948966),D(we,2,Js,W))),X(fo,od(D(Gs,-Js/2+10,-u/2+10,0)),X(fo,X(rd,Zd,.7853981633974483),D(we,2,jr,W))),X(fo,od(D(Gs,-Js/2,0,0)),A),X(fo,od(D(Gs,-Js/2+10,u/2-10,0)),X(fo,X(rd,Zd,-.7853981633974483),D(we,2,jr,W))),X(fo,od(D(Gs,0,u/2,0)),X(fo,X(rd,Zd,-1.5707963267948966),D(we,2,Js,W))),X(fo,od(D(Gs,Js/2-10,u/2-10,0)),X(fo,X(rd,Zd,-2.356194490192345),D(we,2,jr,W)))]))),W=s(function(n,e,r){return P(r,{ey:X(fu,function(n){return n}(n),Ma(e))})}),Gd=X(cu,K,X(cu,Ue,(q=D(W,9.807,Re,q),D(pt,cu,q,jr)))),Jd=wo(R),Kd=h(function(n,e){return y(n,e)}),nv=h(function(n,e){return Va(X(su,n,e))}),ev=h(function(n,e){var r=X(nv,Ra(n.b9),Ra(e.b9)),t=n.ef+e.ef;return 0<t*t-r&&!!(n.dp+e.dp)}),rv=h(function(n,e){return n.fR*e.fR+n.fS*e.fS+n.cX*e.cX}),tv=l(function(n,e,r,t){for(;;){if(!e.b)return r;var o=e.a,a=e.b,i=X(rv,o.cD,n);t=0<t-i?(n=n,e=a,r=o,i):(n=n,e=a,r=r,t)}}),ov=h(function(n,e){if(n.b){var r=n.a;return ut(z(tv,e,n.b,r,X(rv,r.cD,e)))}return lt}),av=s(function(n,e,r){return{fR:e.fR+n*(r.fR-e.fR),fS:e.fS+n*(r.fS-e.fS),cX:e.cX+n*(r.cX-e.cX)}}),iv=r(function(n,e,r,t,o){var a=X(rv,n,r)+e,e=X(rv,n,t)+e;return a<0?X(Qr,e<0?t:D(av,a/(a-e),r,t),o):e<0?X(Qr,t,X(Qr,D(av,a/(a-e),r,t),o)):o}),cv=l(function(n,e,r,t){for(;;){if(!t.b)return r;var o=t.a,a=t.b;if(!a.b)return D(n,o,e,r);var i=n,c=e,o=D(n,o,a.a,r);n=i,e=c,r=o,t=a}}),uv=s(function(n,e,r){if(r.b&&r.b.b)return z(cv,n,r.a,e,r);return e}),lv=h(function(n,e){var r=n.aC,t=n.cD;return D(uv,h(function(n,e){e=yi(X(su,n,e)),e=X(lu,t,e),n=-X(rv,n,e);return X(uv,X(iv,e,n),R)}),e,r)}),fv=r(function(n,e,r,t,o){for(;;){if(!t.b)return o;var a,i,c,u,l,f=t.a,s=t.b,d=X(rv,e.cD,f)+r;o=0<d?(n=a=n,e=i=e,r=c=r,t=u=s,l=o):(c=r,u=s,l=X(Qr,{gD:a=n,gJ:{fR:f.fR-d*(i=e).cD.fR,fS:f.fS-d*e.cD.fS,cX:f.cX-d*e.cD.cX},gK:f},o),n=a,e=i,r=c,t=u,l)}}),sv=l(function(n,e,r,t){var o=e.aC,e=(e=n.aC).b?e.a:hu,e=-X(rv,n.cD,e);return N(fv,r,n,e,X(lv,n,o),t)}),dv=l(function(n,e,r,t){for(;;){if(!t.b)return{cB:r,dx:e};var o=t.a,o=o.fR*n.fR+o.fS*n.fS+o.cX*n.cX;n=n,e=0<e-o?o:e,r=0<r-o?r:o,t=t.b}}),vv=s(function(n,e,r){e=z(dv,r,340282347e30,-340282347e30,e.aC),r=z(dv,r,340282347e30,-340282347e30,n.aC),n=e.cB-r.dx,e=r.cB-e.dx;return e<0||n<0?lt:ut(0<e-n?n:e)}),mv=o(function(n,e,r,t,o,a,i){for(;;){if(!t.b)return 0<X(rv,X(su,e.cI,n.cI),a)?ut(Hi(a)):ut(a);var c=t.a,u=t.b;if(o.b){var l=o.b,f=X(lu,c,o.a);if(0<Ja((c=f).fR)-1e-6||0<Ja(c.fS)-1e-6||0<Ja(c.cX)-1e-6){c=yi(f),f=D(vv,n,e,c);if(1===f.$)return lt;f=f.a;i=f-i<0?(n=n,e=e,r=r,t=t,o=s=l,a=c,f):(n=n,e=e,r=r,t=t,o=s=l,a=a,i)}else n=n,e=e,r=r,t=t,o=s=l,a=a,i=i}else{var s=r;n=n,e=e,r=r,t=u,o=s,a=a,i=i}}}),pv=r(function(n,e,r,t,o){for(;;){if(!r.b)return S(mv,n,e,e.d3,n.d3,e.d3,t,o);var a=r.a,i=r.b,c=D(vv,n,e,a);if(1===c.$)return lt;c=c.a;o=c-o<0?(n=n,e=e,r=i,t=a,c):(n=n,e=e,r=i,t=t,o)}}),bv=h(function(n,e){return N(pv,n,e,v(n.fG,e.fG),hu,340282347e30)}),gv=s(function(n,e,r){var t=X(bv,n,e);if(t.$)return r;var o=t.a,t=Hi(o),o=X(ov,n.bR,o);if(o.$)return r;o=o.a,e=X(ov,e.bR,t);return e.$?r:z(sv,o,e.a,t,r)}),hv=l(function(n,e,r,t){for(;;){if(!e.b)return t;var o,a,i,c,u=e.a.aC,l=e.a.cD,f=e.b,u=X(rv,l,X(su,u.b?u.a:hu,n));if(u<0)return lt;t=x(u,r)<0?(a=f,c=ut({gD:Hi(l),gJ:o=n,gK:X(uu,n,X(fu,i=u,l))}),n=o,e=a,r=i,c):(n=o=n,e=a=f,r=i=r,c=t)}}),xv=l(function(n,e,r,t){r=z(hv,e,r.bR,340282347e30,lt);return r.$?t:X(Qr,n(r.a),t)}),Sv=r(function(n,e,r,t,o){for(;;){if(!t.b)return o;var a,i,c,u,l,f=t.a,s=t.b,d=(f.fR-e.fR)*r.fR+(f.fS-e.fS)*r.fS+(f.cX-e.cX)*r.cX;o=0<d?(n=a=n,e=i=e,r=c=r,t=u=s,l=o):(i=e,u=s,l=X(Qr,(a=n)({gD:c=r,gJ:{fR:f.fR-d*r.fR,fS:f.fS-d*r.fS,cX:f.cX-d*r.cX},gK:f}),o),n=a,e=i,r=c,t=u,l)}}),yv=l(function(n,e,r,t){return N(Sv,n,e.cI,e.cD,r.aC,t)}),Pv=l(function(n,e,r,t){var o=e.cI,e=e.cD,o=(r.fR-o.fR)*e.fR+(r.fS-o.fS)*e.fS+(r.cX-o.cX)*e.cX;return 0<o?t:X(Qr,n({gD:e,gJ:{fR:r.fR-o*e.fR,fS:r.fS-o*e.fS,cX:r.cX-o*e.cX},gK:r}),t)}),Rv=l(function(n,e,r,t){var o=e.cD,a=e.cI,e=r.cI,r={fR:e.fR-r.al*o.fR,fS:e.fS-r.al*o.fS,cX:e.cX-r.al*o.cX},a=(r.fR-a.fR)*o.fR+(r.fS-a.fS)*o.fS+(r.cX-a.cX)*o.cX;return 0<a?t:X(Qr,n({gD:o,gJ:{fR:r.fR-a*o.fR,fS:r.fS-a*o.fS,cX:r.cX-a*o.cX},gK:r}),t)}),Cv=h(function(n,e){n=X(su,n,e),e=_a(n);return{fR:n.fR/e,fS:n.fS/e,cX:n.cX/e}}),Mv=l(function(n,e,r,t){for(;;){if(n(r))return r;if(!t.b)return r;var o=t.b,a=X(e,t.a,r);n=n,e=e,r=a,t=o}}),Tv=s(function(n,e,r){function t(n){var e=Va(n);return e-o<0?{a:ut(n),b:e}:r}var o=r.b,a=X(su,e,n),i=yi(a),c=-X(rv,n,i);if(c<0)return{$:0,a:t(n)};if(0<c*c-Va(a))return{$:0,a:t(e)};c=X(uu,n,X(fu,c,i)),i=Va(c);return i-o<0?{$:1,a:{a:c,b:i}}:{$:0,a:r}}),wv=h(function(n,e){return z(Mv,Oi,h(function(n,e){return e.$?e:D(Tv,n.a,n.b,e.a)}),e,n)}),Lv=h(function(n,e){return D(pt,wv,{$:0,a:{a:lt,b:n*n}},e)}),$v=h(function(n,e){return{$:1,a:n,b:e}}),Xv=h(function(n,o){return D(uv,s(function(n,e,r){var t=X(lu,o,X(su,e,n));return X(rv,t,n)<0?X(Qr,{a:n,b:e},r):r}),R,n)}),Dv=l(function(n,e,r,t){var o=r.b?-X(rv,e,r.a):-1;if(o-n<0&&0<o){r=X(Xv,r,e);return r.b?{$:0,a:X(Qr,r,t)}:X($v,e,o)}return{$:0,a:t}}),zv=s(function(r,t,n){var e=n.bR,n=h(function(n,e){return{a:ut(X(su,r,X(fu,e,n))),b:t-e}}),o=h(function(n,e){return{a:ut(X(uu,n,r)),b:t-Xu(e)}}),e=z(Mv,Yi,h(function(n,e){if(e.$)return e;e=e.a;return z(Dv,t,n.cD,(n=n.aC,D(pt,h(function(n,e){return X(Qr,X(su,n,r),e)}),R,n)),e)}),{$:0,a:R},e);return e.$?X(n,e.a,e.b):function(n){var e=X(Lv,t,n);if(e.$){n=e.a;return X(o,n.a,n.b)}if(e.a.a.$)return e.a;e=e.a;return X(o,e.a.a,e.b)}(e.a)}),Nv=l(function(n,e,r,t){var o=e.cI,e=D(zv,o,e.al,r),r=e.a,e=e.b;if(r.$)return t;r=r.a,o=X(Cv,r,o);return X(Qr,n({gD:o,gJ:{fR:r.fR+e*o.fR,fS:r.fS+e*o.fS,cX:r.cX+e*o.cX},gK:r}),t)}),Vv=h(function(n,e){var r=e.cX-n.cX,t=e.fS-n.fS,n=e.fR-n.fR;return Xu(n*n+t*t+r*r)}),_v=l(function(n,e,r,t){var o=e.al,a=e.cI,i=X(Cv,r,a),e=X(Vv,r,a)-o;return 0<e?t:X(Qr,n({gD:i,gJ:X(uu,a,X(fu,o-e,i)),gK:r}),t)}),Av=s(function(n,e,r){var t=e.al,o=n.al,a=e.cI,i=n.cI,e=X(Vv,a,i)-o-t,n=X(Cv,a,i);return 0<e?r:X(Qr,{gD:n,gJ:X(uu,i,X(fu,o-e,n)),gK:X(uu,a,X(fu,-t,n))},r)}),Fv=s(function(n,e,r){switch(n.$){case 0:var t=n.a;switch(e.$){case 0:return D(gv,t,e.a,r);case 1:return z(yv,Qi,e.a,t,r);case 2:return z(Nv,Qi,e.a,t,r);default:return z(xv,Qi,e.a,t,r)}case 1:var o=n.a;switch(e.$){case 1:return r;case 0:return z(yv,qr,o,e.a,r);case 2:return z(Rv,qr,o,e.a,r);default:return z(Pv,qr,o,e.a,r)}case 2:var a=n.a;switch(e.$){case 1:return z(Rv,Qi,e.a,a,r);case 0:return z(Nv,qr,a,e.a,r);case 2:return D(Av,a,e.a,r);default:return z(_v,qr,a,e.a,r)}default:var i=n.a;switch(e.$){case 1:return z(Pv,Qi,e.a,i,r);case 0:return z(xv,qr,i,e.a,r);case 2:return z(_v,Qi,e.a,i,r);default:return r}}}),Iv=r(function(n,e,r,t,o){for(;;)if(r.b){var a=n,i=e,c=r.b,u=t,l=D(Fv,n,r.a,o);n=a,e=i,r=c,t=u,o=l}else{if(!e.b)return o;n=a=e.a,e=i=e.b,t=u=r=c=t,o=l=o}}),kv=h(function(n,e){return n.b?N(Iv,n.a,n.b,e,e,R):R}),Ev=l(function(e,n,r,t){for(;;)if(r.b){var o=r.a,a=e,i=n,c=l=r.b,u=function(){if(X(ev,e,o)){var n=X(kv,e.d5,o.d5);return n.b?X(Qr,{fZ:e,f_:o,f7:n},t):t}return t}();e=a,n=i,r=c,t=u}else{if(!n.b)return t;var l;e=a=n.a,n=i=l=n.b,r=c=l,t=u=t}}),Bv=r(function(n,e,r,t,o){var a=e.gJ,i=e.gK,c=e.gD,u=o.M,l=o.I,e=o.E,o=o.F,e=(n+1)*(X(rv,t.cV,c)-X(rv,r.cV,c))+X(rv,t.ch,o)+X(rv,r.ch,e);return-((i.fR-a.fR)*c.fR+(i.fS-a.fS)*c.fS+(i.cX-a.cX)*c.cX)*u-e*l}),Uv=s(function(n,e,r){var t=r.E,o=r.F;return n.cu+e.cu+t.fR*(n.ct.eQ*t.fR+n.ct.eR*t.fS+n.ct.eS*t.cX)+t.fS*(n.ct.eU*t.fR+n.ct.eV*t.fS+n.ct.eW*t.cX)+t.cX*(n.ct.eY*t.fR+n.ct.eZ*t.fS+n.ct.e_*t.cX)+o.fR*(e.ct.eQ*o.fR+e.ct.eR*o.fS+e.ct.eS*o.cX)+o.fS*(e.ct.eU*o.fR+e.ct.eV*o.fS+e.ct.eW*o.cX)+o.cX*(e.ct.eY*o.fR+e.ct.eZ*o.fS+e.ct.e_*o.cX)+r.U}),qv=l(function(n,e,r,t){var o=t.E,a=t.O,i=t.F,t=0<r.dp?n:hu,n=0<e.dp?n:hu;return a.fR*(r.cu*r.co.fR+t.fR)+a.fS*(r.cu*r.co.fS+t.fS)+a.cX*(r.cu*r.co.cX+t.cX)-(a.fR*(e.cu*e.co.fR+n.fR)+a.fS*(e.cu*e.co.fS+n.fS)+a.cX*(e.cu*e.co.cX+n.cX))+o.fR*(e.ct.eQ*e.cU.fR+e.ct.eR*e.cU.fS+e.ct.eS*e.cU.cX)+o.fS*(e.ct.eU*e.cU.fR+e.ct.eV*e.cU.fS+e.ct.eW*e.cU.cX)+o.cX*(e.ct.eY*e.cU.fR+e.ct.eZ*e.cU.fS+e.ct.e_*e.cU.cX)+i.fR*(r.ct.eQ*r.cU.fR+r.ct.eR*r.cU.fS+r.ct.eS*r.cU.cX)+i.fS*(r.ct.eU*r.cU.fR+r.ct.eV*r.cU.fS+r.ct.eW*r.cU.cX)+i.cX*(r.ct.eY*r.cU.fR+r.ct.eZ*r.cU.fS+r.ct.e_*r.cU.cX)}),Wv=r(function(n,e,r,t,o){return{eu:{Y:o.Y,aa:o.aa,ah:D(n,r,t,o)-e.s*z(qv,e.ey,r,t,o),ai:1/D(Uv,r,t,o),M:o.M,I:o.I,U:o.U,O:o.O,E:o.E,F:o.F},fx:0}}),jv=l(function(n,e,r,t){var o=4/(n.s*n.s*1e7*13),a=4/(13*n.s),i=X(Cv,Ra(r.b9),Ra(e.b9)),c=t/2,t=X(fu,c,i),c=X(fu,-c,i);return Qr(N(Wv,X(Bv,0,{gD:i,gJ:X(uu,t,Ra(e.b9)),gK:X(uu,c,Ra(r.b9))}),n,e,r,{Y:1e6,aa:-1e6,ah:0,ai:0,M:a,I:12/13,U:o,O:i,E:X(lu,i,t),F:X(lu,c,i)}))}),Hv=s(function(n,e,r){var t=r.E,o=r.O,r=r.F;return t.fR*n.ch.fR+t.fS*n.ch.fS+t.cX*n.ch.cX-(o.fR*n.cV.fR+o.fS*n.cV.fS+o.cX*n.cV.cX)+(o.fR*e.cV.fR+o.fS*e.cV.fS+o.cX*e.cV.cX)+(r.fR*e.ch.fR+r.fS*e.ch.fS+r.cX*e.ch.cX)}),Yv=l(function(n,e,r,t){var o=n.gD,a=n.a1,i=n.a0,c=t.M,n=t.I,t=D(Hv,e,r,t);return-(i-X(rv,o,a))*c-t*n}),Ov=t(function(n,e,r,t,o,a){var i=X(Vu,r.b9,o),c=X(Vu,e.b9,t),u=4/(n.s*n.s*1e7*13),l=4/(13*n.s),o=i,t=i,i=Zi(c),c=i.a,i=i.b;return X(Qr,N(Wv,Yv({a0:0,gD:c,a1:t}),n,e,r,{Y:1e6,aa:-1e6,ah:0,ai:0,M:l,I:12/13,U:u,O:hu,E:X(lu,t,c),F:X(lu,c,t)}),X(Qr,N(Wv,Yv({a0:0,gD:i,a1:o}),n,e,r,{Y:1e6,aa:-1e6,ah:0,ai:0,M:l,I:12/13,U:u,O:hu,E:X(lu,o,i),F:X(lu,i,o)}),a))}),Qv=t(function(e,r,t,n,o,a){var i=4/(e.s*e.s*1e7*13),c=4/(13*e.s),u=X(Vu,t.b9,o),l=X(Vu,r.b9,n);return D(pt,function(n){return Qr(N(Wv,X(Bv,0,{gD:n,gJ:X(uu,Ra(r.b9),l),gK:X(uu,Ra(t.b9),u)}),e,r,t,{Y:1e6,aa:-1e6,ah:0,ai:0,M:c,I:12/13,U:i,O:n,E:X(lu,n,l),F:X(lu,u,n)}))},a,dd)}),Zv=l(function(n,e,r,t){switch(t.$){case 0:return N(Qv,n,e,r,t.a,t.b);case 1:var o=t.b,a=t.d;return X(qo,N(Qv,n,e,r,t.a,t.c),N(Ov,n,e,r,o,a));case 2:var i=t.b,c=t.c,u=t.d,l=t.f,o=t.g,a=t.h;return X(qo,N(Qv,n,e,r,t.a,t.e),T(Gi,n,e,r,i,l,c,o,u,a));default:return z(jv,n,e,r,t.a)}}),Gv=l(function(n,e,r,t){return{f$:e.m,f0:r.m,c9:D(pt,D(Zv,n,e,r),R,t)}}),Jv=s(function(n,e,r){var t=r.I;return-D(Hv,n,e,r)*t}),Kv=o(function(n,e,r,t,o,a,i){var c=4/(n.s*n.s*1e7*13),u=4/(13*n.s),l=X(su,a.gK,Ra(o.b9)),f=X(su,a.gJ,Ra(t.b9)),s=Zi(a.gD),d=s.a,s=s.b;return X(Qr,N(Wv,X(Bv,r,a),n,t,o,{Y:1e6,aa:0,ah:0,ai:0,M:u,I:12/13,U:c,O:a.gD,E:X(lu,a.gD,f),F:X(lu,l,a.gD)}),X(Qr,N(Wv,Jv,n,t,o,{Y:e,aa:-e,ah:0,ai:0,M:u,I:12/13,U:c,O:d,E:X(lu,d,f),F:X(lu,l,d)}),X(Qr,N(Wv,Jv,n,t,o,{Y:e,aa:-e,ah:0,ai:0,M:u,I:12/13,U:c,O:s,E:X(lu,s,f),F:X(lu,l,s)}),i)))}),nm=h(function(n,e){e=.5*(n+e),e=1+e-Ja(1-e);return.25*(e+Ja(e))}),em=h(function(n,e){return X(nm,n.f1,e.f1)}),rm=h(function(n,e){return X(nm,n.gk,e.gk)}),tm=h(function(n,e){var r=e.fZ,t=e.f_,o=e.f7,a=0<r.cu+t.cu?X(rm,r.e4,t.e4)*n.ez/(r.cu+t.cu):0,e=X(em,r.e4,t.e4);return{f$:r.m,f0:t.m,c9:D(pt,N(Kv,n,a,e,r,t),R,o)}}),om=h(function(n,e){return X(Ut,n,function(){return e})}),am=F,im=l(function(n,e,r,t){var o=Xd&e>>>n,a=X(Dd,o,t);if(a.$){var i=D(am,Xd&e,r,a.a);return D(am,o,{$:1,a:i},t)}a=z(im,n-Xt,e,r,a.a);return D(am,o,{$:0,a:a},t)}),cm=s(function(n,e,r){var t=r.a,o=r.b,a=r.c,i=r.d;return n<0||-1<x(n,t)?r:-1<x(n,t>>>5<<5)?z(Tt,t,o,a,D(am,Xd&n,e,i)):z(Tt,t,o,z(im,o,n,e,a),i)}),um=h(function(n,e){if(e.b){var r={c0:P(e.a,{m:-1}),bz:0,bA:0,bB:0,bD:0,bE:0,bF:0},n=X(om,n,r);return{a:D(pt,function(n){return X(cm,n.m,{c0:n,bz:0,bA:0,bB:0,bD:0,bE:0,bF:0})},n,e),b:ut(r)}}return{a:Dt,b:lt}}),lm=r(function(n,e,r,t,o){for(;;){if(!o.b)return{fZ:n,f_:e,c8:t,c9:r};var a=o.a.fx,i=o.a.eu,c=o.b,u=e.c0.ct,l=n.c0.ct,f=i.E,s=i.O,d=i.F,v=i.aa,m=i.Y,p=i.ai*(i.ah-(f.fR*n.bD+f.fS*n.bE+f.cX*n.bF-(s.fR*n.bz+s.fS*n.bA+s.cX*n.bB)+(s.fR*e.bz+s.fS*e.bA+s.cX*e.bB)+(d.fR*e.bD+d.fS*e.bE+d.cX*e.bF))-i.U*a),v=a+p-v<0?v-a:0<a+p-m?m-a:p,m=v*n.c0.cu,p=v*e.c0.cu;n=0<n.c0.dp?{c0:n.c0,bz:n.bz-m*s.fR,bA:n.bA-m*s.fS,bB:n.bB-m*s.cX,bD:n.bD+(l.eQ*f.fR+l.eR*f.fS+l.eS*f.cX)*v,bE:n.bE+(l.eU*f.fR+l.eV*f.fS+l.eW*f.cX)*v,bF:n.bF+(l.eY*f.fR+l.eZ*f.fS+l.e_*f.cX)*v}:n,e=0<e.c0.dp?{c0:e.c0,bz:e.bz+p*s.fR,bA:e.bA+p*s.fS,bB:e.bB+p*s.cX,bD:e.bD+(u.eQ*d.fR+u.eR*d.fS+u.eS*d.cX)*v,bE:e.bE+(u.eU*d.fR+u.eV*d.fS+u.eW*d.cX)*v,bF:e.bF+(u.eY*d.fR+u.eZ*d.fS+u.e_*d.cX)*v}:e,r=X(Qr,{eu:i,fx:a+v},r),t=t+Ja(v),o=c}}),fm=t(function(n,e,r,t,o,a){for(;;)if(t.b){var i,c=t.a.f$,u=t.a.f0,l=t.a.c9,f=t.b,s=c-o.c0.m&&o.c0.dp?D(cm,o.c0.m,o,a):a,d=c-o.c0.m?X(Nd,c,a):ut(o);a=d.$?(n=v=n,e=m=e,r=p=r,t=b=f,o=o,s):(i=d.a,(d=X(Nd,u,s)).$?(n=v=n,e=m=e,r=p=r,t=b=f,o=o,s):(n=v=n,e=m=(l=N(lm,i,d.a,R,e,l)).c8,r=p=X(Qr,{f$:c,f0:u,c9:l.c9},r),t=b=f,o=l.fZ,0<l.f_.c0.dp?D(cm,u,l.f_,s):s))}else{if(!n||e-1e-6<0)return D(cm,o.c0.m,o,a);var v=n-1,m=0,p=R,b=yt(r);n=v,e=m,r=p,t=b,o=o,a=a}}),sm=k,dm=h(function(e,n){var r=n.d,t=function(n){return n.$?{$:1,a:X(sm,e,n.a)}:{$:0,a:X(sm,t,n.a)}};return z(Tt,n.a,n.b,X(sm,t,n.c),X(sm,e,r))}),vm=h(function(n,e){var r=n.fR,t=n.fS,o=n.cX,a=e.b,i=a.a,c=a.b,n=a.c,a=a.d;return X(pu,e.a,z(mu,i+.5*(r*a+t*n-o*c),c+.5*(t*a+o*i-r*n),n+.5*(o*a+r*c-t*i),a+.5*(-r*i-t*c-o*n)))}),mm=h(function(n,e){var r=n.s,t=n.ey,o=e.c0,a=e.bz,i=e.bA,c=e.bB,u=e.bD,l=e.bE,n=e.bF,e=X(mf,1-o.eP,r),i={fR:(t.fR+o.co.fR*o.cu)*r+o.cV.fR*e+a,fS:(t.fS+o.co.fS*o.cu)*r+o.cV.fS*e+i,cX:(t.cX+o.co.cX*o.cu)*r+o.cV.cX*e+c},t=_a(i),e=t&&o.ef&&0<=t*r-o.ef?X(fu,o.ef/(t*r),i):i,c=X(mf,1-o.eb,r),t={fR:(o.ct.eQ*o.cU.fR+o.ct.eR*o.cU.fS+o.ct.eS*o.cU.cX)*r+o.ch.fR*c+u,fS:(o.ct.eU*o.cU.fR+o.ct.eV*o.cU.fS+o.ct.eW*o.cU.cX)*r+o.ch.fS*c+l,cX:(o.ct.eY*o.cU.fR+o.ct.eZ*o.cU.fS+o.ct.e_*o.cU.cX)*r+o.ch.cX*c+n},c=(u=X(td,{fR:e.fR*r,fS:e.fS*r,cX:e.cX*r},X(vm,{fR:t.fR*r,fS:t.fS*r,cX:t.cX*r},o.b9)),l=u.a,c=Xu((n=(c=u.b).a)*n+(e=c.b)*e+(r=c.c)*r+(u=c.d)*u),X(pu,l,z(mu,n/c,e/c,r/c,u/c)));return{eb:o.eb,ch:t,ef:o.ef,ck:o.ck,H:o.H,co:hu,m:o.m,de:o.de,ct:X(Ju,c,o.de),cu:o.cu,eP:o.eP,dp:o.dp,e4:o.e4,dX:o.dX,cU:hu,b9:c,cV:i,d5:X(Yu,c,o.dX)}}),pm=s(function(e,n,r){n=X(dm,function(n){return 0<n.c0.m+1&&0<n.c0.dp?X(mm,e,n):n.c0},n);return P(r,{fY:X(ys,function(n){return 0<n.m+1},nt(n)),gN:n})}),bm=h(function(n,e){var o={s:n,ey:e.ey,ez:_a(e.ey)},r=D(pt,h(function(n,e){return X(Qr,X(tm,o,n),e)}),R,e.f6),n=X(um,e.gC,e.fY),a=n.a,n=n.b,r=D(pt,h(function(n,e){var r=n.f0,t=n.f5,n=X(Nd,n.f$,a);if(1===n.$)return e;n=n.a,r=X(Nd,r,a);return 1===r.$?e:X(Qr,z(Gv,o,n.c0,r.a.c0,t),e)}),r,e.f5),n=n.$?a:M(fm,20,0,R,r,n.a,a);return D(pm,o,n,e)}),gm=h(function(n,e){return X(bm,Ga(n),function(r){return P(r,{f6:function(){var n=r.fY;if(n.b){var e=n.b;return z(Ev,n.a,e,e,R)}return R}()})}(e))}),hm=h(function(r,n){return P(n,{fY:D(pt,h(function(n,e){return X(Qr,function(n){return P(r(n),{m:n.m})}(n),e)}),R,n.fY)})}),xm={$:4},Sm={$:1},ym=h(function(n,e){return n.aV.br?X(At,0,e-.5):e}),Pm=h(function(n,e){return{$:0,a:n,b:e}}),Rm=h(function(n,e){return z(Wd,!0,!0,n,e)}),Cm={aE:0,au:Mf,aU:lt,aW:0,aY:0,bs:0,V:0,cR:0,bv:0},Mm=Ia,Tm=h(function(n,e){return{fR:e.fR+n.fR,fS:e.fS+n.fS,cX:e.cX+n.cX}}),wm=h(function(n,e){return{dD:X(Tm,n,$i(e)),d7:Di(e),d8:zi(e),d9:Da(e)}}),Lm=h(function(n,e){return{fR:n*e.fR,fS:n*e.fS,cX:n*e.cX}}),$m=h(function(n,e){var r=e.cX-n.cX,t=e.fS-n.fS,e=e.fR-n.fR,n=X(At,Ja(e),X(At,Ja(t),Ja(r)));if(n){r=r/n,t=t/n,e=e/n;return Xu(e*e+t*t+r*r)*n}return 0}),Xm=s(function(n,e,r){return 0<x(e-r.fC,n)})(Sf),Dm={em:ut(-30),c6:4.4,c7:2.3,bd:Re,cp:id,db:5,ds:1e5,dt:.6,dy:0,al:.5,dT:hr,dU:.01,bw:.3,d_:160},zm=h(function(n,e){var r=n.d9,t=n.d8,n=n.d7;return{fR:n.fR*e.fR+t.fR*e.fS+r.fR*e.cX,fS:n.fS*e.fR+t.fS*e.fS+r.fS*e.cX,cX:n.cX*e.fR+t.cX*e.fS+r.cX*e.cX}}),Nm=l(function(n,e,r,t){var o=X(su,r,Ra(t.b9)),a=X(fu,n,e),i=X(lu,o,a),c=i.fR,u=i.fS,r=i.cX,n=t.ch,e=t.ct,o=t.cV,i=t.cu;return P(t,{ch:{fR:n.fR+e.eQ*c+e.eR*u+e.eS*r,fS:n.fS+e.eU*c+e.eV*u+e.eW*r,cX:n.cX+e.eY*c+e.eZ*u+e.e_*r},cV:{fR:o.fR+i*a.fR,fS:o.fS+i*a.fS,cX:o.cX+i*a.cX}})}),Vm=l(function(n,e,r,t){return 0<t.dp?z(Nm,n,Ma(e),Ca(r),t):t}),_m=s(function(n,e,r){return x(n,e)<1?D(vf,n,e,r):D(vf,e,n,r)}),Am=h(function(n,e){return e.fR*n.fR+e.fS*n.fS+e.cX*n.cX}),Fm=h(function(e,n){return X(xs,function(n){return y(n,e)},n)}),Im=h(function(t,n){var e=h(function(n,e){var r=e.a,e=e.b;return t(n)?{a:X(Qr,n,r),b:e}:{a:r,b:X(Qr,n,e)}});return D(lo,e,{a:R,b:R},n)}),km=h(function(n,e){var r=e,e=X(Im,X(qo,qr,n),r.fY),n=e.a,e=e.b,t=D(pt,X(qo,function(n){return n.m},Qr),R,e);return P(r,{fY:n,f5:D(pt,h(function(n,e){return X(Fm,n.f$,t)||X(Fm,n.f0,t)?e:X(Qr,n,e)}),R,r.f5),gj:v(t,r.gj)})}),Em=h(function(n,e){return x(e,n)<0}),Bm=h(function(n,e){var r=n.dD,t=n.d9,o=n.d8,n=n.d7;return{fR:r.fR+e.fR*n.fR+e.fS*o.fR+e.cX*t.fR,fS:r.fS+e.fR*n.fS+e.fS*o.fS+e.cX*t.fS,cX:r.cX+e.fR*n.cX+e.fS*o.cX+e.cX*t.cX}}),Um=h(function(n,e){return X(ad,X(Bm,n,e.dD),X(zm,n,e.ga))}),qm=h(function(n,e){return X(bu,n.b,e)}),Wm=h(function(n,e){var i=n.ga,c=n.gl;return D(pt,h(function(n,e){var r=n.cD,t=n.aC,o=t.b?t.a:hu,n=X(rv,i,r);if(n<0){o=X(su,o,c),n=X(rv,r,o)/n;if(n<0)return e;var a={fR:i.fR*n+c.fR,fS:i.fS*n+c.fS,cX:i.cX*n+c.cX};return D(uv,s(function(n,e,r){return r&&0<X(rv,X(su,a,n),X(su,e,n))}),!0,t)&&(e.$||n-e.a.bN<0)?ut({bN:n,cD:r,b$:a}):e}return e}),lt,e.bR)}),jm=h(function(n,e){var r=n.gl,t=n.ga,o=e.cD,n=e.cI,e=X(rv,t,o);if(e<0){n=X(su,n,r),e=X(rv,o,n)/e;return e<0?lt:ut({bN:e,cD:o,b$:{fR:t.fR*e+r.fR,fS:t.fS*e+r.fS,cX:t.cX*e+r.cX}})}return lt}),Hm=h(function(n,e){var r=n.gl,t=n.ga,o=e.cI,a=e.al,n=2*(t.fR*(r.fR-o.fR)+t.fS*(r.fS-o.fS)+t.cX*(r.cX-o.cX)),e=t.fR*t.fR+t.fS*t.fS+t.cX*t.cX,a=n*n-4*e*((r.fR-o.fR)*(r.fR-o.fR)+(r.fS-o.fS)*(r.fS-o.fS)+(r.cX-o.cX)*(r.cX-o.cX)-a*a);if(a<0)return lt;e=(-n-Xu(a))/(2*e);if(e<0)return lt;t={fR:r.fR+t.fR*e,fS:r.fS+t.fS*e,cX:r.cX+t.cX*e},o=X(su,t,o);return ut({bN:e,cD:o,b$:t})}),Ym=h(function(n,e){switch(e.$){case 1:return X(jm,n,e.a);case 2:return X(Hm,n,e.a);case 0:return X(Wm,n,e.a);default:return lt}}),Om=h(function(r,n){return D(pt,h(function(n,e){n=X(Ym,r,n);if(n.$)return e;n=n.a;return e.$||n.bN-e.a.bN<0?ut(n):e}),lt,n.d5)}),Qm=h(function(t,n){n=n.fY;return D(pt,h(function(n,e){var r=X(Om,t,n);if(r.$)return e;r=r.a;return e.$||r.bN-e.a.bN<0?ut({c0:n,bN:r.bN,cD:r.cD,b$:r.b$}):e}),lt,n)}),Zm=h(function(n,e){var r=X(Qm,{ga:Ma(Si(n)),gl:Ca(oc(n))},e);if(r.$)return lt;n=r.a.c0,e=r.a.b$,r=r.a.cD;return ut({c0:n,cD:X(qm,X(yu,n.b9,wa(n.ck)),r),b$:X(gu,X(yu,n.b9,wa(n.ck)),e)})}),Gm=h(function(n,e){return e*n}),Jm=h(function(n,e){return e.fR*n.fR+e.fS*n.fS+e.cX*n.cX}),Km=h(function(n,e){return e.fR*n.fR+e.fS*n.fS+e.cX*n.cX}),np=h(function(n,e){return{fR:e.fR-n.fR,fS:e.fS-n.fS,cX:e.cX-n.cX}}),ep=h(function(n,e){var r=e,e=Ra(r.b9),n=Ca(n),e=X(lu,r.ch,{fR:n.fR-e.fR,fS:n.fS-e.fS,cX:n.cX-e.cX});return X(uu,e,r.cV)}),rp=h(function(n,e){return P(e,{H:n})}),tp=r(function(n,e,r,t,o){for(;;){var a={a:t,b:Ta(r).m};if(a.a.b){var i,c,u,l,f=a.a,s=f.a,d=f.b,v=s.aU;v.$?(u=X(Rs,.99,s.aW),l=P(s,{aW:X(Rs,.99,s.aW),bs:X(Cs,s.bs,u)}),n=n,e=e,r=r,t=d,o=X(Qr,l,o)):(i=v.a.cD,c=X(ep,v.a.b$,r),f=X(zm,e,Dm.cp),v=X(Km,i,f),l=P(s,{aW:u=X(Am,c,X(np,X(Lm,v,i),hi(f)))*Ga(n)/ti(Dm.al),bs:X(Cs,s.bs,s.aW)}),n=n,e=e,r=r,t=d,o=X(Qr,l,o))}else return a.b.$?r:X(rp,{aw:Ta(r).aw,m:X(Pm,a.b.a,yt(o))},r)}}),op=s(function(n,e,r){return{fR:r.fR+e*n.fR,fS:r.fS+e*n.fS,cX:r.cX+e*n.cX}}),ap=o(function(n,e,r,t,o,a,i){for(;;){if(!i.b)return N(tp,n,r,t,o,R);var c=i.a,u=i.b,l=X(zm,r,Xi(Dm.bd)),f=a?X(Rs,c.cQ,c.cP):c.cP,s=a?X(Rs,c.cQ,c.cq):c.cq,d=X(Bm,r,ac(t)),d=X(Rs,1-Dm.dU,X(Jm,l,X(Af,c.bK,d))),d=D(op,l,d,c.bK);n=n,r=r,t=z(Vm,f,c.cY,d,z(Vm,s,c.da,c.bK,t)),o=o,a=a,i=u}}),ip=h(function(n,e){var r=n.ct,t=vi(e),n=t.fR,e=t.fS,t=t.cX;return{fR:r.eQ*n+r.eR*e+r.eS*t,fS:r.eU*n+r.eV*e+r.eW*t,cX:r.eY*n+r.eZ*e+r.e_*t}}),cp=s(function(n,e,r){var t=X(Bm,$a(n),ac(n)),t=X(Af,t,e),e=X(Sd,t,hi(r)),t=X(Sd,X(ip,n,e),t),t=X(Am,hi(r),t),n=tc(n);return n.$?t:1/ei(n.a)+t}),up=t(function(n,e,r,t,o,a){var i=X(ep,r,e),c=X(ep,r,n),e=D(cp,e,r,t),r=D(cp,n,r,t),t=X(Am,X(np,i,c),hi(t));return D(_m,ic(o),o,-t/(r+e)/a)}),lp=l(function(n,e,r,t){var o=X(ep,r,e),r=X(ep,r,n),e=(e=tc(e)).$?0:1/ei(e.a),e=1/(((n=tc(n)).$?0:1/ei(n.a))+e);return-.2*X(Am,X(np,o,r),hi(t))*e}),fp=s(function(n,e,r){var t=n,o=r,a=.5*e,i=fs(a),c=Ts(a),u=t.ga,l=u.fR*c,f=i*l,n=l*l,r=u.fS*c,e=i*r,a=l*r,t=r*r,c=u.cX*c,i=i*c,l=l*c,r=r*c,c=c*c;return{fR:(1-2*(t+c))*o.fR+2*(a-i)*o.fS+2*(l+e)*o.cX,fS:2*(a+i)*o.fR+(1-2*(n+c))*o.fS+2*(r-f)*o.cX,cX:2*(l-e)*o.fR+2*(r+f)*o.fS+(1-2*(n+t))*o.cX}}),sp=h(function(n,e){return{fR:n*e.fR,fS:n*e.fS,cX:n*e.cX}}),dp=a(function(n,e,r,t,o,a,i,c,u){for(;;){if(!a.b)return S(ap,n,e,r,t,c,u,i);var l,f,s,d,v,m,p,b,g=a.a,h=a.b,x=g.aU;u=x.$?(n=n,e=e,r=r,t=t,o=o,a=h,i=i,c=X(Qr,g,c),u):(l=x.a.b$,b=x.a.cD,f=x.a.c0,m=X(zm,r,D(fp,X(ad,g.au,Dm.bd),g.V,Dm.dT)),s=X(Rs,Dm.db,g.cR),p=y(g.aE,0)?0:X(Gm,n,g.aE),v=X(Am,hi(b),hi(m)),d=X(Oo,b,cc(X(np,X(sp,v,hi(b)),hi(m)))),x=X(Oo,b,cc(X(Sd,hi(b),hi(d)))),v=X(Cs,M(up,t,f,l,x,p,o),X(Gm,n,g.aY)),m=z(lp,t,f,l,d),b=X(Cs,X(Gm,m,m),X(Rs,.25,X(Gm,v,v))),b=(p=X(Em,X(Gm,s,s),b))?1:X(Ms,s,Xu(b)),n=n,e=e,r=r,t=t,o=o,a=h,i=X(Qr,{cY:d,el:f,bK:l,da:x,cq:v,cP:m,cQ:b},i),c=X(Qr,g,c),u||p)}}),vp=$(function(n,e,r,t,o,a,i,c){for(;;){if(!o.b)return T(dp,n,e,r,a,c,i,R,R,!1);var u,l,f,s,d,v,m=o.a,p=o.b,b=X(Um,r,X(ad,m.au,Dm.bd)),g=X(Zm,b,X(km,function(n){return y(Ta(n).m,Mu)},e));c=g.$?(n=n,e=e,r=r,t=t,o=p,a=a,i=X(Qr,P(m,{aU:lt,bv:Dm.bw}),i),c):(u=g.a.c0,v=g.a.cD,s=g.a.b$,d=X(Cs,Dm.bw,Dm.al),f=$a(u),l=X(zm,f,v),g=X(Bm,f,s),v=X($m,g,oc(b)),X(Em,d,v)?(f=D(_m,Dm.dy,Dm.dt,X(Gl,Dm.al,v)),s=ti(X(Gl,f,Dm.bw)),d=X(Am,hi(l),X(ep,g,t)),d=(b=-1<x(v=X(Am,hi(l),hi(Si(b))),-.1)?{a:0,b:10}:{a:-d/v,b:-1/v}).b,b=(v=b.a)<0?Dm.c6:Dm.c7,v=X(Gm,n,D(_m,0,Dm.ds,X(Oo,0,X(Ho,ei,tc(t)))*(Dm.d_*s*d-b*v))),n=n,e=e,r=r,t=t,o=p,a=z(Vm,v,l,g,a),i=X(Qr,P(m,{aU:ut({c0:u,cD:l,b$:g}),cR:v,bv:f}),i),c+1):(n=n,e=e,r=r,t=t,o=p,a=a,i=X(Qr,P(m,{aU:lt,bv:Dm.bw}),i),c))}}),mp=r(function(n,e,r,t,o){if(t.b&&t.b.b&&t.b.b.b&&t.b.b.b.b&&!t.b.b.b.b.b){var a=t.b,i=a.a,c=a.b,u=c.a,l=c.b.a,a=4e3*r.a6,c=r.c1?4e3:0,t=P(t.a,{aE:c,aY:a,V:20*r.V/180*3.141592653589793}),r=P(i,{aE:c,aY:a,V:20*r.V/180*3.141592653589793}),u=P(u,{aE:c,aY:a}),a=P(l,{aE:c,aY:a});return m(vp,n,e,$a(o),o,C([t,r,u,a]),o,R,0)}return o}),pp=l(function(e,n,r,t){var o=Ta(t).m;if(o.$)return t;var a=o.b,i=nc(X(ys,X(qo,function(n){return n.m},Kd(o.a)),n.ag)),o=!(o={a:!e,b:i}).a||o.b.$?yf:o.b.a.aV;return function(){var n={a:!e,b:i};if(!n.a||n.b.$)return qr;n=n.b.a;return n.aV.br&&0<n.aQ?D(vu,3e4,X(zm,$a(t),Dm.cp),Xa(t)):qr}()(N(mp,1/60,n.G,o,a,t))}),bp=s(function(n,e,r){var o=r.aI+e,t=r.N;switch(t.$){case 2:return r;case 3:return 3e3<o-t.a?P(ji(n),{am:r.am,a7:r.a7}):P(r,{aI:o,G:X(gm,1/60,X(hm,D(pp,!1,r,e),r.G))});case 0:var a=t.a,i=t.b;return 0<Ga(i)?P(r,!a&&500<o?{N:X(bf,!0,i),G:D(pt,h(function(n,e){return X(cu,Ji(n),e)}),r.G,r.ag)}:{aI:o,N:X(bf,a,X(Gl,.001*e,i)),G:X(gm,1/60,X(hm,D(pp,!0,r,e),r.G))}):P(r,{N:Sm});case 4:return r;default:var c=X(Pa,function(n){var e={a:Ta(n).m,b:nc(r.ag)};return e.a.$||e.b.$?lt:ut({a:X(Oo,e.b.a,nc(X(ys,X(qo,function(n){return n.m},Nt(e.a.a)),r.ag))),b:Xa(n)})},Ki(r.G)),u=h(function(n,e){return n?e+1:e}),l=X(Gl,.001*e,r.a7),f=h(function(n,e){var r=n.b,t=e.b$,e=e.fC;return!(-1<x(n.a.aQ,hf))&&0<x(o-e,Sf)&&ti(X($m,r,t))<2.5}),s=X(Oo,D(Tu,0,0,0),X(Ho,Xa,nc(X(ys,X(qo,Ta,X(qo,function(n){return n.m},ec)),Ki(r.G))))),d=0<x(X(Co,ti,Fi)(s),Js/2),a=x(X(Co,ti,Fi)(s),-Js/2)<0,i=x(ti(ki(s)),ti(Tf.al))<1,v=h(function(n,e){n=X(fo,rc,X(ys,f(n),r.a4)),n=D(pt,ct,0,n);return X(pl,hf,n+e)}),m=h(function(n,e){return X(Xm,o,e)&&X(f,n,e)?P(e,{fC:o}):e}),s=r.am;return P(r,{aI:o,ag:X(fo,function(n){var e=n.a;return P(e,{aQ:X(ym,e,X(v,{a:e,b:n.b},e.aQ))})},c),a4:X(fo,function(n){return D(pt,m,n,c)},r.a4),am:{bc:X(u,d,s.bc),bp:X(u,a,s.bp)},N:!i||0<Ga(l)||y(s.bc,s.bp)?d||a?{$:3,a:o}:r.N:xm,a7:l,G:X(gm,1/60,X(hm,D(pp,!1,r,e),r.G))})}}),F=h(function(n,t){function o(n){var e=t.ab;if(3!==e.$)return t;var r=e.b;return P(t,{ab:X(iu,n(e.a),r)})}var r=h(function(e,r){return o(function(n){return P(n,{ag:X(fo,function(n){return X(Kd,n.m,e)?r(n):n},n.ag)})})}),e=h(function(n,e){return X(r,n,function(n){return P(n,{aV:e(n.aV)})})}),a={a:t.ab,b:n};n:for(;;)switch(a.a.$){case 2:switch(a.b.$){case 1:break n;case 2:var i=a.a;return{a:P(t,{ab:X(au,i.a,P(c=i.b,{aX:a.b.a}))}),b:Jd};case 3:return{a:P(t,{ab:X(iu,ji(c=a.a.b),c)}),b:Jd};case 0:var i=a.a,c=i.b;return{a:P(t,{ab:X(au,X(gm,1/60,i.a),c)}),b:Jd};default:return{a:t,b:Jd}}case 3:switch(a.b.$){case 1:break n;case 0:var u=a.a,l=u.a;return{a:o(X(bp,c=u.b,a.b.a)),b:Jd};case 5:var l=a.a.a,f=a.b,s=f.a;switch((p=f.b).$){case 0:return{a:o(function(n){return P(n,{G:X(hm,Pu(s),n.G)})}),b:Jd};case 1:return{a:X(e,s,function(n){return P(n,{br:!0})}),b:Jd};case 2:var d=p.a;return{a:X(e,s,function(n){return P(n,{V:d})}),b:Jd};case 3:d=p.a;return{a:X(e,s,function(n){return P(n,{a6:d})}),b:Jd};case 4:return{a:X(r,s,function(n){return P(n,{bj:n.bj?0:1})}),b:Jd};default:var v=l.N;if(2!==v.$)return{a:o(function(n){return P(n,{N:{$:2,a:n.N}})}),b:Jd};var m=v.a;return{a:o(function(n){return P(n,{N:m})}),b:Jd}}case 6:var p,f=a.b,s=f.a;switch((p=f.b).$){case 0:return{a:t,b:Jd};case 1:return{a:X(e,s,function(n){return P(n,{br:!1})}),b:Jd};case 2:d=p.a;return{a:X(e,s,function(n){return P(n,{V:function(n){return y(d,n.V)?0:n.V}(n)})}),b:Jd};case 3:d=p.a;return{a:X(e,s,function(n){return P(n,{a6:function(n){return y(d,n.a6)?0:n.a6}(n)})}),b:Jd};case 4:default:return{a:t,b:Jd}}case 7:return{a:t,b:Jd};case 2:return{a:t,b:Jd};case 3:return{a:t,b:Jd};default:return{a:P(t,{ab:X(au,X(cu,Za((c=a.a.b).cT),Gd),c)}),b:Jd}}case 0:switch(a.b.$){case 1:break n;case 7:if(a.b.a.$){var b=a.b.a.a;return{a:P(t,{ab:{$:1,a:function(){if(b.$){var n=b.b;return"Image not powers of 2: "+dt(b.a)+(" "+dt(n))}return"Load error"}()}}),b:Jd}}var g=a.b.a.a;return{a:P(t,{ab:X(au,X(cu,Za(g),Gd),{aX:C([{a:Cu,b:1}]),cT:g})}),b:Jd};default:return{a:t,b:Jd}}default:if(1===a.b.$)break n;return{a:t,b:Jd}}n=a.b;return{a:P(t,{a5:{l:n.b,g:n.a}}),b:Jd}}),gp={$:4},hp={$:3},xp=Zn("button"),Sp=Mn,yp=(k=h(function(n,e){return X(ne,n,Sp(e))}))("className"),Pp=function(n){return{$:0,a:n}},Rp={$:3},Cp=l(function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}}),Mp=h(function(n,e){return xo(X(fo,n,e))}),Tp=function(n){return{$:1,a:n}},wp=Z,Lp=function(n){return{$:2,a:n}},$p=Kn,Xp=un,Dp=s(function(n,e,r){return D(or,n,e,r)}),zp=z(_l,1,1,1,1),Np=s(function(n,e,r){return X(fo,function(n){return X(n,e,r)},n)}),Vp=s(function(n,e,r){return{$:0,a:n,b:e,c:r}}),_p=h(function(n,e){var r=e.fR,e=e.fS;return D(Vp,n*r/e,n,n*(1-r-e)/e)}),Ap=h(function(n,e){return r=X(_p,n,e),D(Ll,3.2406*(n=r.a)-1.5372*(e=r.b)-.4986*(r=r.c),-.9689*n+1.8758*e+.0415*r,.0557*n-.204*e+1.057*r);var r}),Fp=r(function(n,e,r,t,o){return M(o,n,z(_l,t.cN,t.cN,t.cN,t.eG?1:-1),function(n){return Tl({eQ:n.t,eR:n.w,eS:n.z,eT:n.Q,eU:n.u,eV:n.x,eW:n.A,eX:n.R,eY:n.v,eZ:n.y,e_:n.B,e$:n.S,e0:0,e1:0,e2:0,e3:1})}(t),t.eG,e,r)}),Ip=t(function(n,e,r,t,o,a){n:for(;;)switch(o.$){case 0:return a;case 5:var i=o.b;n=n,e=e,r=r,t=X(Us,o.a,t),o=i,a=a;continue n;case 1:return{Z:X(Qr,N(Fp,n,e,r,t,o.b),a.Z),ak:a.ak,an:a.an};case 3:i=X(Qr,N(Fp,n,e,r,t,o.b),a.ak);return{Z:a.Z,ak:i,an:a.an};case 2:var c=X(Qr,N(Fp,n,e,r,t,o.a),a.an);return{Z:a.Z,ak:a.ak,an:c};default:c=o.a;return D(pt,z(Ip,n,e,r,t),a,c)}}),kp=l(function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}}),Ep=l(function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}}),Kn=h(function(n,e){return{$:6,a:n,b:e}}),Bp=C([function(n){return z(Ep,518,n.as,n.ap,n.ao)}({ao:1,ap:0,as:!1}),z(kp,!1,!1,!1,!1),X(Kn,0,1)]),Up={src:"\n        precision lowp float;\n\n        void main() {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n    ",attributes:{},uniforms:{}},qp=kn({eq:1,eC:0,fd:5})(C([{cI:X(Ul,-1,-1)},{cI:X(Ul,1,-1)},{cI:X(Ul,-1,1)},{cI:X(Ul,1,1)}])),Wp={src:"\n        precision lowp float;\n\n        attribute vec2 position;\n\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    ",attributes:{position:"cI"},uniforms:{}},jp=dc({bS:7681,$7:0,dQ:8,b4:519,d6:15,cd:7681,ce:7681}),Hp=s(function(n,e,r){return xo(C([D(Np,n,r,Bp),C([vc(e),jp])]))}),Yp=h(function(n,e){return xo(X(xt,Hp(n),e))}),Kn=function(n){return z(Ep,513,n.as,n.ap,n.ao)}({ao:1,ap:0,as:!0}),Op=s(function(n,e,r){return{$:0,a:n,b:e,c:r}}),kn=h(function(n,e){return D(Op,32774,n,e)}),Qp=(Z={cf:0,bb:X(kn,1,771),ci:0,cl:X(kn,770,771),cr:0,cK:0},qc=Z.cK,Wc=Z.cr,jc=Z.ci,Hc=Z.cf,kn=Z.cl,Z=Z.bb,X(h(function(n,e){var r=n.c,t=e.a,o=e.b,e=e.c;return function(l){return function(u){return function(c){return function(i){return function(a){return function(o){return function(t){return function(r){return function(e){return function(n){return{$:0,a:l,b:u,c:c,d:i,e:a,f:o,g:t,h:r,i:e,j:n}}}}}}}}}}}(n.a)(n.b)(r)(t)(o)(e)(qc)(Wc)(jc)(Hc)}),kn,Z)),Zp=C([Kn,Qp]),Gp=h(function(n,e){var r=n.d9,t=n.d8,n=n.d7;return{fR:e.fR*n.fR+e.fS*n.fS+e.cX*n.cX,fS:e.fR*t.fR+e.fS*t.fS+e.cX*t.cX,cX:e.fR*r.fR+e.fS*r.fS+e.cX*r.cX}}),Jp=h(function(n,e){var r=n.dD,t=e.fR-r.fR,o=e.fS-r.fS,a=e.cX-r.cX,e=n.d9,r=n.d8,n=n.d7;return{fR:t*n.fR+o*n.fS+a*n.cX,fS:t*r.fR+o*r.fS+a*r.cX,cX:t*e.fR+o*e.fS+a*e.cX}}),Kp=h(function(n,e){return{dD:X(Jp,n,$i(e)),d7:X(Gp,n,Di(e)),d8:X(Gp,n,zi(e)),d9:X(Gp,n,Da(e))}}),nb=h(function(n,e){e=_i(e),n=_i(n);return{e6:X(zs,n.e6,e.e6),e7:X(zs,n.e7,e.e7),e8:X(zs,n.e8,e.e8),e9:X(Ns,n.e9,e.e9),fa:X(Ns,n.fa,e.fa),fb:X(Ns,n.fb,e.fb)}}),eb=h(function(n,e){var r=pc(Ka(n.b)),t=pc(Ka(n.a)),o=pc(Ka(n.c)),a=function(n){return{a:n.fR,b:n.fS,c:n.cX}}(e),n=a.a,e=a.b,a=a.c;return{e6:X(Cs,t,n),e7:X(Cs,r,e),e8:X(Cs,o,a),e9:X(Gl,t,n),fa:X(Gl,r,e),fb:X(Gl,o,a)}}),rb=l(function(n,e,r,t){var o=r.f3,a=2*r.gp*e,i=2*r.go*e,c=2*r.gn*e,u=Ma(Da(n)),l=Ja(c*u.fR)+Ja(i*u.fS)+Ja(a*u.cX),r=Ma(zi(n)),u=Ja(c*r.fR)+Ja(i*r.fS)+Ja(a*r.cX),r=Ma(Di(n)),r=Ja(c*r.fR)+Ja(i*r.fS)+Ja(a*r.cX),e=X(eb,{a:r,b:u,c:l},X(Jp,n,D(Tu,o.fR*e,o.fS*e,o.cX*e)));return ut(t.$?e:X(nb,t.a,e))}),tb=l(function(n,e,r,t){n:for(;;){if(!t.b)return r;var o=t.a,a=t.b;switch(o.$){case 0:n=c=n,e=u=e,r=l=r,t=a;continue n;case 1:var i=z(rb,n,e,o.a,r);n=c=n,e=u=e,r=l=i,t=a;continue n;case 2:n=c=n,e=u=e,r=l=r,t=a;continue n;case 3:i=z(rb,n,e,o.a,r);n=c=n,e=u=e,r=l=i,t=a;continue n;case 4:var c=n,u=e,l=z(tb,n,e,r,o.a);n=c,e=u,r=l,t=a;continue n;default:var f=o.a,s=o.b,d=X(Kp,function(n){return{dD:{fR:n.Q,fS:n.R,cX:n.S},d7:{fR:n.t,fS:n.u,cX:n.v},d8:{fR:n.w,fS:n.x,cX:n.y},d9:{fR:n.z,fS:n.A,cX:n.B}}}(f),n),f=e*f.cN;n=c=n,e=u=e,r=l=z(tb,d,f,r,C([s])),t=a;continue n}}}),ob={eG:!0,t:1,u:0,v:0,w:0,x:1,y:0,z:0,A:0,B:1,Q:0,R:0,S:0,cN:1},ab=dc({bS:7681,$7:0,dQ:8,b4:519,d6:255,cd:7681,ce:7681}),ib={ci:0,f2:!1,cr:0,dM:0,cK:0,d0:0,fR:0,fS:0,cX:0},cb=h(function(n,e){return Tl({eQ:n.fR,eR:n.cK,eS:e.fR,eT:e.cK,eU:n.fS,eV:n.cr,eW:e.fS,eX:e.cr,eY:n.cX,eZ:n.ci,e_:e.cX,e$:e.ci,e0:n.d0,e1:n.dM,e2:e.d0,e3:e.dM})}),ub={a:{bX:X(cb,ib,ib),cx:X(cb,ib,ib),cy:X(cb,ib,ib),cz:X(cb,ib,ib)},b:z(_l,0,0,0,0)},lb=C([bc({ao:1,ap:0,as:!0}),sc({bS:7680,$7:240,dQ:0,b4:514,d6:0,cd:7680,ce:7680}),Qp]),fb=h(function(n,e){var r=e.fW,t=Ka(e.gB),o=Ka(e.gi),e=n.dO;if(e.$){n=e.a;return Df(o)?Tl({eQ:2/(r*n),eR:0,eS:0,eT:0,eU:0,eV:2/n,eW:0,eX:0,eY:0,eZ:0,e_:0,e$:-1,e0:0,e1:0,e2:0,e3:1}):Tl({eQ:2/(r*n),eR:0,eS:0,eT:0,eU:0,eV:2/n,eW:0,eX:0,eY:0,eZ:0,e_:-2/(o-t),e$:-(o+t)/(o-t),e0:0,e1:0,e2:0,e3:1})}e=e.a;return Df(o)?Tl({eQ:1/(r*e),eR:0,eS:0,eT:0,eU:0,eV:1/e,eW:0,eX:0,eY:0,eZ:0,e_:-1,e$:-2*t,e0:0,e1:0,e2:-1,e3:0}):Tl({eQ:1/(r*e),eR:0,eS:0,eT:0,eU:0,eV:1/e,eW:0,eX:0,eY:0,eZ:0,e_:-(o+t)/(o-t),e$:-2*o*t/(o-t),e0:0,e1:0,e2:-1,e3:0})}),sb=h(function(n,e){return 1==(1&n>>e)?0:1}),db=s(function(r,t,n){return xo(X(fo,function(n){var e=n<<4,n=z(_l,X(sb,n,0),X(sb,n,1),X(sb,n,2),X(sb,n,3));return D(Np,r,{a:t,b:n},function(n){return C([bc({ao:1,ap:0,as:!0}),sc({bS:7680,$7:240,dQ:n,b4:514,d6:0,cd:7680,ce:7680}),Qp])}(e))},X(ht,1,X(mf,2,n)-1)))}),vb=function(n){return{eQ:n[0],eU:n[1],eY:n[2],e0:n[3],eR:n[4],eV:n[5],eZ:n[6],e1:n[7],eS:n[8],eW:n[9],e_:n[10],e2:n[11],eT:n[12],eX:n[13],e$:n[14],e3:n[15]}},mb=h(function(n,e){var r,t;return r=X(Kp,e,n),t=Wa($i(r)),e=Ma(Da(r)),n=Ma(zi(r)),r=Ma(Di(r)),Tl({eQ:r.fR,eR:n.fR,eS:e.fR,eT:t.fR,eU:r.fS,eV:n.fS,eW:e.fS,eX:t.fS,eY:r.cX,eZ:n.cX,e_:e.cX,e$:t.cX,e0:0,e1:0,e2:0,e3:1})}),pb=s(function(n,e,r){return{fR:n,fS:e,cX:r}}),bb=h(function(e,n){var r=C([Tp(1),Lp(0),Pp(!0),z(Cp,0,0,0,0)]),t=function(){var n=e.ec;switch(n.$){case 0:return{a:r,b:"0",c:1};case 1:return{a:X(Qr,Rp,r),b:"1",c:1};default:return{a:r,b:"0",c:n.a}}}(),o=t.a,a=t.b,i=t.c,c=e.ep,u=c.a,l=fc(c.b),f=X($p,"height",dt(l)+"px"),t=fc(u),s=t/l,c=X(Mp,function(n){return xc({fW:s,eg:e.eg,ek:e.ek,et:n.et,ew:n.ew,eL:n.eL,fz:i,fE:n.fE,fQ:n.fQ})},n),u=X($p,"width",dt(t)+"px"),n=lc(e.ed);return D(uc,"div",C([X($p,"padding","0px"),u,f]),C([{a:a,b:D(Dp,o,C([(t=wp(t*i),X(ee,"width",dt(t))),function(n){return X(ee,"height",dt(n))}(wp(l*i)),u,f,X($p,"display","block"),X($p,"background-color",n)]),c)}]))}),gb={fR:.31271,fS:.32902},hb=h(function(n,e){return 0<x(e,n)}),xb=function(n){for(;;){if(y(n.gu,0)&&y(n.gv,0))return ib;if(!X(hb,Ka(n.gu),Ka(n.gv))){var e=Ja(yc(n.gv)/3.141592653589793),r=Ja(yc(n.gu)/3.141592653589793),t=Ma(n.fH),o=t.fR,a=t.fS,i=t.cX,t=X(Ap,1,n.ei);return{ci:r*Vl(t),f2:!1,cr:r*Nl(t),dM:e/r,cK:r*zl(t),d0:3,fR:o,fS:a,cX:i}}n={ei:n.ei,gu:n.gv,gv:n.gu,fH:Xi(n.fH)}}}({ei:(Kn={ei:gb,eF:15e3,fH:ud}).ei,gu:Kn.eF,gv:0,fH:Kn.fH}),Sb=Zn("div"),yb=h(function(n,e){return X(Ud,n,e)}),Pb=Zn("h1"),Rb=Zn("h3"),Cb=h(function(n,e){return e.$?lt:n(e.a)}),Mb=h(function(n,e){e=e.fR*n.fR+e.fS*n.fS+e.cX*n.cX;return{fR:n.fR*e,fS:n.fS*e,cX:n.cX*e}}),Tb=s(function(a,i,c){return X(Cb,function(o){var n=X(np,X(Mb,o,i),i);return X(Cb,function(e){var n,r=X(Sd,i,a),t=X(Am,c,r),n=X(hb,0,t)?r:X(Em,0,t)?{fR:-(n=r).fR,fS:-n.fS,cX:-n.cX}:yd;return X(Ho,function(n){return{a:o,b:e,c:n}},cc(n))},cc(n))},cc(a))}),wb=h(function(n,e){var r=Cc(n);return{dD:e,d7:r.a,d8:r.b,d9:n}}),Lb=Ka,$b={$:1},Xb={$:0},Db=Jn,zb=h(function(n,e){return X(Db,n,{$:0,a:e})}),Nb=Zn("p"),Vb=H,_b=Mn,Ab=h(function(n,e){return X(ne,n,_b(e))})("checked"),Fb=k("htmlFor"),Ib=k("id"),kb=Zn("input"),Eb=Zn("label"),Bb=k("name"),fn=fn,Ub=X(h(function(n,e){return D(lo,Uo,e,n)}),C(["target","checked"]),fn),qb=Qn,Wb=k("type"),jb=k("value"),Hb=h(function(n,e){return{dD:n,d7:Di(e),d8:zi(e),d9:Da(e)}}),Yb=s(function(n,e,r){return{dD:D(Ks,n,e,$i(r)),d7:D(fp,n,e,Di(r)),d8:D(fp,n,e,zi(r)),d9:D(fp,n,e,Da(r))}}),k=h(function(n,e){return e/n}),Ob=h(function(n,e){var r=n.cI;return X(Qr,{cD:mi(n.cD),cI:di(r)},e)}),Qb=h(function(n,e){var r=n.d8,n=n.d7;return{fR:e.fR*n.fR+e.fS*r.fR,fS:e.fR*n.fS+e.fS*r.fS,cX:e.fR*n.cX+e.fS*r.cX}}),Zb=qr({dD:Mf,d7:id,d8:hr}),Gb=(Yc=X(k,72,6.283185307179586),Oc=hi(cd),Qc=hi(Re),Zc=X(Rs,.5,1),Gc=D(Zl,0,0,Zc),Jc=X(Rs,-.5,1),Kc=D(Zl,0,0,Jc),Re=X(fo,function(n){var e=X(Rs,n,Yc),r=hi(X(Qb,Zb,Lc(e))),t=X(Rs,ui(e),1),o=X(Rs,si(e),1),a=D(Zl,t,o,Zc),i=D(Zl,t,o,Jc),e=X(Is,72,n+1),t=X(Rs,e,Yc),o=hi(X(Qb,Zb,Lc(t))),n=X(Rs,ui(t),1),e=X(Rs,si(t),1),t=D(Zl,n,e,Jc),e=D(Zl,n,e,Zc);return C([{a:{cD:Qc,cI:Kc},b:{cD:Qc,cI:t},c:{cD:Qc,cI:i}},{a:{cD:r,cI:i},b:{cD:o,cI:t},c:{cD:o,cI:e}},{a:{cD:r,cI:i},b:{cD:o,cI:e},c:{cD:r,cI:a}},{a:{cD:Oc,cI:Gc},b:{cD:Oc,cI:a},c:{cD:Oc,cI:e}}])},X(ht,0,71)),Re=Ui(xo(Re)),ln(function(n){var e=D(Kr,Ob,R,gi(n));if(e.b){var r=e.a,t=e.b,e=X(nf,e,pi(n)),t=X(_s,r,t);return z(vs,t,n,e,0)}return Ls}(Re))),Jb=_r(Gb),Kb=l(function(n,e,r,t){var o=function(n){var e=Si(n),r=Cc(e);return{dD:oc(n),d7:r.a,d8:r.b,d9:e}}(function(n){return n.n}(t)),r=X(ts,r,Gb),r=(e={a:n,b:e}).a?e.b?Ia(C([r,qi(Jb)])):r:e.b?qi(Jb):al,e=function(n){return n.al}(t),t=function(n){return n.P}(t);return X(Ud,o,X(ls,{a:e,b:e,c:t},r))}),_r=h(function(n,e){return z(Kb,!0,!0,n,e)}),ng=s(function(n,e,r){return{n:X(ad,n,e),P:Ka(r.P),al:Ka(r.al)}}),hr=D(ng,Mf,hr,{P:.3,al:Dm.al}),eg=X(_r,Qs($f),hr),rg=h(function(o,n){return X(fo,function(n){var e=$a(o),r=X(Bm,e,n.au),t=X(zm,e,Dm.bd),r=X(Tm,X(Lm,n.bv,t),r),e=D(Yb,X(ad,r,t),n.V,X(Hb,r,e));return X(yb,e,eg)},n)}),tg=L,og=Zn("span"),L=h(function(n,e){var r=n,t=Ma(e.ga),o=t.fR,n=t.fS,t=t.cX,e=X(Ap,e.eF,e.ei);return{ci:Vl(e),f2:r,cr:Nl(e),dM:0,cK:zl(e),d0:1,fR:-o,fS:-n,cX:-t}}),ag=X(L,!0,{ei:function(n){var e=D(vf,1667,25e3,n),n=4e3<e?-3025846900/(e*e*e)+2107037.9/(e*e)+.2226347*1e3/e+.24039:1e9*-.2661239/(e*e*e)-.2343589*1e6/(e*e)+877.6956/e+.17991;return{fR:n,fS:2222<e?4e3<e?n*n*n*3.081758-n*n*5.8733867+3.75112997*n-.37001483:n*n*n*-.9549476-n*n*1.37418593+2.09137015*n-.16748867:n*n*n*-1.1063814-n*n*1.3481102+2.18555832*n-.20219683}}(5600),ga:X(As,.7853981633974483,-1.0471975511965976),eF:1e4}),L=l(function(n,e,r,t){return z(wf,n,e,r,t)}),ig=z(L,0,0,0,0),cg=h(function(n,e){return{$:2,a:n,b:e}}),ug={$:0,a:ub.a},lg=$(function(n,e,r,t,o,a,i,c){var u=X(Im,Xc,C([$c(n),$c(e),$c(r),$c(t)])),l=u.a;if(l.b){var f=v(l,u.b);if(f.b&&f.b.b&&f.b.b.b&&f.b.b.b.b&&!f.b.b.b.b.b){var s=f.a,d=f.b,u=d.a,f=d.b,d=f.a,f=f.b.a;return X(cg,X(fo,Dc,l),{bX:X(cb,s,u),cx:X(cb,d,f),cy:X(cb,o,a),cz:X(cb,i,c)})}return ug}return{$:0,a:{bX:X(cb,n,e),cx:X(cb,r,t),cy:X(cb,o,a),cz:X(cb,i,c)}}}),fg=h(function(n,e){return m(lg,n,e,ib,ib,ib,ib,ib,ib)}),sg=C([{a:aa(C([{a:"a",b:{$:2,a:-1}},{a:"d",b:{$:2,a:1}},{a:"w",b:{$:3,a:1}},{a:"s",b:{$:3,a:-1}},{a:"z",b:sn},{a:"Shift",b:En},{a:"e",b:Ru}])),b:0},{a:aa(C([{a:"ArrowLeft",b:{$:2,a:-1}},{a:"ArrowRight",b:{$:2,a:1}},{a:"ArrowUp",b:{$:3,a:1}},{a:"ArrowDown",b:{$:3,a:-1}},{a:",",b:sn},{a:"m",b:En},{a:".",b:Ru}])),b:1}]),dg=h(function(n,e){return z(Kb,!0,!1,n,e)}),vg=h(function(n,e){n=X(Ap,1,n);return D(Hs,0,{$:0,a:n},e)}),mg=h(function(n,e){return z(js,!0,!1,n,e)}),pg=h(function(n,e){var r,t=e.b$,o=e.gO,a=D(ng,t,ud,{P:.3,al:.75}),i=X(vg,(r=D(Lf,255,127,0),i=zc(r),{fR:(e=i.a)/(i=e+(r=i.b)+i.c),fS:r/i}),5e3),i=n?i:Qs($f),n={a:o,b:n};if(n.a||!n.b)return X(dg,i,a);t=X(Tm,D(Gs,0,0,1.5),t);return Mm(C([X(dg,i,a),X(mg,i,X(Cf,t,.6))]))}),bg=Y,gg=h(function(n,e){var r=n.d8,n=n.d7;return X(bg,e.fR*r.fR+e.fS*r.fS+e.cX*r.cX,e.fR*n.fR+e.fS*n.fS+e.cX*n.cX)}),hg=h(function(n,e){var r=n.d8,t=e.fR*r.fR+e.fS*r.fS+e.cX*r.cX,o=n.d7,n=e.fR*o.fR+e.fS*o.fS+e.cX*o.cX;return X(bg,e.fR*(o.fS*r.cX-o.cX*r.fS)+e.fS*(o.cX*r.fR-o.fR*r.cX)+e.cX*(o.fR*r.fS-o.fS*r.fR),Xu(n*n+t*t))}),xg=h(function(n,e){var r=e.cX-n.cX,t=e.fS-n.fS,e=e.fR-n.fR,n=X(At,Ja(e),X(At,Ja(t),Ja(r)));if(n){r=r/n,t=t/n,e=e/n,n=Xu(e*e+t*t+r*r);return ut({fR:e/n,fS:t/n,cX:r/n})}return lt}),Sg=h(function(n,e){return!e.$&&X(Kd,e.a,n.m)}),yg=h(function(n,e){return{fR:n.fS*e.cX-n.cX*e.fS,fS:n.cX*e.fR-n.fR*e.cX,cX:n.fR*e.fS-n.fS*e.fR}}),Pg=s(function(n,e,r){return D(Yb,n(r),e,r)}),Rg=s(function(n,e,r){return X(wm,X(Lm,e,n),r)}),Cg=s(function(n,e,r){return D(Rg,Si(n(r)),e,r)}),Mg=h(function(n,e){var r=n.dD,n=n.gE;return(e.fR-r.fR)*n.fR+(e.fS-r.fS)*n.fS+(e.cX-r.cX)*n.cX}),Tg=h(function(n,e){return{gE:e,dD:n}}),wg=l(function(n,t,e,r){var o,a,i,c=n.g,u=n.l,n=e.G,l=nc(X(ys,X(qo,Ta,X(qo,function(n){return n.m},Sg(t))),Ki(n))),f=(o=X(qo,$a,$i),a=D(Tu,30,0,10),i=nc(X(ys,X(qo,Ta,X(qo,function(n){return n.m},ec)),Ki(n))),e=function(){var n={a:t.bj,b:i,c:l};n:for(;;){if(n.a){if(n.b.$||n.c.$)break n;return{bI:X(gg,Zb,Xi(X(Oo,id,cc((r=n.c.a).cV)))),bN:30,bQ:.05235987755982988,bi:X(Tm,D(Gs,0,0,4),o(r))}}if(n.b.$||n.c.$)break n;var e=n.b.a,r=n.c.a;return{bI:X(Oo,0,X(Ho,gg(Zb),X(xg,o(e),o(r)))),bN:X(Cs,30,X($m,o(e),o(r))),bQ:X(hg,Zb,X(Oo,id,X(xg,X(Tm,D(Gs,0,0,-3),o(e)),X(Tm,D(Gs,0,30,0),o(r))))),bi:o(e)}}return{bI:0,bN:30,bQ:0,bi:a}}(),Tc({fM:.41887902047863906,fN:Fc({bI:e.bI,bN:e.bN,bQ:e.bQ,bi:e.bi,gm:Zb})})),n=v(r,X(fo,Pc,X(ys,function(n){if(2!==Ta(n).m.$)return!0;var e,n=(e=$a(n),X(Tg,e.dD,e.d9)),e=mc(hc(f));return X(hb,0,X(Mg,n,e))},Ki(n))));return C([Sc({ec:$b,ed:ig,eg:f,ek:.1,ep:{a:Vt(c),b:Vt(u)},et:n,ew:Lb(1e4),eL:X(fg,ag,xb),fE:Xb,fQ:gb}),X(Sb,C([yp("hud-pane hud-pane-msg hud-bottom-right")]),C([X(Nb,C([X($p,"font-size","48px")]),C([qb(dt(wp(t.aQ)))])),X(Nb,R,C([qb("BOOST")]))])),function(){if(t.bj)return qb("");var n,n=(n=t.bO,X(Oo,"",X(Ho,Ur,nc(X(ys,X(qo,Ic,Nt(Ru)),Gr(n))))));return X(Sb,C([yp("hud-pane-msg hud-bottom-left hud-cam")]),C([X(Nb,C([X($p,"font-size","24px"),yp("hud-cam-indicator")]),C([qb("• Ball cam")])),X(Nb,R,C([qb("Press ["+n+"] to toggle")]))]))}()])}),F=cn({gt:function(){return{a:{ab:Po,a5:{l:0,g:0}},b:wo(C([X(To,go,X(No,Vo,"static/rl-map.png")),X(yo,function(n){n=n.gY;return X(Ro,n.g,n.l)},Lo)]))}},gS:function(n){function e(n){return C([ru(X(Qo,n.bO,_o(n.m))),tu(X(Qo,n.bO,Ao(n.m)))])}var r=n.ab,t=(n=h(function(n,e){return X(Ro,n,e)}),D(eu,1,"resize",X(Uo,"target",D(jt,n,X(Uo,"innerWidth",ou),X(Uo,"innerHeight",ou))))),o=ru(X(Io,function(n){return"p"===n?Ht(X(_o,-1,Fo)):Bo("Unrecognized key: "+n)},X(Uo,"key",Yo)));switch(r.$){case 2:return ko(C([ca(ho),t]));case 3:var a=r.a;return 2===a.N.$?X(Co,ko,xo)(X(Qr,C([t,o]),X(fo,e,a.ag))):X(Co,ko,xo)(X(Qr,C([t,o,ca(ho)]),X(fo,e,a.ag)));default:return t}},gV:F,gX:function(d){C([{a:"Drive",b:"Arrow keys"},{a:"Boost",b:"Shift"},{a:"Toggle Camera",b:"C"},{a:"Jump (buggy)",b:"Spacebar"}]);return X(Sb,C([yp("container")]),function(){var n=d.ab;switch(n.$){case 0:return C([X(Nb,C([yp("center-popup")]),C([qb("Loading...")]))]);case 2:var e=n.a,r=n.b,t=d.a5,o=t.g,t=t.l;return C([Sc({ec:$b,ed:ig,eg:Tc({fM:.41887902047863906,fN:function(n){var e=X(Af,n.bi,n.gg),r=hi(n.fH),t=X(Sd,e,r),r=D(Tb,e,r,t);if(r.$){t=cc(e);if(t.$){e=Cc(n.fH);return{dD:n.gg,d7:e.b,d8:n.fH,d9:e.a}}return X(wb,t.a,n.gg)}r=r.a;return{dD:n.gg,d7:r.c,d8:r.b,d9:r.a}}({gg:D(Tu,30,-5,5),bi:D(Tu,0,5,5),fH:cd})}),ek:.1,ep:{a:Vt(o),b:Vt(t)},et:X(fo,Pc,Ki(e)),ew:Lb(1e4),eL:X(fg,ag,xb),fE:Xb,fQ:gb}),X(Sb,C([yp("menu")]),C([X(Sb,R,C([X(Pb,R,C([qb("Rocket League")])),X(Sb,R,C([wc({c2:1===Fr(r.aX),dd:"mode",df:"One Player",dC:function(){return{$:2,a:C([{a:Cu,b:1}])}},d4:"1p"}),wc({c2:2===Fr(r.aX),dd:"mode",df:"Two Player",dC:function(){return{$:2,a:sg}},d4:"2p"})])),X(Sb,C([yp("btn-row")]),C([X(xp,C([Mc(hp),yp("btn-primary")]),C([qb("Let's go!")]))]))])),X(Sb,C([X($p,"display","flex")]),X(xt,h(function(n,e){e=e.a;return X(Sb,C([X($p,"flex-grow","1"),X($p,"padding","0 12px"),X($p,"min-width","180px")]),X(Qr,X(Rb,C([X($p,"margin","12px 0 8px")]),C([qb(dt(n+1)+"p controls")])),X(fo,function(n){var e=n.a,n=n.b;return X(Sb,C([yp("controls-row")]),C([X(og,R,C([qb(" "===e?"Spacebar":e)])),X(og,R,C([qb(function(n){switch(n.$){case 0:return"Jump";case 1:return"Rocket";case 2:return y(e=n.a,-1)?"Turn Left":1===e?"Turn Right":"shrug";case 3:var e;return y(e=n.a,-1)?"Brake":1===e?"Gas":"shrug";case 4:return"Toggle Camera";default:return"Pause"}}(n))]))]))},Gr(e))))}),r.aX))]))]);case 3:var a=n.a,i=X(Sb,C([yp("hud-pane hud-top-center hud-score-clock")]),C([X(og,C([yp("hud-score hud-score-orange")]),C([qb(dt(a.am.bp))])),(r=Lt(Ga(e=a.a7)),e=X(At,0,Vt(r/60)),r=X(At,0,r%60),X(og,C([yp("hud-clock")]),C([qb(dt(e)),qb(":"),qb(function(n){for(;;){if(2<=Gt(n))return n;n="0"+n}}(dt(r)))]))),X(og,C([yp("hud-score hud-score-blue")]),C([qb(dt(a.am.bc))]))])),c=function(){var n=a.N;switch(n.$){case 0:var e=n.b;return X(Pb,C([yp("hud-pane hud-pane-msg center-popup")]),C([qb(dt(Lt(Ga(e))))]));case 3:return X(Pb,C([yp("hud-pane hud-pane-msg center-popup")]),C([qb("GOOAAALLLL!!!!!")]));case 4:return X(Sb,C([yp("hud-pane hud-pane-msg center-popup")]),C([X(Pb,R,C([qb(0<x(a.am.bc,a.am.bp)?"Blue wins!!!":"Orange wins!!!")])),X(Sb,C([yp("btn-row")]),C([X(xp,C([yp("btn-primary"),Mc(gp)]),C([qb("Menu")]))]))]));default:return qb("")}}(),u=a.ag,l=xo(C([xo(X(fo,function(n){var e=X(qo,Ta,function(n){return n.m})(n);return e.$?R:X(rg,n,e.b)},X(ys,X(qo,Ta,X(qo,function(n){return n.m},Rc)),Ki(a.G)))),X(fo,function(n){return X(pg,X(Xm,a.aI,n),n)},a.a4)]));n:for(;;){if(u.b){if(u.b.b){if(u.b.b.b)break n;var f={l:d.a5.l,g:d.a5.g/2},s=X(Sb,C([X($p,"display","flex")]),X(fo,function(n){return X(Sb,C([X($p,"position","relative")]),z(wg,f,n,a,l))},X(tg,function(n){return n.m},u)));return C([s,i,c])}return v(z(wg,d.a5,u.a,a,l),C([i,c]))}break n}return C([qb("Too many players: "+dt(Fr(u)))]);default:return C([X(Nb,R,C([qb("Error: "+n.a)]))])}}())}});F={Main:{init:F(Ht(0))(0)}},n.Elm?function n(e,r){for(var t in r)t in e?"init"==t?E(6):n(e[t],r[t]):e[t]=r[t]}(n.Elm,F):n.Elm=F}(this);